{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./vue/proxy.js","webpack:///./vue/observe/observeArray.js","webpack:///./vue/observe/reactive.js","webpack:///./vue/observe/array.js","webpack:///./vue/observe/index.js","webpack:///./vue/shared/util.js","webpack:///./vue/state.js","webpack:///./vue/compiler/parser.js","webpack:///./vue/compiler/generate.js","webpack:///./vue/vdom/patch.js","webpack:///./vue/vdom/vnode.js","webpack:///./vue/index.js","webpack:///./vue/init.js","webpack:///./vue/compiler/index.js","webpack:///./vue/lifecycle.js","webpack:///./vue/vdom/index.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","vm","target","newValue","arr","length","defineReactive","data","console","log","set","slice","Array","arrayProto","arrayMethods","Observer","val","isArray","__proto__","this","walk","forEach","method","original","inserted","args","arguments","result","apply","keys","obj","initState","$options","$data","initData","attribute","ncname","qnameCapture","startTagOpen","RegExp","startTagClose","endTag","parseHtml","html","stack","root","text","currentParent","textEnd","indexOf","startTagMatch","parseStartTag","start","tagName","attrs","endTagMatch","match","advance","end","substring","chars","attr","push","tag","element","type","children","parent","createASTElement","pop","trim","defaultTagRE","generate","el","map","node","index","lastIndex","test","JSON","stringify","exec","join","genNode","genChildren","str","attrValue","split","itemArr","jointAttrs","patch","oldNode","vNode","createElement","vnode","props","document","newProps","sKey","style","className","class","setAttribute","updateProps","child","appendChild","createTextNode","parentElement","parentNode","insertBefore","nextSibling","removeChild","options","_init","Vue","$mount","render","template","$el","querySelector","outerHTML","ast","code","Function","compileToFunctions","_update","_render","mountComponent","lifecycleMixin","_c","_s","_v","undefined","createTextVnode","renderMixin","tip","studentNum","subject","bookInfo","author","age","studentList","id"],"mappings":"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","file":"js/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","function proxy (vm, target, key) {\n  // Object.defineProperty() 方法会直接在一个对象上定义一个新属性，或者修改一个对象的现有属性，并返回此对象。\n  // 将属性都挂载到 vm（Vue实例）上，并设置属性的 getter/setter，以实现数据代理：vm.name --> vm.$data.name\n  Object.defineProperty(vm, key, {\n    get () {\n      return vm[target][key]; // vm[target][key] --> vm.$data.name\n    },\n    set (newValue) {\n      vm[target][key] = newValue;\n    }\n  });\n}\n\nexport default proxy;","import observe from './index';\n\nfunction observeArray (arr) {\n  for (let i = 0; i < arr.length; i ++) {\n    observe(arr[i]); // 递归观察，arr[i]可能是一个对象\n  }\n}\n\nexport default observeArray;","import observe from \"./index\";\n\nfunction defineReactive (data, key, value) {\n  \n  // 递归观察，value可能是一个对象\n  observe(value); \n\n  // Object.defineProperty() 方法会直接在一个对象上定义一个新属性，或者修改一个对象的现有属性，并返回此对象。\n  // 它是实现数据劫持的关键所在。\n  Object.defineProperty(data, key, {\n    get: function reactiveGetter () {\n      console.log('获取', value);\n      return value;\n    },\n    set: function reactiveSetter (newValue) {\n      console.log('设置', newValue);\n      if (newValue === value) return; // 同名属性，不需要重新赋值或观察\n      observe(value); // 递归观察，value可能是一个对象\n      value = newValue;\n    }\n  });\n}\n\nexport {\n  defineReactive\n};","import observeArray from './observeArray';\n\n// 存储数组方法\nconst methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\nconst slice = Array.prototype.slice;\nconst arrayProto = Array.prototype; // 存储数组原型\nconst arrayMethods = Object.create(arrayProto); // 创建一个新的数组原型对象\n\nmethodsToPatch.forEach(function (method) {\n  \n  const original = arrayProto[method]; // 缓存数组的原方法\n  \n  arrayMethods[method] = function () {\n\n    let inserted; // 存储数组中新增的值，默认undefined\n    let args = slice.call(arguments); // 将 arguments 转成一个新的数组并返回\n\n    // 这里可以不要返回值，直接写：original.apply(this, args)\n    const result = original.apply(this, args); // 使用数组的原生方法，对数组进行增、删。\n\n    // console.log('数组新方法', args);\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        // splice() 方法用于添加或删除数组中的元素\n        // 删除：splice(0, 1) --> args 即 [0, 1]\n        // 增加：splice(1, 0, '新增') --> args 即 [1, 0, '新增']\n\n        // slice() 方法可从已有的数组中返回选定的元素\n        // args.slice(2)，固定下标值为 2，是因为 splice 的使用方式：\n        // splice，若是删除，则 args.slice(2) 返回空数组\n        // splice，若是新增，则 args.slice(2) 返回一个新数组，里面是所有新增的数据\n        inserted = args.slice(2);\n        break;\n      default:\n        break;\n    }\n\n    // inserted 为真（空数组 --> []，也是真），则调用 observeArray() 方法对其进行观察\n    inserted && observeArray(inserted);\n\n    return result;\n  }\n});\n\nexport {\n  arrayMethods\n}","import observeArray from './observeArray';\nimport { defineReactive } from './reactive';\nimport { arrayMethods } from './array';\nimport { isObject } from '../shared/util';\n\n\nfunction observe (val) {\n  \n  // 检查 val 是否为对象（注意：在 js 中，数组也是对象，isObject并不排除数组）。\n  if (!isObject(val)) return;\n  return new Observer(val);\n}\n\n\nfunction Observer (val) {\n\n  if (Array.isArray(val)) {\n    // arrayMethods 中存储的是：重写的数组方法，例如：push、unshift 等。\n    // 重写为了在更改数组中的数据时，做出更多操作。比如，通过 push 方法向数组中新添数据时，\n    // 需要对新的数据进行观察，设置 getter/setter，否则它们将不能在后续的修改中做出反应。\n    // 实际上，重写的数组方法，其内部依旧使用数组的原生方法来实现数据的增、删。\n\n    val.__proto__ = arrayMethods; // 使用 __proto__ 拦截原型链来增加目标对象\n    observeArray(val); // 观察数组（Array）的每一项\n  } else {\n    this.walk(val); // 观察对象（Object --> {}）\n  }\n}\n\n// 遍历所有属性并将它们转换为 getter/setter。仅当值类型为 Object 时才应调用此方法\nObserver.prototype.walk = function (data) {\n\n  // Object.keys() 方法会返回一个由一个给定对象的自身可枚举属性组成的数组，\n  // 数组中属性名的排列顺序和正常循环遍历该对象时返回的顺序一致 。\n  const keys = Object.keys(data);\n   \n  for (let i = 0; i < keys.length; i ++) {\n\n    const key = keys[i]; // 属性\n    const value = data[key]; // 属性值\n\n    // 在对象上定义一个反应性属性\n    defineReactive(data, key, value);\n\n  }\n\n}\n\nexport default observe;","// 对象检测\r\nexport function isObject (obj) {\r\n    return obj !== null && typeof obj === 'object'\r\n}","import proxy from './proxy';\r\nimport observe from './observe/index';\r\n\r\nfunction initState (vm) {\r\n  const options = vm.$options;\r\n\r\n  if (options.data) {\r\n    initData(vm); // 初始化 data\r\n  }\r\n}\r\n\r\nfunction initData (vm) {\r\n  let data = vm.$options.data;\r\n\r\n  // Vue 中的 data 可以是函数（Vue 中建议将 data 作为一个函数来使用），也可以是 Object --> {}\r\n  data = vm.$data = typeof data === 'function' ? data.call(vm) : data || {};\r\n  \r\n  for (var key in data) {\r\n    // proxy 实现数据代理，vm.name --> vm.$data.name\r\n    proxy(vm, '$data', key);\r\n  }\r\n\r\n  // observe 观察者，对数据进行观测，以便在其发生改变时，做出反应。\r\n  observe(vm.$data); \r\n}\r\n\r\nexport {\r\n    initState\r\n}","// 匹配属性： id=\"app\" id='app' id=app\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\n// 匹配标签：<my-header></my-header>\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\n// 匹配标签：<my:header></my:header>\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\n// 匹配开始标签：<div\nconst startTagOpen = new RegExp(`^<${qnameCapture}`);\n// 匹配闭合标签： > 或 />\nconst startTagClose = /^\\s*(\\/?)>/;\n// 匹配结束标签： </div>\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);\n\n/*\n  假设模板样例：\n   <div id=\"app\" style=\"color: #f66;font-size: 20px;\">\n    函数字符串，{{ tip }}\n    <span class=\"cla\">{{ studentNum }}</span>\n  </div>\n*/\n\n// 解析模版字符串，生成 AST 语法树\nfunction parseHtml(html) {\n  const stack = []; // 所有开始标签的初始 AST 对象\n  let root; // 最终返回的 AST 对象\n  let text; // 纯文本\n  let currentParent; // 当前元素的父级\n\n  // vue2.0 源码中对以下几种情况分别进行了处理：注释标签、条件注释标签、Doctype、开始标签、结束标签。\n  // 而每当处理完一种情况时，都会阻断代码继续往下执行且开启新的一轮循环（注：使用 continue 实现 ），\n  // 并且会重置 html 字符串，也就是删掉匹配到的 html 字符串，保留未匹配的 ，以便在下一次循环处理。\n\n  // 提示：在解读以上几种情况的源码时，配合模板样例来理解会让你理解起来更容易。\n  while (html) {\n    // textEnd 为 0，则说明是一个开始标签。\n    let textEnd = html.indexOf('<');\n\n    if (textEnd === 0) {\n      // 解析开始标签及其属性并将其存放在一个对象中返回，例如：\n      // { tagName: 'div', attrs: [{ name: 'id', value: 'app' }] }\n      const startTagMatch = parseStartTag();\n      console.log('解析——开始标签——结果', startTagMatch);\n\n      // 处理开始标签\n      if (startTagMatch) {\n        start(startTagMatch.tagName, startTagMatch.attrs);\n        continue; // 执行到 continue，将开始新的一轮循环，后续代码不会执行\n      }\n\n      const endTagMatch = html.match(endTag); // 匹配结束标签\n\n      // 处理结束标签\n      if (endTagMatch) {\n        advance(endTagMatch[0].length);\n        end(endTagMatch[1]);\n        continue;\n      }\n    }\n    // 截取 HTML 模版字符串中的文本\n    if (textEnd > 0) {\n      text = html.substring(0, textEnd);\n    }\n    // 处理文本内容\n    if (text) {\n      advance(text.length);\n      chars(text);\n    }\n  }\n\n  // 解析开始标签及其属性，例如：<div id=\"app\">\n  function parseStartTag() {\n    // 如果没有找到任何匹配的文本， match() 将返回 null。否则，它返回一个数组，\n    // 其中存放了与它找到的匹配文本有关的信息。\n    const start = html.match(startTagOpen); // 匹配开始标签\n    let end, attr;\n    if (start) {\n      // 存放开始标签名和属性\n      const match = {\n        tagName: start[1], // 开始标签的名，例如：div\n        attrs: [] // 开始标签的属性，例如：{ name: 'id', value: 'app' }\n      }\n\n      // 删除已匹配到的 HTML 字符串，保留未匹配到的。\n      // 例如：匹配到 <div id=\"app\"></div> 中的 <div，调用 advance() 方法后，\n      // 原 HTML 字符窜就是这样：id=\"app\"></div>\n      advance(start[0].length);\n\n      // 当匹配到属性（ 形如：id='app'），但未匹配到开始标签的闭合（ 形如：> ）时，进入循环\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        match.attrs.push({\n          name: attr[1], // 属性名: id\n          // 若是你在通过 new 关键字创建 vue 实例时，提供了 template 选项\n          // 且在它的字符串中,有的标签的属性使用的是单引号或者没有带引号，\n          // 例如：<div id='app'></div> 或 <div id=app></div> 这种形式，那么\n          // 在匹配标签的属性时，其返回的数组中这个属性的值，可能在此数组的 下标4 或 下标5\n          value: attr[3] || attr[4] || attr[5] // 属性值: app\n        });\n\n        advance(attr[0].length);\n      }\n\n      // 如果匹配到开始标签的闭合（ 形如：> ），则返回 match 对象\n      if (end) {\n        advance(end[0].length);\n        return match;\n      }\n    }\n  }\n  // 截取 HTML 字符串，将已匹配到的字符从原有字符中删除。\n  function advance(n) {\n    // substring() 方法用于提取字符串中介于两个指定下标之间的字符。\n    html = html.substring(n);\n  }\n\n  function start(tag, attrs) {\n    // 创建 AST 对象\n    const element = createASTElement(tag, attrs);\n    // 如果 root 根节点不存在，则说明当前节点即是整个模版的最顶层节点，也就是第一个节点\n    if (!root) {\n      root = element;\n    }\n    // 保存当前父节点（AST 对象）\n    currentParent = element;\n    // 将 AST 对象 push 到 stack 栈中，当解析到其相对应的结束标签时，\n    // 则将这个标签对应的 AST 对象 从栈中 pop 出来。\n\n    // 原因：解析开始标签时，是顺时针；解析结束标签时，是逆时针。结合模板样例看，\n    // 解析顺序如下：<div> => <span> => ...  => </span> => </div>\n\n    // 因此，解析开始标签生成的 AST 对象被 push 到栈中后，若想在解析到其相应的结束标签时取出，\n    // 则要使用 pop。整个操作流程，结合 start() 和 end() 方法一起看，会更易理解。\n\n    stack.push(element);\n  }\n\n  function end(tag) {\n    // pop() 方法将删除数组的最后一个元素，把数组长度减 1，并且返回它删除的元素的值。\n    // 如果数组已经为空，则 pop() 不改变数组，并返回 undefined 值。\n\n    const element = stack.pop(); // 获取当前元素标签的 AST 对象\n    currentParent = stack[stack.length - 1]; // 获取当前元素标签的父级 AST 对象\n\n    if (currentParent) {\n      // 标记父子元素\n      element.parent = currentParent; // 子元素存储父元素\n      currentParent.children.push(element); // 父元素存入子元素\n    }\n  }\n\n  function chars(text) {\n    text = text.trim(); // 去掉首尾空格\n    // 若文本存在，则直接放入父级的 children 中\n    if (text.length > 0) {\n      currentParent.children.push({\n        type: 3, // 文本元素的节点类型（nodeType）：3\n        text\n      });\n    }\n  }\n\n  return root;\n}\n\n// 生成 AST 对象\nfunction createASTElement(tagName, attrs) {\n  return {\n    tag: tagName, // 标签名\n    type: 1, // 标签元素的节点类型（nodeType）：1\n    children: [], // 标签子级\n    attrs, // 标签属性\n    parent // 标签父级\n  }\n}\n\n\nexport {\n  parseHtml\n}","/* \n  以下三个个函数的作用：\n\n  _c() => createElement() 创建元素节点\n\n  _v() => createTextNode() 创建文本节点\n\n  _s(value) => _s(tip) 解析双大括号，例如：{{tip}}\n*/\n\n/*\n  AST => render 渲染函数\n\n  function render() {\n    return `_c(\"div\",{id: \"app\",style:{ \"color\":\"#f66\",\"font-size\":\"20px\"}},\n      _v(\"函数字符串，\"+_s(tip)),\n      _c(\"span\", { \"class\": \"cla\", \"style\": { \"color\": \"green\" } }, _v(_s(studentNum)))  \n    )`;\n  }\n*/\n\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // 匹配双大括号 => {{tip}}\n\n\n// 生成函数字符串\nfunction generate(el) {\n  const children = genChildren(el);\n  const code = `_c('${el.tag}', ${el.attrs.length > 0 ? `${jointAttrs(el.attrs)}` : 'undefined'}${children ? `,${children}` : ''})`;\n\n  return code;\n}\n\n// 将属性拼接成字符串，例如：`style:{ \"color\":\"#f66\",\"font-size\":\"20px\"}`\nfunction jointAttrs(attrs) {\n  let str = '';\n\n  for (let i = 0; i < attrs.length; i++) {\n    let attr = attrs[i];\n    // 处理 style 属性\n    if (attr.name === 'style') {\n      let attrValue = {};\n\n      attr.value.split(';').map((itemArr) => {\n        let [key, value] = itemArr.split(':');\n        if (key) {\n          attrValue[key] = value;\n        }\n      });\n      attr.value = attrValue;\n    }\n    // 拼接属性（注意：不要忘记逗号）\n    str += `${attr.name}:${JSON.stringify(attr.value)},`\n  }\n\n  // str.slice(0, -1) 是为了去掉字符串最后一个逗号\n  return `{${str.slice(0, -1)}}`;\n}\n\n// 生成子节点\nfunction genChildren(el) {\n\n  const children = el.children;\n  // 是否存在子节点\n  if (children.length) {\n    return children.map(c => genNode(c)).join(',');\n  }\n}\n\nfunction genNode(node) {\n  if (node.type === 1) { // 元素节点\n    return generate(node);\n  } else if (node.type === 3) { // 文本节点\n    let match,\n      index,\n      arr = [],\n      text = node.text,\n      // lastIndex 下一次匹配开始的位置。每次循环时，都将其初始为 0，是为防止处理其它文本时，\n      // 取到 lastIndex 是上一个循环结束后保留下的值而导致出错。\n      lastIndex = defaultTagRE.lastIndex = 0;\n\n    if (!defaultTagRE.test(text)) { // 处理纯文本\n      return `_v(${JSON.stringify(text)})`;\n    }\n\n    // 样例参考：<div>函数字符串，{{ tip }} 哈哈</div>\n\n    // 处理双大括号和其之前的纯文本：函数字符串，{{ tip }}\n    while (match = defaultTagRE.exec(text)) {\n\n      index = match.index; // 双大括号的下标位置\n\n      if (index > lastIndex) { // 截取双大括号前面的纯文本\n        arr.push(JSON.stringify(text.slice(lastIndex, index)));\n      }\n\n      arr.push(`_s(${match[1].trim()})`); // 双大括号\n      lastIndex = index + match[0].length; // 标记下一次匹配开始的位置\n    }\n\n    // 处理双大括号之后的存文本：哈哈\n    if (lastIndex < text.length) {\n      arr.push(JSON.stringify(text.slice(lastIndex)));\n    }\n\n    return `_v(${arr.join('+')})`; // 拼接整行文本\n  }\n}\n\nexport {\n  generate\n}","function patch(oldNode, vNode) {\n  let el = createElement(vNode),\n    parentElement = oldNode.parentNode;\n\n  parentElement.insertBefore(el, oldNode.nextSibling);\n  parentElement.removeChild(oldNode);\n}\n\n// 创建节点\nfunction createElement(vnode) {\n  const { tag, props, children, text } = vnode;\n\n  if (typeof tag === 'string') {\n    vnode.el = document.createElement(tag);\n    updateProps(vnode);\n    children.map((child) => {\n      vnode.el.appendChild(createElement(child));\n    })\n  } else {\n    vnode.el = document.createTextNode(text);\n  }\n\n  return vnode.el;\n}\n\nfunction updateProps(vnode) {\n  const el = vnode.el,\n    newProps = vnode.props || {};\n\n  for (let key in newProps) {\n    if (key === 'style') {\n      for (let sKey in newProps.style) {\n        el.style[sKey] = newProps.style[sKey];\n      }\n    } else if (key === 'class') {\n      el.className = el.class;\n    } else {\n      el.setAttribute(key, newProps[key]);\n    }\n  }\n}\n\nexport {\n  patch\n}","function createElement (tag, attrs = {}, ...children) {\n  return vnode(tag, attrs, children);\n}\n\nfunction createTextVnode (text) {\n  return vnode(undefined, undefined, undefined, text);\n}\n\nfunction vnode (tag, props, children, text) {\n  return {\n    tag,\n    props,\n    children,\n    text\n  }\n}\n\nexport {\n  createElement,\n  createTextVnode\n}","import { initMixin } from './init';\nimport { lifecycleMixin } from './lifecycle';\nimport { renderMixin } from './vdom/index';\n\nfunction Vue(options) {\n  // 通过关键字 new 创建 Vue实例时，便会调用 Vue 原型方法 _init 初始化数据\n  this._init(options);\n}\n\n// 执行 initMixin，会在 Vue.prototype（Vue原型）上挂载 _init 方法\ninitMixin(Vue);\n// 在 Vue.prototype 上挂载 _update 方法\nlifecycleMixin(Vue);\n// 在 Vue.prototype 上挂载 _render()、 _c()、 _v() 和  _s()函数\nrenderMixin(Vue);\n\nexport default Vue;","import { initState } from './state';\nimport { compileToFunctions } from './compiler';\nimport { mountComponent } from './lifecycle';\n\nfunction initMixin(Vue) {\n  Vue.prototype._init = function (options) {\n    const vm = this; // 存储 this（ Vue实例 ）\n    vm.$options = options; // 将 options 挂载到 vm 上，以便后续使用\n\n    // Vue 实例中的 data、 props、methods、computed 和 watch，都会在 initState 函数中\n    // 进行初始化。由于我们主要解说：Vue 数据劫持，所以只对 data 进行处理。\n    initState(vm);\n\n    if (vm.$options.el) {\n      // Vue.prototype.$mount --> 挂载函数\n      vm.$mount(vm.$options.el);\n    }\n  }\n\n  Vue.prototype.$mount = function (el) {\n    const vm = this;\n    const options = vm.$options;\n\n    // Vue 选项中的 render 函数若存在，则 Vue 构造函数不会从 \n    // template 选项或通过 el 选项指定的挂载元素中提取出的 HTML 模板编译渲染函数。\n\n    // 处理模板（优先级）: render  >  template   >  html模板\n\n    // 若是 render 函数不存在，就生成 render\n    if (!options.render) {\n\n      let template = options.template; // 获取模板\n\n      // el存在，且 template 不存在\n      if (el && !template) {\n        // 挂载 el（ HTML 模板），以便在实例的 _update 方法中使用\n        vm.$el = document.querySelector(el);\n        template = vm.$el.outerHTML;\n      }\n\n      // 编译模板，生成 AST 抽象语法树并将其生成渲染函数 render\n      const render = compileToFunctions(template);\n      options.render = render; // 挂载 render\n    }\n\n    mountComponent(vm);\n  }\n}\n\nexport {\n  initMixin\n}","import { parseHtml } from './parser';\nimport { generate } from './generate';\n\n//编译：HTML字符串（ template ） => AST => render\nfunction compileToFunctions(html) {\n  // 解析 HTML 字符串，将其转换成 AST 抽象语法树\n  const ast = parseHtml(html);\n  console.log('生成 AST 语法树', ast);\n  // 将 AST 转换成函数字符串\n  const code = generate(ast);\n  console.log('AST 转换成函数字符串', code);\n  // 生成 render 渲染函数\n  const render = new Function(`with(this){ return ${code} }`);\n\n  return render;\n}\n\nexport {\n  compileToFunctions\n}","import { patch } from './vdom/patch';\n\n// 挂载组件\nfunction mountComponent(vm) {\n  // vm._render() 返回虚拟节点 vnode\n  vm._update(vm._render()); // 更新组件\n}\n\n\nfunction lifecycleMixin(Vue) {\n  // 挂载 _update() 更新函数\n  Vue.prototype._update = function (vnode) {\n    const vm = this;\n    patch(vm.$el, vnode);\n  }\n}\n\nexport {\n  lifecycleMixin,\n  mountComponent\n}","import { createElement, createTextVnode } from './vnode';\n\nfunction renderMixin(Vue) {\n  Vue.prototype._c = function () {\n    return createElement(...arguments);\n  }\n\n  Vue.prototype._s = function (value) {\n    if (value === null) return;\n    return typeof value === 'object' ? JSON.stringify(value) : value;\n  }\n\n  Vue.prototype._v = function (text) {\n    return createTextVnode(text);\n  }\n\n  Vue.prototype._render = function () {\n    const vm = this;\n    // const render = vm.$options.render;\n    const vnode = vm.$options.render.call(vm);\n\n    return vnode;\n  }\n}\n\nexport {\n  renderMixin\n}","import Vue from 'vue';\n\nconst vm = new Vue({\n  el: '#app',\n  data() {\n    return {\n      tip: '搞定',\n      studentNum: 1,\n      subject: ['历史', '文化'],\n      bookInfo: {\n        name: '三国演义',\n        author: {\n          name: '罗贯中',\n          age: 18\n        }\n      },\n      studentList: [\n        {\n          id: 1,\n          name: '小明'\n        }\n      ]\n    }\n  }\n});\n\nconsole.log('vm实例', vm);\nvm.studentList.push({ id: 2, name: '葡萄' });\nconsole.log(vm.studentList, '几个人');"],"sourceRoot":""}