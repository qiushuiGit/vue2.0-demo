{"version":3,"file":"vue.js","sources":["../../src/core/instance/proxy.js","../../src/shared/util.js","../../src/core/observer/dep.js","../../src/core/observer/array.js","../../src/core/observer/index.js","../../src/core/instance/state.js","../../src/core/util/next-tick.js","../../src/core/observer/scheduler.js","../../src/core/observer/watcher.js","../../src/core/instance/lifecycle.js","../../src/compiler/parser/text-parser.js","../../src/compiler/parser/html-parser.js","../../src/compiler/helpers.js","../../src/compiler/parser/index.js","../../src/compiler/codegen/index.js","../../src/compiler/index.js","../../src/web/compiler/modules/class.js","../../src/web/compiler/util/style.js","../../src/web/compiler/modules/style.js","../../src/web/compiler/modules/index.js","../../src/web/compiler/options.js","../../src/web/runtime/node-ops.js","../../src/core/vdom/vnode.js","../../src/core/vdom/patch.js","../../src/web/runtime/util/attrs.js","../../src/web/runtime/modules/attrs.js","../../src/web/runtime/util/class.js","../../src/web/runtime/modules/class.js","../../src/web/runtime/util/style.js","../../src/web/runtime/modules/style.js","../../src/web/runtime/modules/index.js","../../src/web/runtime/patch.js","../../src/core/instance/init.js","../../src/core/vdom/helpers/normalize-children.js","../../src/core/vdom/create-element.js","../../src/core/instance/render-helpers/render-list.js","../../src/core/instance/render-helpers/index.js","../../src/core/instance/render.js","../../src/core/instance/index.js","../../src/core/index.js"],"sourcesContent":["function proxy (vm, target, key) {\n  // Object.defineProperty() 方法会直接在一个对象上定义一个新属性，或者修改一个对象的现有属性，并返回此对象。\n  // 将属性都挂载到 vm（Vue实例）上，并设置属性的 getter/setter，以实现数据代理：vm.name --> vm.$data.name\n  Object.defineProperty(vm, key, {\n    get () {\n      return vm[target][key]; // vm[target][key] --> vm.$data.name\n    },\n    set (newValue) {\n      vm[target][key] = newValue;\n    }\n  });\n}\n\nexport default proxy;","// done: 从数组中删除一个项\r\nexport function remove(arr, item) {\r\n  if (arr.length) {\r\n    const index = arr.indexOf(item);\r\n    if (index > -1) {\r\n      return arr.splice(index, 1);\r\n    }\r\n  }\r\n}\r\n\r\n// done: 获取值的原始类型字符串，例如，[object object]。\r\nconst _toString = Object.prototype.toString;\r\n\r\n// done: 严格的对象类型检查。\r\n// 仅对普通 JavaScript 对象返回 true。\r\nexport function isPlainObject(obj) {\r\n  return _toString.call(obj) === '[object Object]';\r\n}\r\n\r\n// done: 检查对象是否具有该属性\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nexport function hasOwn(obj, key) {\r\n  return hasOwnProperty.call(obj, key);\r\n}\r\n\r\n// done:: 是否存在 __proto__\r\nexport const hasProto = '__proto__' in {};\r\n\r\n// done: 将连字符分隔的字符串驼峰化，例如：background-color --> backgroundColor\r\nconst camelizeRE = /-(\\w)/g;\r\nexport const camelize = cached((str) => {\r\n  return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\n\r\n// done: 用连字符连接驼峰字符串\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\nexport const hyphenate = cached((str) => {\r\n  return str.replace(hyphenateRE, '-$1').toLowerCase();\r\n});\r\n\r\n// done: 定义一个属性\r\nexport function def(obj, key, val, enumerable) {\r\n  Object.defineProperty(obj, key, {\r\n    value: val,\r\n    enumerable: !!enumerable,\r\n    writable: true,\r\n    configurable: true,\r\n  });\r\n}\r\n\r\n// done: 对象检测\r\nexport function isObject(obj) {\r\n  return obj !== null && typeof obj === 'object';\r\n}\r\n\r\n// done: 将对象数组合并为单个对象\r\nexport function toObject(arr) {\r\n  const res = {};\r\n  for (let i = 0; i < arr.length; i++) {\r\n    if (arr[i]) {\r\n      extend(res, arr[i]);\r\n    }\r\n  }\r\n  return res;\r\n}\r\n// done: 混合属性到目标对象中\r\nexport function extend(to, _from) {\r\n  for (const key in _from) {\r\n    to[key] = _from[key];\r\n  }\r\n  return to;\r\n}\r\n\r\n// done: 获取并删除（removeFromMap 为真） attrsMap 中的属性\r\nexport function getAndRemoveAttr(el, name, removeFromMap) {\r\n  if (removeFromMap) {\r\n    delete el.attrsMap[name];\r\n  }\r\n  return el.attrsMap[name];\r\n}\r\n\r\n// done: 创建一个纯函数的缓存\r\nexport function cached(fn) {\r\n  const cache = Object.create(null);\r\n  return function cachedFn(str) {\r\n    const hit = cache[str];\r\n    return hit || (cache[str] = fn(str));\r\n  };\r\n}\r\n\r\n// done: 判断 Symbol 和 Reflect 是否都存在\r\nexport const hasSymbol =\r\n  typeof Symbol !== 'undefined' &&\r\n  isNative(Symbol) &&\r\n  typeof Reflect !== 'undefined' &&\r\n  isNative(Reflect.ownKeys);\r\n\r\n// done: native 代码实现的 built-in 函数 \r\nexport function isNative(Ctor) {\r\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString());\r\n}\r\n\r\n// done: 参数等于 undefined 或 null\r\nexport function isUndef(v) {\r\n  return v === undefined || v === null;\r\n}\r\n\r\n// done: 参数不等于 undefined 和 null\r\nexport function isDef(v) {\r\n  return v !== undefined && v !== null;\r\n}\r\n\r\n// done: 检查 value 是否为原始值\r\nexport function isPrimitive(value) {\r\n  return (\r\n    typeof value === 'string' ||\r\n    typeof value === 'number' ||\r\n    typeof value === 'symbol' ||\r\n    typeof value === 'boolean'\r\n  );\r\n}\r\n\r\n// done: 制作一个映射，并返回一个函数来检查键是否在该映射中。\r\nexport function makeMap(str, expectsLowerCase) {\r\n  const map = Object.create(null);\r\n  const list = str.split(',');\r\n\r\n  for (let i = 0; i < list.length; i++) {\r\n    map[list[i]] = true;\r\n  }\r\n\r\n  return expectsLowerCase ? (val) => map[val.toLowerCase()] : (val) => map[val];\r\n}\r\n// done: 真\r\nexport function isTrue(v) {\r\n  return v === true;\r\n}\r\n// done: 假\r\nexport function isFalse(v) {\r\n  return v === false;\r\n}\r\n\r\n/**\r\n  done: 在JavaScript中，您可以使用比函数预期更多的参数来调用函数。\r\n (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).\r\n */\r\nexport function noop(a, b, c) {}\r\n\r\n// done: 错误提示\r\nexport function warn(msg) {\r\n  console.error(`[Vue warn]: ${msg}`);\r\n}\r\n// done: 一个只适用于原始键的非标准Set polyfill\r\nexport const _Set = (function () {\r\n  function Set() {\r\n    this.set = Object.create(null);\r\n  }\r\n  Set.prototype.has = function has(key) {\r\n    return this.set[key] === true;\r\n  };\r\n  Set.prototype.add = function add(key) {\r\n    this.set[key] = true;\r\n  };\r\n  Set.prototype.clear = function clear() {\r\n    this.set = Object.create(null);\r\n  };\r\n\r\n  return Set;\r\n})();\r\n\r\n","import { remove } from '../../shared/util';\n\n\nlet uid = 0;\n\n/**\n * dep 是一个存储可观察对象的对象（俗称订阅器）。\n */\nexport default class Dep {\n  static target;\n\n  constructor() {\n    this.id = uid++;\n    this.subs = [];\n  }\n  // 添加\n  addSub(sub) {\n    this.subs.push(sub);\n  }\n  // 删除\n  removeSub(sub) {\n    remove(this.subs, sub);\n  }\n  // 添加依赖项\n  depend() {\n    if (Dep.target) {\n      Dep.target.addDep(this);\n    }\n  }\n  // 通知更新\n  notify() {\n    // 考虑到数据安全和稳定性，这里获取订阅列表的一个副本\n    const subs = this.subs.slice();\n    for (let i = 0, l = subs.length; i < l; i++) {\n      console.log('通知更新--->notify', subs[i]);\n      subs[i].update(); // 更新\n    }\n  }\n}\n\n// 当前正在处理的目标订阅者。\n// 由于同一时间，只有一个订阅者可以被计算，所以这应是全局唯一的，\nDep.target = null;\nconst targetStack = [];\n\nexport function pushTarget(target) {\n  targetStack.push(target);\n  Dep.target = target;\n}\n\nexport function popTarget() {\n  targetStack.pop();\n  Dep.target = targetStack[targetStack.length - 1];\n}\n","import { def } from '../../shared/util';\n\n// 存储数组方法\nconst methodsToPatch = [\n    'push',\n    'pop',\n    'shift',\n    'unshift',\n    'splice',\n    'sort',\n    'reverse'\n];\n\nconst slice = Array.prototype.slice;\nconst arrayProto = Array.prototype; // 存储数组原型\nconst arrayMethods = Object.create(arrayProto); // 创建一个新的数组原型对象\n\nmethodsToPatch.forEach(function (method) {\n\n    const original = arrayProto[method]; // 缓存数组的原方法\n\n    def(arrayMethods, method, function mutator(...args) {\n        // 使用数组的原生方法，对数组进行增、删。\n        const result = original.apply(this, args);\n        const ob = this.__ob__;\n        let inserted;\n\n        switch (method) {\n            case 'push':\n            case 'unshift':\n                inserted = args;\n                break\n            case 'splice':\n                // splice() 方法用于添加或删除数组中的元素\n                // 删除：splice(0, 1) --> args 即 [0, 1]\n                // 增加：splice(1, 0, '新增') --> args 即 [1, 0, '新增']\n\n                // slice() 方法可从已有的数组中返回选定的元素\n                // args.slice(2)，固定下标值为 2，是因为 splice 的使用方式：\n                // splice，若是删除，则 args.slice(2) 返回空数组\n                // splice，若是新增，则 args.slice(2) 返回一个新数组，里面是所有新增的数据\n                inserted = args.slice(2);\n                break\n        }\n        // inserted 为真（空数组 --> []，也是真），则调用 observeArray() 方法对其进行观察\n        if (inserted) ob.observeArray(inserted);\n        \n        return result\n    })\n\n\n\n    // arrayMethods[method] = function () {\n\n    //     let inserted; // 存储数组中新增的值，默认undefined\n    //     let args = slice.call(arguments); // 将 arguments 转成一个新的数组并返回\n\n    //     // 这里可以不要返回值，直接写：original.apply(this, args)\n    //     const result = original.apply(this, args); // 使用数组的原生方法，对数组进行增、删。\n\n    //     // console.log('数组新方法', args);\n    //     switch (method) {\n    //         case 'push':\n    //         case 'unshift':\n    //             inserted = args;\n    //             break;\n    //         case 'splice':\n    //             // splice() 方法用于添加或删除数组中的元素\n    //             // 删除：splice(0, 1) --> args 即 [0, 1]\n    //             // 增加：splice(1, 0, '新增') --> args 即 [1, 0, '新增']\n\n    //             // slice() 方法可从已有的数组中返回选定的元素\n    //             // args.slice(2)，固定下标值为 2，是因为 splice 的使用方式：\n    //             // splice，若是删除，则 args.slice(2) 返回空数组\n    //             // splice，若是新增，则 args.slice(2) 返回一个新数组，里面是所有新增的数据\n    //             inserted = args.slice(2);\n    //             break;\n    //         default:\n    //             break;\n    //     }\n\n    //     // inserted 为真（空数组 --> []，也是真），则调用 observeArray() 方法对其进行观察\n    //     inserted && observeArray(inserted);\n\n    //     return result;\n    // }\n});\n\nexport {\n    arrayMethods\n}","import Dep from './dep';\nimport { arrayMethods } from './array';\nimport {\n  isObject,\n  def,\n  hasProto,\n  hasOwn,\n  isPlainObject,\n} from '../../shared/util';\n\n// 返回一个由指定对象的所有自身属性的属性名（包括不可枚举属性但不包括Symbol值作为名称的属性）组成的数组。\nconst arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n// done: 尝试为某个值创建一个观察实例，\n// 如果成功地观察到，返回新的观察者，如果值已经有观察者，则返回现有的观察者。\nexport function observe(value, asRootData) {\n  // 检查 value 是否为对象（注意：在 js 中，数组也是对象，isObject 方法并不排除数组）。\n  if (!isObject(value)) return;\n\n  let ob;\n  // 检查对象是否具有 '__ob__' 属性且是一个观察者实例\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__; // 返回现有的观察实例\n  } else if (\n    // isPlainObject 判断值是否是普通对象，指其原始类型字符串是不是 [object object]\n    (Array.isArray(value) || isPlainObject(value)) &&\n    // Object.isExtensible() 方法判断一个对象是否是可扩展的（是否可以在它上面添加新的属性）。\n    Object.isExtensible(value) &&\n    // _isVue 是一个要被观察的标志\n    !value._isVue\n  ) {\n    ob = new Observer(value); // 返回新的观察实例\n  }\n\n  if (asRootData && ob) {\n    ob.vmCount++; // 记录实例个数\n  }\n\n  return ob;\n}\n\n// done: 附加到每个被观察对象的观察者类。\n// 一旦附加，观察者将目标对象的属性键转换为收集依赖项和分派更新的 getter/setter。\nexport class Observer {\n  constructor(value) {\n    this.value = value;\n    this.dep = new Dep();\n    this.vmCount = 0;\n\n    // 为当前 value 定义 __ob__ 属性，其值为 this（即当前 Observer 类）\n    def(value, '__ob__', this);\n\n    if (Array.isArray(value)) {\n      // 以是否存在 __proto__ 来判断使用何种方法增加扩充目标对象或数组\n      if (hasProto) {\n        protoAugment(value, arrayMethods);\n      } else {\n        copyAugment(value, arrayMethods, arrayKeys);\n      }\n\n      // 观察数组（Array）\n      this.observeArray(value);\n    } else {\n      // 观察对象（Object)\n      this.walk(value);\n    }\n  }\n\n  // done: 遍历所有属性并将它们转换为 getter/setter。\n  // 仅当值类型为 Object 时才应调用此方法\n  walk(obj) {\n    const keys = Object.keys(obj);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i]; // 属性\n      const value = obj[key]; // 属性值\n      defineReactive(obj, key, value);\n    }\n  }\n\n  // done: 观察数组（Array）的每一项\n  observeArray(items) {\n    for (let i = 0, l = items.length; i < l; i++) {\n      observe(items[i]);\n    }\n  }\n}\n// done: 定义响应式属性\nfunction defineReactive(obj, key, val, customSetter, shallow) {\n  // 创建订阅器\n  const dep = new Dep();\n  // Object.getOwnPropertyDescriptor 方法返回指定对象上一个自有属性对应的属性描述符（自有属性指的是\n  // 直接赋予该对象的属性，不需要从原型链上进行查找的属性）。\n  const property = Object.getOwnPropertyDescriptor(obj, key);\n  // 属性存在且不可配置，则阻止运行\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // 预定义 getter/setter\n  const getter = property && property.get;\n  const setter = property && property.set;\n  if ((!getter || setter) && arguments.length === 2) {\n    val = obj[key];\n  }\n\n  // 递归观察 val, 它可能是一个对象（shallow，控制是否递归）\n  let childOb = !shallow && observe(val);\n\n  // Object.defineProperty() 方法会直接在一个对象上定义一个新属性，或者修改一个对象的现有属性，并返回此对象。\n  // 它是实现数据劫持的关键所在。\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      const value = getter ? getter.call(obj) : val;\n      // Dep.target 当前目标订阅者\n      if (Dep.target) {\n        // 添加到订阅器\n        dep.depend(); \n        // 子观察实例\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value); // 收集数组元素上的依赖项\n          }\n        }\n      }\n\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      const value = getter ? getter.call(obj) : val;\n      // 同名属性，不需要重新赋值或观察\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return;\n      }\n\n      // 自定义setter\n      if (customSetter) {\n        customSetter();\n      }\n\n      // 对于没有 setter 的访问器属性，则阻止运行\n      if (getter && !setter) return;\n\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n\n      // 递归观察 newVal，它可能是一个对象\n      childOb = !shallow && observe(newVal);\n\n      dep.notify(); // 通知更新\n    },\n  });\n}\n\n// done: 通过使用 __proto__ 截取原型链来增加目标对象或数组\nfunction protoAugment(target, src) {\n  target.__proto__ = src;\n}\n\n// done: 通过定义隐藏属性来扩充目标对象或数组\nfunction copyAugment(target, src, keys) {\n  for (let i = 0, l = keys.length; i < l; i++) {\n    const key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n// 当数组被接触时，收集数组元素上的依赖项，因为我们不能像属性getter那样截取数组元素访问。\nfunction dependArray(value) {\n  for (let e, i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e); // 递归\n    }\n  }\n}\n","import proxy from './proxy';\r\nimport { observe } from '../observer/index';\r\n\r\nfunction initState (vm) {\r\n  vm._watchers = []; // 订阅者列表\r\n  const options = vm.$options;\r\n\r\n  if (options.data) {\r\n    initData(vm); // 初始化 data\r\n  }\r\n}\r\n\r\nfunction initData (vm) {\r\n  let data = vm.$options.data;\r\n\r\n  // Vue 中的 data 可以是函数（Vue 中建议将 data 作为一个函数来使用），也可以是 Object --> {}\r\n  data = vm.$data = typeof data === 'function' ? data.call(vm) : data || {};\r\n  \r\n  for (var key in data) {\r\n    // proxy 实现数据代理，vm.name --> vm.$data.name\r\n    proxy(vm, '$data', key);\r\n  }\r\n\r\n  // observe 观察者，对数据进行观测，以便在其发生改变时，做出反应。\r\n  observe(vm.$data); \r\n}\r\n\r\nexport {\r\n    initState\r\n}","// import { handleError } from './error'\nimport { isNative } from '../../shared/util';\n\nexport let isUsingMicroTask = false;\n\nconst callbacks = [];\nlet pending = false;\n\nfunction flushCallbacks() {\n  pending = false;\n  const copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (let i = 0; i < copies.length; i++) {\n    // console.log('flushCallbacks--->执行', copies[i]);\n    copies[i]();\n  }\n}\n\nlet timerFunc;\n// 若 Promise 不存在，则使用 setTimeout\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  // console.log('Promise---->存在吗');\n  const p = Promise.resolve();\n  timerFunc = () => {\n    p.then(flushCallbacks);\n  };\n  isUsingMicroTask = true;\n} else {\n  timerFunc = () => {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\nexport function nextTick(cb, ctx) {\n  let _resolve;\n  callbacks.push(() => {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        throw e;\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n\n  if (!pending) {\n    pending = true;\n    console.log('timerFunc----->是什么', timerFunc);\n    timerFunc();\n  }\n\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise((resolve) => {\n      _resolve = resolve;\n    });\n  }\n}\n","import { nextTick } from '../util/next-tick'\n\nexport const MAX_UPDATE_COUNT = 100;\n\nconst queue = []; // 订阅队列\nconst activatedChildren = [];\nlet has = {};\nlet circular = {};\nlet waiting = false;\nlet flushing = false;\nlet index = 0;\n\n/**\n * 重置 Scheduler（调度器）的状态。\n */\nfunction resetSchedulerState() {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  circular = {};\n  waiting = flushing = false;\n}\n\n/**\n * 刷新队列并调用 watcher.run。\n */\nfunction flushSchedulerQueue() {\n  flushing = true;\n  let watcher, id;\n\n  // 刷新队列前的排序，是为确保:\n  // 1. 组件从父组件更新到子组件（因为父组件总是在子组件之前创建）。\n  // 2. 组件的 watcher 在它提供之前运行（因为使用的 watcher 在渲染之前创建）。\n  // 3. 如果一个组件在父组件的监视程序运行期间被销毁，它的 watcher 可以被跳过。\n  queue.sort((a, b) => a.id - b.id);\n\n  // 不要缓存长度，因为当我们运行现有的 watcher 时，可能会有更多的 watcher 被推送\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n  }\n  // 重置\n  resetSchedulerState();\n}\n\n/**\n * 将一个订阅者者推入订阅队列。\n * 具有重复 id 的作业将被跳过，除非它是刷新队列时推入。\n */\nexport function queueWatcher(watcher) {\n  const id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // 如果已经刷新，则根据其 id 拼接订阅队列\n      // 如果已经超过了它的id，它将立即运行下一步。\n      let i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher); // 添加到队列\n    }\n    // 刷新队列\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n","import { isObject, _Set as Set } from '../../shared/util';\n\nimport { queueWatcher } from './scheduler';\nimport { pushTarget, popTarget } from './dep';\n\nlet uid = 0;\n\n/**\n * 订阅者，收集依赖项，并在表达式值发生变化时触发回调。这用于 $watch() api 和指令。\n */\nexport default class Watcher {\n  constructor(vm, expOrFn, cb, options, isRenderWatcher) {\n    this.vm = vm;\n\n    if (isRenderWatcher) {\n      vm._watcher = this;\n    }\n\n    vm._watchers.push(this);\n\n    this.cb = cb;\n    this.id = ++uid;\n    this.deps = [];\n    this.newDeps = [];\n    this.depIds = new Set(); // 用于判断dep是否已存在\n    this.newDepIds = new Set();\n    this.getter = expOrFn;\n    this.value = this.get();\n  }\n\n  /**\n   * 获取值并收集依赖项。\n   */\n  get() {\n    pushTarget(this); // 添加订阅者到栈中并设置为当前正在处理的订阅者\n    let value;\n    const vm = this.vm;\n    try {\n      value = this.getter.call(vm, vm);\n    } catch (e) {\n      throw e;\n    } finally {\n      popTarget(); // 移除当前订阅者\n      this.cleanupDeps(); // 清理依赖项集合。\n    }\n\n    return value;\n  }\n\n  /**\n   * 添加依赖项\n   */\n  addDep(dep) {\n    const id = dep.id;\n    // 根据id，判断依赖项是否已存在\n    if (!this.newDepIds.has(id)) {\n      this.newDepIds.add(id);\n      this.newDeps.push(dep);\n      if (!this.depIds.has(id)) {\n        dep.addSub(this);\n      }\n    }\n  }\n\n  /**\n   * 清理依赖项集合。\n   */\n  cleanupDeps() {\n    let i = this.deps.length;\n    while (i--) {\n      const dep = this.deps[i];\n      if (!this.newDepIds.has(dep.id)) {\n        dep.removeSub(this); // 删除\n      }\n    }\n\n    let tmp = this.depIds;\n    this.depIds = this.newDepIds;\n    this.newDepIds = tmp;\n    this.newDepIds.clear();\n\n    tmp = this.deps;\n    this.deps = this.newDeps;\n    this.newDeps = tmp;\n    this.newDeps.length = 0;\n  }\n\n  /**\n   * 订阅更新接口。\n   * 将在依赖项更改时调用。\n   */\n  update() {\n    queueWatcher(this);\n  }\n\n  /**\n   * Scheduler（调度器）作业接口。\n   * 将被 scheduler 调用。\n   */\n  run() {\n    const value = this.get();\n    if (\n      value !== this.value ||\n      // 即使值相同，对象/数组上的订阅也应该触发，因为值可能已经发生了变化。\n      isObject(value)\n    ) {\n      // 设置新的值\n      const oldValue = this.value;\n      this.value = value;\n      this.cb.call(this.vm, value, oldValue);\n    }\n  }\n\n  /**\n   * 依赖当前观察者收集的所有数据.\n   */\n  depend() {\n    let i = this.deps.length;\n    while (i--) {\n      this.deps[i].depend();\n    }\n  }\n}\n","import Watcher from '../observer/watcher';\nimport { noop } from '../../shared/util';\n\nlet updateComponent;\n\n// 挂载组件\nexport function mountComponent(vm) {\n  // 更新组件\n  updateComponent = () => {\n    // 将 vm._render() 返回的 vnode 虚拟节点对象传递给 vm._update，它会调用 patch 函数生成文档树\n    vm._update(vm._render());\n  };\n\n  new Watcher(vm, updateComponent, noop, {}, true /* isRenderWatcher */);\n}\n\nexport function lifecycleMixin(Vue) {\n  // 挂载 _update() 更新函数\n  Vue.prototype._update = function (vnode) {\n    const vm = this;\n    console.log('_update--->执行', vm.$el, vnode);\n    const prevEl = vm.$el;\n    const prevVnode = vm._vnode;\n    vm._vnode = vnode;\n\n    // 将 vnode 虚拟节点生成相应的 HTML 元素\n    if (!prevVnode) {\n      // 初始化\n      vm.$el = vm.__patch__(vm.$el, vnode);\n    } else {\n      // 更新\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n\n    // 更新 __vue__ 引用\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n\n    // 更新 vm.$parent.$el\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n  };\n}\n","// 匹配双大括号 => {{tip}}\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\n\nexport function parseText(text) {\n  const tagRE = defaultTagRE;\n\n  if (!tagRE.test(text)) {\n    return false;\n  }\n\n  const tokens = [];\n  const rawTokens = [];\n\n  // lastIndex 下一次匹配开始的位置。每次循环时，都将其初始为 0，是为防止处理其它文本时，\n  // 取到 lastIndex 是上一个循环结束后保留下的值而导致出错。\n  let lastIndex = tagRE.lastIndex = 0;\n  let match, index, tokenValue;\n\n  // 文本样例解析参考：<div>函数字符串，{{ tip }} 哈哈</div>\n\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n\n    if (index > lastIndex) { // 截取 {{ tip }} 前面的纯文本\n      rawTokens.push(tokenValue = text.slice(lastIndex, index));\n      tokens.push(JSON.stringify(tokenValue))\n    }\n    // 获取 {{ tip }} 中的 tip\n    const exp = match[1].trim();\n    tokens.push(`_s(${exp})`);\n    rawTokens.push({\n      '@binding': exp\n    });\n\n    lastIndex = index + match[0].length; // 标记下一次匹配开始的位置\n  }\n\n   // 截取 {{ tip }} 之后的存文本\n  if (lastIndex < text.length) {\n    rawTokens.push(tokenValue = text.slice(lastIndex));\n    tokens.push(JSON.stringify(tokenValue));\n  }\n\n  return {\n    expression: tokens.join('+'),\n    tokens: rawTokens\n  }\n}","// 匹配属性： id=\"app\"、id='app' 或 id=app\r\nconst attribute =\r\n  /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\r\n// 匹配标签：<my-header></my-header>\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\n// 匹配标签：<my:header></my:header>\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\n// 匹配开始标签：<div\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`);\r\n// 匹配闭合标签： > 或 />\r\nconst startTagClose = /^\\s*(\\/?)>/;\r\n// 匹配结束标签： </div>\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);\r\n\r\n// DONE 解析模版字符串，生成 AST 语法树\r\nexport function parseHTML(html, options) {\r\n  let text; // 纯文本\r\n\r\n  // vue2.0 源码中对以下几种情况分别进行了处理：注释标签、条件注释标签、Doctype、开始标签、结束标签。\r\n  // 而每当处理完一种情况时，都会阻断代码继续往下执行且开启新的一轮循环（注：使用 continue 实现 ），\r\n  // 并且会重置 html 字符串，也就是删掉匹配到的 html 字符串，保留未匹配的 ，以便在下一次循环处理。\r\n\r\n  // 提示：在解读以上几种情况的源码时，配合模板样例来理解会让你理解起来更容易。\r\n  while (html) {\r\n    // textEnd 为 0，则说明是一个开始标签。\r\n    let textEnd = html.indexOf('<');\r\n\r\n    if (textEnd === 0) {\r\n      // 解析开始标签及其属性并将其存放在一个对象中返回，例如：\r\n      // { tagName: 'div', attrs: [{ name: 'id', value: 'app' }] }\r\n      const startTagMatch = parseStartTag();\r\n      // console.log('解析——开始标签——结果', startTagMatch);\r\n\r\n      // 处理开始标签\r\n      if (options.start && startTagMatch) {\r\n        options.start(startTagMatch.tagName, startTagMatch.attrs);\r\n        continue; // 执行到 continue，将开始新的一轮循环，后续代码不会执行\r\n      }\r\n\r\n      const endTagMatch = html.match(endTag); // 匹配结束标签\r\n\r\n      // 处理结束标签\r\n      if (options.end && endTagMatch) {\r\n        advance(endTagMatch[0].length);\r\n        options.end(endTagMatch[1]);\r\n        continue;\r\n      }\r\n    }\r\n    // 截取 HTML 模版字符串中的文本\r\n    if (textEnd > 0) {\r\n      text = html.substring(0, textEnd);\r\n    }\r\n    // 处理文本内容\r\n    if (options.chars && text) {\r\n      advance(text.length);\r\n      options.chars(text);\r\n    }\r\n  }\r\n\r\n  // 解析开始标签及其属性，例如：<div id=\"app\">\r\n  function parseStartTag() {\r\n    // 如果没有找到任何匹配的文本， match() 将返回 null。否则，它返回一个数组，\r\n    // 其中存放了与它找到的匹配文本有关的信息。\r\n    const start = html.match(startTagOpen); // 匹配开始标签\r\n    let end, attr;\r\n    if (start) {\r\n      // 存放开始标签名和属性\r\n      const match = {\r\n        tagName: start[1], // 开始标签的名，例如：div\r\n        attrs: [] // 开始标签的属性，例如：{ name: 'id', value: 'app' }\r\n      };\r\n\r\n      // 删除已匹配到的 HTML 字符串，保留未匹配到的。\r\n      // 例如：匹配到 <div id=\"app\"></div> 中的 <div，调用 advance() 方法后，\r\n      // 原 HTML 字符窜就是这样：id=\"app\"></div>\r\n      advance(start[0].length);\r\n\r\n      // 当匹配到属性（ 形如：id='app'），但未匹配到开始标签的闭合（ 形如：> ）时，进入循环\r\n      while (\r\n        !(end = html.match(startTagClose)) &&\r\n        (attr = html.match(attribute))\r\n      ) {\r\n        match.attrs.push({\r\n          name: attr[1], // 属性名: id\r\n          // 若是你在通过 new 关键字创建 vue 实例时，提供了 template 选项\r\n          // 且在它的字符串中,有的标签的属性使用的是单引号或者没有带引号，\r\n          // 例如：<div id='app'></div> 或 <div id=app></div> 这种形式，那么\r\n          // 在匹配标签的属性时，其返回的数组中这个属性的值，可能在此数组的 下标4 或 下标5\r\n          value: attr[3] || attr[4] || attr[5] // 属性值: app\r\n        });\r\n\r\n        advance(attr[0].length);\r\n      }\r\n\r\n      // 如果匹配到开始标签的闭合（ 形如：> ），则返回 match 对象\r\n      if (end) {\r\n        advance(end[0].length);\r\n        return match;\r\n      }\r\n    }\r\n  }\r\n  // DONE 截取 HTML 字符串，将已匹配到的字符从原有字符中删除。\r\n  function advance(n) {\r\n    // substring() 方法用于提取字符串中介于两个指定下标之间的字符。\r\n    html = html.substring(n);\r\n  }\r\n}\r\n","// 注意: 这只是从数组 (attrsList) 中删除了属性，以便不被 processAttrs 处理。\r\n// 默认情况下，它不会从映射 (attrsMap) 中删除它，因为在代码生成期间需要映射。\r\n\r\n// done: 获取并从 attrsList 数组中删除属性\r\nexport function getAndRemoveAttr(el, name, removeFromMap) {\r\n  let val;\r\n  if ((val = el.attrsMap[name]) != null) {\r\n    const list = el.attrsList;\r\n    for (let i = 0, l = list.length; i < l; i++) {\r\n      if (list[i].name === name) {\r\n        list.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  // removeFromMap 为真，则从 attrsMap 中删除属性\r\n  if (removeFromMap) {\r\n    delete el.attrsMap[name];\r\n  }\r\n  return val;\r\n}\r\n\r\n// done: 获取绑定的属性\r\nexport function getBindingAttr(el, name, getStatic) {\r\n  const dynamicValue =\r\n    getAndRemoveAttr(el, ':' + name) || getAndRemoveAttr(el, 'v-bind:' + name);\r\n\r\n  // 动态绑定属性，例如，v-bind:key = 'index' 或 :key = 'index'\r\n  if (dynamicValue != null) {\r\n    // return parseFilters(dynamicValue)\r\n    return dynamicValue;\r\n  } else if (getStatic !== false) {\r\n    // 静态绑定属性，例如，ref = \"nameRef\"\r\n    const staticValue = getAndRemoveAttr(el, name);\r\n    if (staticValue != null) {\r\n      return JSON.stringify(staticValue);\r\n    }\r\n  }\r\n}\r\n\r\n// DONE 为 ast 对象添加 attrs 属性\r\nexport function addAttr(el, name, value, range, dynamic) {\r\n  const attrs = dynamic\r\n    ? el.dynamicAttrs || (el.dynamicAttrs = [])\r\n    : el.attrs || (el.attrs = []);\r\n  attrs.push(\r\n    rangeSetItem(\r\n      {\r\n        name,\r\n        value,\r\n        dynamic\r\n      },\r\n      range\r\n    )\r\n  );\r\n  el.plain = false;\r\n}\r\n\r\n// DONE 合并对象属性\r\nfunction rangeSetItem(item, range) {\r\n  if (range) {\r\n    if (range.start != null) {\r\n      item.start = range.start;\r\n    }\r\n    if (range.end != null) {\r\n      item.end = range.end;\r\n    }\r\n  }\r\n  return item;\r\n}\r\n\r\n// DONE 依据 key 值，选出相应模块函数\r\nexport function pluckModuleFunction(modules, key) {\r\n  return modules ? modules.map((m) => m[key]).filter((_) => _) : [];\r\n}\r\n","import { parseText } from './text-parser';\nimport { parseHTML } from './html-parser';\nimport { addAttr } from '../helpers';\nimport { extend } from '../../shared/util';\nimport {\n    getAndRemoveAttr,\n    getBindingAttr,\n    pluckModuleFunction\n} from '../helpers';\n\n// 匹配 v-for='(item,index) in arrList' 中的：'(item,index) in arrList'，这里仅是举例\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\n// 匹配圆括号 ——> ()\nconst stripParensRE = /^\\(|\\)$/g;\n// 匹配',' 和 'index'，例如：item, index ——> , index\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\n\n/*\n  假设模板样例：\n   <div id=\"app\" style=\"color: #f66;font-size: 20px;\">\n    函数字符串，{{ tip }}\n    <span class=\"cla\">{{ studentNum }}</span>\n  </div>\n*/\n\nlet transforms;\n\n// done: 解析模版字符串，生成 ast 语法树\nexport function parse(template, options) {\n    // 获取 transformNode 函数，用于处理 class、style 等属性\n    transforms = pluckModuleFunction(options.modules, 'transformNode');\n\n    const stack = []; // 存放所有开始标签的初始 AST 对象\n    let root; // 最终返回的 AST 对象\n    let currentParent; // 当前元素的父级\n\n    parseHTML(template, {\n        // DONE 标签开始\n        start(tag, attrs) {\n            // 创建 AST 对象\n            const element = createASTElement(tag, attrs);\n            processFor(element); // 处理 v-for 指令\n\n            // 如果 root 根节点不存在，则说明当前节点即是整个模版的最顶层节点，也就是第一个节点\n            if (!root) {\n                root = element;\n            }\n\n            // 保存当前父节点（AST 对象）\n            currentParent = element;\n            // 将 AST 对象 push 到 stack 栈中，当解析到其相对应的结束标签时，\n            // 则将这个标签对应的 AST 对象 从栈中 pop 出来。\n\n            // 原因：解析开始标签时，是顺时针；解析结束标签时，是逆时针。结合模板样例看，\n            // 解析顺序如下：<div> => <span> => ...  => </span> => </div>\n\n            // 因此，解析开始标签生成的 AST 对象被 push 到栈中后，若想在解析到其相应的结束标签时取出，\n            // 则要使用 pop。整个操作流程，结合 start() 和 end() 方法一起看，会更易理解。\n\n            stack.push(element);\n        },\n\n        // done: 标签结束\n        end(tag) {\n            // pop() 方法将删除数组的最后一个元素，把数组长度减 1，并且返回它删除的元素的值。\n            // 如果数组已经为空，则 pop() 不改变数组，并返回 undefined 值。\n\n            const element = stack.pop(); // 获取当前元素标签的 AST 对象\n            currentParent = stack[stack.length - 1]; // 获取当前元素标签的父级 AST 对象\n\n            // 处理 ast 对象中的属性\n            processElement(element);\n\n            if (currentParent) {\n                // 标记父子元素\n                element.parent = currentParent; // 子元素存储父元素\n                currentParent.children.push(element); // 父元素存入子元素\n            }\n        },\n\n        // done: 解析文本\n        chars(text) {\n            if (!currentParent) {\n                return;\n            }\n\n            let res;\n            let child;\n            const children = currentParent.children;\n\n            text = text.trim(); // 去掉首尾空格\n            if (text) {\n                // console.log('text------解析文本-->', 'text: ' + text, 'children: ', children);\n                if (text !== ' ' && (res = parseText(text))) {\n                    child = {\n                        type: 2, // 标记 ast 对象子元素的类型\n                        text,\n                        expression: res.expression,\n                        tokens: res.tokens\n                    };\n    \n                } else if (\n                    text !== ' ' ||\n                    !children.length ||\n                    children[children.length - 1].text !== ' '\n                ) {\n                    \n                    child = {\n                        type: 3, // 标记 ast 对象子元素的类型\n                        text,\n                    };\n                    \n                }\n\n                if (child) {\n                    children.push(child);\n                }\n            }\n        }\n    });\n\n    return root;\n}\n\n// done: 生成 ast 对象\nfunction createASTElement(tagName, attrs) {\n    return {\n        tag: tagName, // 标签名\n        type: 1, // 标记 ast 对象类型\n        children: [], // 标签子级\n        attrsList: attrs, // 标签属性\n        attrsMap: makeAttrsMap(attrs),\n        parent // 标签父级\n    };\n}\n\n// DONE 标签属性的映射\nfunction makeAttrsMap(attrs) {\n    const map = {};\n    for (var i = 0, len = attrs.length; i < len; i++) {\n        if (map[attrs[i].name]) {\n            console.log('duplicate attribute: 属性重复' + attrs[i].name, attrs[i]);\n            return false;\n        }\n        map[attrs[i].name] = attrs[i].value;\n    }\n    return map;\n}\n// done: 处理 v-for 指令\nfunction processFor(el) {\n    // 获取并从 attrsList 数组中删除属性\n    const exp = getAndRemoveAttr(el, 'v-for');\n    // 判断 v-for 是否存在\n    if (exp && typeof exp === 'string') {\n        const res = parseFor(exp); // 解析 v-for 指令\n        if (res) {\n            // 将 res 中的属性（例如：item、arrList）添加到目标对象（el即ast对象）中\n            extend(el, res);\n        } else {\n            console.log(`Invalid v-for expression: ${exp}`);\n        }\n    }\n}\n// done: 解析 v-for 指令\nfunction parseFor(exp) {\n    // 匹配 v-for='(item,index) in arrList' 中的：'(item,index) in arrList'，这里仅是举例\n    const inMatch = exp.match(forAliasRE);\n    // 如果没有找到任何匹配的文本， match() 将返回 null。否则，它将返回一个数组，\n    // 其中存放了与它找到的匹配文本有关的信息。\n    if (!inMatch) return;\n\n    const res = {};\n    // 获取 arrList 并去掉其前后空格\n    res.for = inMatch[2].trim();\n    // 获取 (item, index) 并去掉其前后空格以及将圆括号即 () 替换为空。例如：(item, index) ——> item, index\n    const alias = inMatch[1].trim().replace(stripParensRE, '');\n    // 匹配 ',' 和 'index'，例如：item, index ——> , index\n    const iteratorMatch = alias.match(forIteratorRE);\n\n    // iteratorMatch 为真，说明你使用 v-for 时，写的是 (item, index)。否则，就是 (item) 或 item。\n    if (iteratorMatch) {\n        // 将 ',' 和 'index'替换为空，得到 item 并去除其前后空格。例如：item, index ——> item\n        res.alias = alias.replace(forIteratorRE, '').trim();\n        // 获取 index 并去除其前后空格\n        res.iterator1 = iteratorMatch[1].trim();\n        if (iteratorMatch[2]) {\n            // 若是走到这里，说明你多写了逗号。例如：(item, , , index)。\n            // 而这时，index 的值在 iteratorMatch[2] 的位置\n            res.iterator2 = iteratorMatch[2].trim();\n        }\n    } else {\n        res.alias = alias;\n    }\n\n    return res;\n}\n\n// done: 处理 ast 对象\nfunction processElement(element) {\n    // 处理 key\n    processKey(element);\n\n    // 在删除结构属性后确定这是否是普通元素\n    element.plain =\n        !element.key && !element.scopedSlots && !element.attrsList.length;\n\n    // 处理 class 或 style 属性\n    for (let i = 0; i < transforms.length; i++) {\n        element = transforms[i](element) || element;\n    }\n    \n    processAttrs(element); // 处理属性\n\n    return element;\n}\n\n// done: 处理 key\nfunction processKey(el) {\n    const exp = getBindingAttr(el, 'key');\n\n    if (exp) {\n        if (el.tag === 'template') {\n            console.log(`<template>不能被设置 key。请将 key 放在真实元素上。`);\n            return false;\n        }\n\n        if (el.for) {\n            const iterator = el.iterator2 || el.iterator1;\n            const parent = el.parent;\n\n            if (\n                iterator &&\n                iterator === exp &&\n                parent &&\n                parent.tag === 'transition-group'\n            ) {\n                console.log(\n                    `不要使用 v-for 索引（index）作为 <transition-group> 子节点的 key`\n                );\n                return false;\n            }\n        }\n\n        el.key = exp;\n    }\n}\n\n// DONE 处理属性\nfunction processAttrs(el) {\n    const list = el.attrsList;\n    let i, l, name, rawName, value;\n\n    for (i = 0, l = list.length; i < l; i++) {\n        name = rawName = list[i].name;\n        value = list[i].value;\n        // 为 ast 对象添加 attrs 属性，用于存放 ast 中的属性\n        addAttr(el, name, JSON.stringify(value), list[i]);\n    }\n}\n","import { pluckModuleFunction } from \"../helpers\";\n\n/* \n  以下三个个函数的作用：\n\n  _c() => createElement() 创建元素节点\n\n  _v() => createTextNode() 创建文本节点\n\n  _s(value) => _s(tip) 解析双大括号，例如：{{tip}}\n*/\n\n/*\n  ast => render 渲染函数\n\n  function render() {\n    return `_c(\"div\",{id: \"app\",style:{ \"color\":\"#f66\",\"font-size\":\"20px\"}},\n      _v(\"函数字符串，\"+_s(tip)),\n      _c(\"span\", { \"class\": \"cla\", \"style\": { \"color\": \"green\" } }, _v(_s(studentNum)))  \n    )`;\n  }\n*/\n\n// DONE: 生成配置状态对象\nfunction codegenState(options) {\n  return {\n    options,\n    // 获取 class 和 style 模块中的 genData函数，用于拼接 class 和 style 属性\n    dataGenFns: pluckModuleFunction(options.modules, \"genData\"),\n  };\n}\n\n// DONE: 代码字符串生成器\nexport function generate(ast, options) {\n  const state = codegenState(options); // 配置\n  const code = ast\n    ? ast.tag === \"script\"\n      ? \"null\"\n      : genElement(ast, state)\n    : '_c(\"div\")';\n\n  return code;\n}\n\n// done: 处理元素，生成相应的字符串\nfunction genElement(el, state) {\n  if (el.for && !el.forProcessed) {\n    return genFor(el, state);\n  } else {\n    // 处理 element\n    let code;\n    let data;\n\n    if (!el.plain) {\n      data = genData(el, state);\n    }\n\n    const children = genChildren(el, state, true);\n\n    code = `_c('${el.tag}'${\n      data ? `,${data}` : \"\" // data\n    }${\n      children ? `,${children}` : \"\" // children\n    })`;\n\n    return code;\n  }\n}\n\n// DONE: 处理有 v-for 指令的 ast 对象\nfunction genFor(el, state) {\n//   console.log('有v-for指令的元素对象--->', el);\n  const exp = el.for; // 要遍历的数组\n  const alias = el.alias; // 数组中的每一项\n\n  // 每一项的下标值即 index\n  const iterator1 = el.iterator1 ? `,${el.iterator1}` : \"\";\n  const iterator2 = el.iterator2 ? `,${el.iterator2}` : \"\";\n\n  el.forProcessed = true; // 避免递归时，重复处理\n\n  // 生成字符串函数\n  return (\n    `${\"_l\"}((${exp}),` +\n    `function(${alias}${iterator1}${iterator2}){` +\n    `return ${genElement(el, state)}` +\n    \"})\"\n  );\n}\n\n// DONE: 处理 ast 对象中的各种属性，将它们拼接成字符串\nfunction genData(el, state) {\n  let data = \"{\";\n\n  // key\n  if (el.key) {\n    data += `key:${el.key},`;\n  }\n\n  // 拼接已处理好的 class 或 style 属性\n  for (let i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += `attrs:${genProps(el.attrs)},`;\n  }\n\n  data = data.replace(/,$/, \"\") + \"}\";\n\n  return data;\n}\n\n// DONE: 处理子节点\nfunction genChildren(el, state, checkSkip) {\n  const children = el.children;\n  // 是否存在子节点\n  if (children.length) {\n    const normalizationType = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0;\n      \n    return `[${children.map((c) => genNode(c, state)).join(\",\")}]${\n      normalizationType ? `,${normalizationType}` : \"\"\n    }`;\n  }\n}\n\n// DONE: 确定子数组需要的规范化。\n// 0:不需要标准化\n// 1:需要简单的规范化(可能是1级深嵌套数组)\n// 2:需要完全标准化\nfunction getNormalizationType(children, maybeComponent) {\n  let res = 0;\n  for (let i = 0; i < children.length; i++) {\n    const el = children[i];\n\n    if (el.type !== 1) {\n      continue;\n    }\n\n    if (needsNormalization(el)) {\n      res = 2;\n      break;\n    }\n  }\n\n  return res;\n}\n\nfunction needsNormalization(el) {\n    return el.for !== undefined || el.tag === \"template\" || el.tag === \"slot\";\n}\n\n// DONE: 将属性拼接成字符串\n// 例如：`style:{ \"color\":\"#f66\",\"font-size\":\"20px\"}`\nfunction genProps(props) {\n  let staticProps = ``;\n  let dynamicProps = ``;\n\n  for (let i = 0; i < props.length; i++) {\n    const prop = props[i];\n    const value = transformSpecialNewlines(prop.value);\n\n    if (prop.dynamic) {\n      dynamicProps += `${prop.name},${value},`;\n    } else {\n      staticProps += `\"${prop.name}\":${value},`;\n    }\n  }\n  staticProps = `{${staticProps.slice(0, -1)}}`;\n\n  if (dynamicProps) {\n    return `_d(${staticProps},[${dynamicProps.slice(0, -1)}])`;\n  } else {\n    return staticProps;\n  }\n}\n// DONE: 根据类型的不同进行相应处理\nfunction genNode(node, state) {\n  if (node.type === 1) {\n    // 元素节点\n    return genElement(node, state);\n  } else {\n    // 文本节点\n    return genText(node);\n  }\n}\n\n// DONE: 处理文本节点\nfunction genText(text) {\n  // 在模板编译阶段，已通过 parseText 函数对文本进行了处理\n  return `_v(${\n    text.type === 2\n      ? text.expression\n      : transformSpecialNewlines(JSON.stringify(text.text))\n  })`;\n}\n\n// \\u2028（行分隔符） 和 \\u2029（段落分隔符）会被浏览器理解为换行，\n// 而在Javascript的字符串表达式中是不允许换行的，那样会导致错误。\nfunction transformSpecialNewlines(text) {\n  return text.replace(/\\u2028/g, \"\\\\u2028\").replace(/\\u2029/g, \"\\\\u2029\");\n}\n","import { parse } from './parser/index';\nimport { generate } from './codegen/index';\n\n//编译：HTML字符串（ template ） => AST => render\nexport function compileToFunctions(html, options) {\n  // 解析 HTML 字符串，将其转换成 AST 抽象语法树\n  const ast = parse(html, options);\n  // 将 AST 转换成字符串函数\n  const code = generate(ast, options);\n  // 生成 render 渲染函数\n  const render = new Function(`with(this){ return ${code} }`);\n\n  console.log('生成render-->', render);\n  return render;\n}\n\n","import { getAndRemoveAttr, getBindingAttr } from '../../../compiler/helpers';\n\n// 处理 class 静态绑定和动态绑定。\nfunction transformNode(el) {\n    // 获取静态绑定的 class\n    const staticClass = getAndRemoveAttr(el, 'class');\n    if (staticClass) {\n        el.staticClass = JSON.stringify(staticClass);\n    }\n\n    // 获取动态绑定的 class\n    const classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n    if (classBinding) {\n        el.classBinding = classBinding;\n    }\n}\n\n// 分别拼接 class 静态和动态属性\nfunction genData(el) {\n    let data = '';\n    if (el.staticClass) {\n        data += `staticClass:${el.staticClass},`;\n    }\n    if (el.classBinding) {\n        data += `class:${el.classBinding},`;\n    }\n    return data;\n}\n\nexport default {\n    staticKeys: ['staticClass'],\n    transformNode,\n    genData\n};\n","import { cached } from '../../../shared/util';\n\n// done: 创建一个解析 style 文本的函数。例如，\"width: 100%;height: 50px;\"\nexport const parseStyleText = cached(function (cssText) {\n  const res = {};\n  const listDelimiter = /;(?![^(]*\\))/g;\n  const propertyDelimiter = /:(.+)/; // 匹配冒号\n  \n  // 以分号进行分割\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      const tmp = item.split(propertyDelimiter); // 以冒号进行分割\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res;\n});\n","import { getAndRemoveAttr, getBindingAttr } from '../../../compiler/helpers';\nimport { parseStyleText } from '../util/style';\n\n// 处理 style 静态绑定和动态绑定。\nfunction transformNode(el) {\n    // 获取静态绑定的 style\n    const staticStyle = getAndRemoveAttr(el, 'style');\n    if (staticStyle) {\n        el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n    }\n\n    // 获取动态绑定的 style\n    const styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n    if (styleBinding) {\n        el.styleBinding = styleBinding;\n    }\n}\n\n// 分别拼接 style 静态和动态属性\nfunction genData(el) {\n    let data = '';\n    if (el.staticStyle) {\n        data += `staticStyle:${el.staticStyle},`;\n    }\n    if (el.styleBinding) {\n        data += `style:(${el.styleBinding}),`;\n    }\n    return data;\n}\n\nexport default {\n    staticKeys: ['staticStyle'],\n    transformNode,\n    genData\n};\n","import klass from './class';\nimport style from './style';\n\nexport default [klass, style];\n","import modules from './modules/index';\n\nexport const baseOptions = {\n  modules\n};\n","/* HTML DOM 方法 */\n\n// DONE 通过指定名称创建一个元素\nexport function createElement(tagName, vnode) {\n  const elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm;\n  }\n  // false 或 null 将删除该属性，但 undefined 不会\n  if (\n    vnode.data &&\n    vnode.data.attrs &&\n    vnode.data.attrs.multiple !== undefined\n  ) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm;\n}\n\n// DONE 创建一个具有指定的命名空间URI和限定名称的元素\n// export function createElementNS(namespace, tagName) {\n//   return document.createElementNS(namespaceMap[namespace], tagName);\n// }\n\n// DONE 创建文本节点\nexport function createTextNode(text) {\n  return document.createTextNode(text);\n}\n\n// DONE 创建注释节点\nexport function createComment(text) {\n  return document.createComment(text);\n}\n\n// DONE 在已有的子节点前插入一个新的子节点\nexport function insertBefore(parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\n// DONE 从子节点列表中删除某个节点\nexport function removeChild(node, child) {\n  node.removeChild(child);\n}\n\n// DONE 向节点的子节点列表的末尾添加新的子节点\n// 提示：如果文档树中已经存在了 newchild，它将从文档树中删除，然后重新插入它的新位置。\n// 如果 newchild 是 DocumentFragment 节点，则不会直接插入它，而是把它的子节点按序插入当前节点的 childNodes[] 数组的末尾。\n// 你可以使用 appendChild() 方法移除元素到另外一个元素。\nexport function appendChild(node, child) {\n  node.appendChild(child);\n}\n// DONE 可返回某节点的父节点\nexport function parentNode(node) {\n  return node.parentNode;\n}\n\n// DONE 返回某个元素之后紧跟的节点（处于同一树层级中）\nexport function nextSibling(node) {\n  return node.nextSibling;\n}\n\n// DONE 获取元素的标签名\nexport function tagName(node) {\n  return node.tagName;\n}\n\n// DONE 设置或者返回指定节点的文本内容\n// 如果你设置了 textContent 属性, 任何的子节点会被移除及被指定的字符串的文本节点替换\nexport function setTextContent(node, text) {\n  node.textContent = text;\n}\n\n// DONE 创建或改变某个新属性。如果指定属性已经存在,则只设置该值\nexport function setStyleScope(node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n","\n// done: vnode（虚拟节点）类\nexport default class VNode {\n    constructor(tag, data, children, text, elm, context) {\n        this.tag = tag;\n        this.data = data;\n        this.children = children;\n        this.text = text;\n        this.elm = elm;\n        this.context = context;\n        this.key = data && data.key;\n    }\n}\n\n\n// done: 创建空节点\nexport const createEmptyVNode = (text = '') => {\n    const node = new VNode();\n    node.text = text;\n    node.isComment = true;\n    return node;\n}\n\n// done: 创建文本 vnode\nexport function createTextVNode(text) {\n    return new VNode(undefined, undefined, undefined, text);\n}\n// done: 解析双大括号中的表达式，例如：{{tip}} => tip\nexport function toString(value) {\n    if (value === null) return;\n    return typeof value === 'object' ? JSON.stringify(value) : value;\n};\n// done: 克隆节点对象。\n//用于静态节点和槽节点，因为它们可以在多个渲染中重用，克隆它们可以避免DOM操作依赖它们的elm引用时出现错误。\nexport function cloneVNode(vnode) {\n    const cloned = new VNode(\n        vnode.tag,\n        vnode.data,\n        //克隆子数组，以避免在克隆子数组时发生原数组的突变。\n        vnode.children && vnode.children.slice(),\n        vnode.text,\n        vnode.elm,\n        vnode.context\n    );\n\n    cloned.key = vnode.key;\n\n    cloned.isCloned = true;\n\n    return cloned;\n}","import { isUndef, isDef, isPrimitive } from '../../shared/util';\nimport VNode, { cloneVNode } from './vnode';\n\n/**\n * 样例展示：结合 patch函数中的 insertBefore 和 removeChild 方法看\n * <body>\n *  <div id=\"app\"></div> 原有的\n *  <div id=\"app\"></div> 新生成的\n *  <script></script>\n * </body>\n *\n */\n\nexport const emptyNode = new VNode('', {}, []); // 创建空的虚拟节点对象\nconst hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\n// done: 创建 patch 函数\nexport function createPatchFunction(backend) {\n    let i, j;\n    const cbs = {};\n\n    // modules 对象中存储着处理 attrs、class 和 style等方法\n    // nodeOps 对象中存储着 HTML DOM 方法。例如，document.createElement()\n    const { modules, nodeOps } = backend;\n\n    // 整合 modules 中的函数并将它们存在 cbs 对象中\n    for (i = 0; i < hooks.length; ++i) {\n        cbs[hooks[i]] = [];\n        for (j = 0; j < modules.length; ++j) {\n            if (isDef(modules[j][hooks[i]])) {\n                cbs[hooks[i]].push(modules[j][hooks[i]]);\n            }\n        }\n    }\n\n    // done: 创建虚拟节点对象\n    function emptyNodeAt(elm) {\n        const node = new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm);\n        return node;\n    }\n    // done: 调用 cbs.create 数组中函数(主要用于处理 class、style、指令等)\n    function invokeCreateHooks(vnode, insertedVnodeQueue) {\n        for (let i = 0; i < cbs.create.length; ++i) {\n            cbs.create[i](emptyNode, vnode);\n        }\n    }\n    // done: 创建元素\n    function createElm(\n        vnode, // 虚拟节点对象\n        insertedVnodeQueue, // 存储已插入的 vnode 的队列\n        parentElm, // vnode.elm 父元素\n        refElm, // 紧跟在 vnode.elm 之后的元素\n        nested,\n        ownerArray,\n        index\n    ) {\n        if (isDef(vnode.elm) && isDef(ownerArray)) {\n            // 这个 vnode 在之前的渲染中使用过!\n            // 现在它被用作一个新节点，当它被用作插入参考节点时，覆盖它的 elm 会导致潜在的补丁错误。\n            // 相反，我们在为节点创建相关的 DOM 元素之前按需克隆节点。\n            vnode = ownerArray[index] = cloneVNode(vnode);\n        }\n\n        const data = vnode.data; // 获取元素属性\n        const children = vnode.children; // 获取子元素\n        const tag = vnode.tag; // 获取标签\n\n        // 元素节点\n        if (isDef(tag)) {\n            vnode.elm = nodeOps.createElement(tag, vnode);\n            // 创建子元素\n            createChildren(vnode, children, insertedVnodeQueue);\n            if (isDef(data)) {\n                // 处理元素上的各种属性\n                invokeCreateHooks(vnode, insertedVnodeQueue);\n            }\n            // 插入元素\n            insert(parentElm, vnode.elm, refElm);\n        } else {\n            // 纯文本节点\n            vnode.elm = nodeOps.createTextNode(vnode.text);\n            insert(parentElm, vnode.elm, refElm);\n        }\n    }\n    // done: 验证 vnode.tag（标签）是否存在\n    function isPatchable(vnode) {\n        while (vnode.componentInstance) {\n            vnode = vnode.componentInstance._vnode;\n        }\n        return isDef(vnode.tag);\n    }\n\n    // done: 创建子元素\n    function createChildren(vnode, children, insertedVnodeQueue) {\n        if (Array.isArray(children)) {\n            // 检查 children 中的子节点是否有重复的 key 值\n            checkDuplicateKeys(children);\n\n            for (let i = 0; i < children.length; ++i) {\n                createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n            }\n        } else if (isPrimitive(vnode.text)) {\n            // 是否为原始值\n            nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n        }\n    }\n\n    // done: 检查 key 值是否重复\n    function checkDuplicateKeys(children) {\n        const seenKeys = {};\n        for (let i = 0; i < children.length; i++) {\n            const vnode = children[i];\n            const key = vnode.key;\n\n            if (isDef(key)) {\n                if (seenKeys[key]) {\n                    console.log(\n                        // 检测到重复键:'${key}'。这可能会导致更新错误。\n                        `Duplicate keys detected: '${key}'. This may cause an update error.`,\n                        vnode.context\n                    );\n                } else {\n                    seenKeys[key] = true;\n                }\n            }\n        }\n    }\n    // done: 插入元素\n    function insert(parent, elm, ref) {\n        // 存在父级\n        if (isDef(parent)) {\n            // elm 之后存在元素（有同级的兄弟元素）\n            if (isDef(ref)) {\n                // elm 和 ref 元素的父级元素是同一个（elm 和 ref是同级兄弟元素）\n                if (nodeOps.parentNode(ref) === parent) {\n                    nodeOps.insertBefore(parent, elm, ref);\n                }\n            } else {\n                // elm 之后不存在元素\n                nodeOps.appendChild(parent, elm);\n            }\n        }\n    }\n\n    // DONE 移除节点\n    function removeVnodes(vnodes, startIdx, endIdx) {\n        for (; startIdx <= endIdx; ++startIdx) {\n            const ch = vnodes[startIdx];\n            if (isDef(ch)) {\n                removeNode(ch.elm);\n            }\n        }\n    }\n\n    function removeNode(el) {\n        const parent = nodeOps.parentNode(el);\n        // 元素可能已经由于 v-html 或 v-text而被删除\n        if (isDef(parent)) {\n            nodeOps.removeChild(parent, el);\n        }\n    }\n    // done: 同一个 vnode\n    function sameVnode(a, b) {\n        return a.key === b.key && a.tag === b.tag && isDef(a.data) === isDef(b.data);\n    }\n\n    function patchVnode(oldVnode, vnode, insertedVnodeQueue, ownerArray, index, removeOnly) {\n        // 新旧节点相同，则阻止运行\n        if (oldVnode === vnode) {\n            return;\n        }\n\n        const elm = (vnode.elm = oldVnode.elm);\n\n        let i;\n        const data = vnode.data;\n        const oldCh = oldVnode.children;\n        const ch = vnode.children;\n\n        // vnode 中的 data 和 tag 属性同时为真，则对其属性（class、style等）进行更新\n        if (isDef(data) && isPatchable(vnode)) {\n            for (i = 0; i < cbs.update.length; ++i) cbs.update[i](oldVnode, vnode);\n            //   if (isDef((i = data.hook)) && isDef((i = i.update))) i(oldVnode, vnode);\n        }\n\n        if (isUndef(vnode.text)) {\n            if (isDef(oldCh) && isDef(ch)) {\n                if (oldCh !== ch) updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly);\n            } else if (isDef(ch)) {\n                if (process.env.NODE_ENV !== 'production') {\n                    checkDuplicateKeys(ch);\n                }\n                if (isDef(oldVnode.text)) nodeOps.setTextContent(elm, '');\n                addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n            } else if (isDef(oldCh)) {\n                removeVnodes(oldCh, 0, oldCh.length - 1);\n            } else if (isDef(oldVnode.text)) {\n                nodeOps.setTextContent(elm, '');\n            }\n        } else if (oldVnode.text !== vnode.text) {\n            nodeOps.setTextContent(elm, vnode.text);\n        }\n        \n        if (isDef(data)) {\n            if (isDef((i = data.hook)) && isDef((i = i.postpatch))) i(oldVnode, vnode);\n        }\n    }\n\n    /**\n     * DONE 将 vnode 虚拟节点生成相应的 HTML 元素\n     * @param { HTMLDivElement } oldVnode => html\n     * @param { Object } vnode => 虚拟节点对象\n     */\n    return function patch(oldVnode, vnode) {\n        console.log('path---->执行', oldVnode, vnode);\n\n        const insertedVnodeQueue = []; // 存储已插入的 vnode 的队列\n\n        // 老节点不存在\n        if (isUndef(oldVnode)) {\n            // empty mount (likely as component), create new root element\n            // isInitialPatch = true;\n            // createElm(vnode, insertedVnodeQueue);\n        } else {\n            // 是否为真实元素\n            const isRealElement = isDef(oldVnode.nodeType);\n\n            // if (!isRealElement && sameVnode(oldVnode, vnode)) {\n                // // 修补现有的根节点\n                // patchVnode(oldVnode, vnode);\n            // } else {\n                if (isRealElement) {\n                    // 创建一个空节点替换 oldVnode\n                    oldVnode = emptyNodeAt(oldVnode);\n                }\n                // 替换现有的 element\n                const oldElm = oldVnode.elm;\n                const parentElm = nodeOps.parentNode(oldElm); // 获取 oldElm 父元素\n\n                // 创建新节点\n                createElm(\n                    vnode,\n                    insertedVnodeQueue,\n                    parentElm,\n                    // 返回紧跟 oldElm 之后的元素\n                    nodeOps.nextSibling(oldElm)\n                );\n\n                // 销毁旧节点\n                if (isDef(parentElm)) {\n                    console.log('执行销毁操作--->', oldVnode);\n                    removeVnodes([oldVnode], 0, 0);\n                }\n            // }\n        }\n\n        return vnode.elm;\n    };\n}\n","import { makeMap } from '../../../shared/util';\n\nexport const isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\n// DONE 是否为假值\nexport const isFalsyAttrValue = (val) => {\n  return val == null || val === false;\n};\n","import { isUndef } from '../../../shared/util';\nimport { isEnumeratedAttr, isFalsyAttrValue } from '../util/attrs';\n\nfunction updateAttrs(oldVnode, vnode) {\n  // 新旧虚拟节点都不存在 attr\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return;\n  }\n\n  let key, cur, old;\n  const elm = vnode.elm;\n  const oldAttrs = oldVnode.data.attrs || {};\n  let attrs = vnode.data.attrs || {};\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n\n    // 新旧虚拟节点属性不同\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n\n  for (key in oldAttrs) {\n    // attrs[key] 为 undefined 或 null\n    if (isUndef(attrs[key])) {\n      // key 值不是 contenteditable、draggable 和 spellcheck\n      if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key); // 删除空属性\n      }\n    }\n  }\n}\n\n// 设置属性\nfunction setAttr(el, key, value) {\n  baseSetAttr(el, key, value);\n}\n\nfunction baseSetAttr(el, key, value) {\n  // 若是假值，则删除属性\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    el.setAttribute(key, value);\n  }\n}\n\nexport default {\n  create: updateAttrs,\n  update: updateAttrs\n};\n","/* @flow */\n\nimport { isDef, isObject } from '../../../shared/util';\n\nexport function genClassForVnode(vnode) {\n    let data = vnode.data;\n\n    return renderClass(data.staticClass, data.class);\n}\n\n// 提供拼接好的 class\nexport function renderClass(staticClass, dynamicClass) {\n    // 至少要有一个存在\n    if (isDef(staticClass) || isDef(dynamicClass)) {\n        return concat(staticClass, stringifyClass(dynamicClass));\n    }\n\n    return '';\n}\n\n// 拼接 class\nexport function concat(a, b) {\n    return a ? (b ? a + ' ' + b : a) : b || '';\n}\n\n// 对 class 进行格式化\nexport function stringifyClass(value) {\n    // 数组语法，例如：v-bind:class=\"[activeClass, errorClass]\"\n    if (Array.isArray(value)) {\n        return stringifyArray(value);\n    }\n    // 对象语法，例如：v-bind:class=\"{ active: isActive, 'text-danger': hasError }\"\n    if (isObject(value)) {\n        return stringifyObject(value);\n    }\n    // 字符串\n    if (typeof value === 'string') {\n        return value;\n    }\n\n    return '';\n}\n\n// class 数组绑定语法\nfunction stringifyArray(value) {\n    let res = '';\n    let stringified;\n    for (let i = 0, l = value.length; i < l; i++) {\n        // 递归，遍历 value 数组中的每一项\n        if (isDef((stringified = stringifyClass(value[i]))) && stringified !== '') {\n            if (res) res += ' '; // class 之间要有空格\n            res += stringified;\n        }\n    }\n    return res;\n}\n\n// class 对象绑定语法\nfunction stringifyObject(value) {\n    let res = '';\n    for (const key in value) {\n        if (value[key]) {\n            if (res) res += ' '; // class 之间要有空格\n            res += key;\n        }\n    }\n    return res;\n}\n","import { isUndef } from '../../../shared/util';\nimport { genClassForVnode } from '../util/class';\n\n// 更新 class\nfunction updateClass(oldVnode, vnode) {\n    const el = vnode.elm;\n    const data = vnode.data;\n    const oldData = oldVnode.data;\n    \n    // 判断新旧节点是否有 staticClass 和 class\n    if (\n        isUndef(data.staticClass) &&\n        isUndef(data.class) &&\n        (isUndef(oldData) ||\n            (isUndef(oldData.staticClass) && isUndef(oldData.class)))\n    ) {\n        return;\n    }\n\n    // 获取 class 的值\n    let cls = genClassForVnode(vnode);\n\n    // 如果当前元素的 class 和其上一个设置的class 名相同，则不在重复设置\n    if (cls !== el._prevClass) {\n        el.setAttribute('class', cls);\n        el._prevClass = cls;\n    }\n}\n\nexport default {\n    create: updateClass,\n    update: updateClass\n};\n","import { cached, extend, toObject } from \"../../../shared/util\";\n\n// done: 解析 style 文本（cached 用于创建一个纯函数的缓存）\nexport const parseStyleText = cached(function (cssText) {\n  const res = {};\n  const listDelimiter = /;(?![^(]*\\))/g; // 匹配分号\n  const propertyDelimiter = /:(.+)/; // 匹配冒号\n\n  // 以分号进行分割\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      const tmp = item.split(propertyDelimiter); // 以冒号进行分割\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res;\n});\n\n// done: 合并同一个 vnode 的静态和动态 style\nfunction normalizeStyleData(data) {\n  const style = normalizeStyleBinding(data.style);\n  // 静态样式在编译期间被预处理为对象，并且始终是一个新对象，以便合并到其中是安全的\n  return data.staticStyle ? extend(data.staticStyle, style) : style;\n}\n\n// done: 将可能的数组或字符串值规范化为 Object\nexport function normalizeStyleBinding(bindingStyle) {\n  // 数组\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle); // 将对象数组合并为单个对象\n  }\n  // 字符串\n  if (typeof bindingStyle === \"string\") {\n    return parseStyleText(bindingStyle); // 解析 style 字符串\n  }\n  return bindingStyle;\n}\n\n// done: 获取 style 样式\n// 父组件的样式应该在子组件的样式之后，以便父组件的样式可以覆盖它\nexport function getStyle(vnode, checkChild) {\n  const res = {};\n  let styleData;\n\n  if (checkChild) { // 为真，则检查子节点\n    let childNode = vnode;\n\n    // 子节点是否为组件\n    while (childNode.componentInstance) { \n      childNode = childNode.componentInstance._vnode; // 子组件节点\n      if (\n        childNode &&\n        childNode.data &&\n        (styleData = normalizeStyleData(childNode.data))\n      ) {\n        extend(res, styleData); // 混合属性到目标对象中\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData); // 混合属性到目标对象中\n  }\n\n  let parentNode = vnode;\n  // 存在父节点\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res;\n}\n","import { getStyle, normalizeStyleBinding } from \"../util/style\";\nimport {\n  cached,\n  camelize,\n  extend,\n  isDef,\n  isUndef,\n  hyphenate,\n} from \"../../../shared/util\";\n\nconst cssVarRE = /^--/;\nconst importantRE = /\\s*!important$/;\n\nconst setProp = (el, name, val) => {\n  // cssVarRE 正则，是针对使用 了CSS 自定义属性（变量）的情况，例如：element { color: var(--bg-color);}\n  // 相关文档：https://developer.mozilla.org/zh-CN/docs/Web/CSS/Using_CSS_custom_properties\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    // 设置属性的同时，规定其优先级为 'important'\n    el.style.setProperty(\n      hyphenate(name),\n      val.replace(importantRE, \"\"),\n      \"important\"\n    );\n  } else {\n    const normalizedName = normalize(name); // 规范化 style 属性名\n    if (Array.isArray(val)) {\n      // style 绑定中的 property 提供一个包含多个值的数组，常用于提供多个带前缀的值，例如：\n      // <div :style=\"{ display: ['-webkit-box', '-ms-flexbox', 'flex'] }\"></div>\n      // 逐个设置，浏览器将只设置它能识别的。如果浏览器支持不带浏览器前缀的 flexbox，\n      // 那么就只会渲染 display: flex\n      for (let i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n// -moz --> Firefox浏览器  -webkit --> Chrome 和 Safari浏览器  -ms --> IE浏览器\nconst vendorNames = [\"Webkit\", \"Moz\", \"ms\"];\n\nlet emptyStyle;\n// cached 用于创建一个纯函数的缓存\nconst normalize = cached(function (prop) {\n  // 获取 style（ CSSStyleDeclaration 样式声明对象 ）上的所有属性\n  emptyStyle = emptyStyle || document.createElement(\"div\").style;\n\n  // 将连字符分隔的字符串驼峰化，例如：background-color --> backgroundColor\n  prop = camelize(prop);\n\n  // 不是 filter 且存在于 emptyStyle 中\n  if (prop !== \"filter\" && prop in emptyStyle) {\n    return prop;\n  }\n\n  // 若是走到这，则说明是 filter\n  const capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (let i = 0; i < vendorNames.length; i++) {\n    // 拼接上各个浏览器的前缀，例如：WebkitFilter\n    const name = vendorNames[i] + capName;\n    // 再次判断是否存在于 emptyStyle 中\n    if (name in emptyStyle) {\n      return name;\n    }\n  }\n});\n\n// done: 更新 style\nfunction updateStyle(oldVnode, vnode) {\n  const data = vnode.data;\n  const oldData = oldVnode.data;\n\n  // 判断新旧节点是否有 staticStyle 和 style\n  if (\n    isUndef(data.staticStyle) &&\n    isUndef(data.style) &&\n    isUndef(oldData.staticStyle) &&\n    isUndef(oldData.style)\n  ) {\n    return;\n  }\n\n  let cur, name;\n  const el = vnode.elm;\n  const oldStaticStyle = oldData.staticStyle; // 旧的静态 style\n  const oldStyleBinding = oldData.normalizedStyle || oldData.style || {}; // 旧的动态 style\n\n  // 获取 style 的老样式\n  const oldStyle = oldStaticStyle || oldStyleBinding;\n  // 规范化 style 样式\n  const style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // 提示：__ob__ 指的是 Observe 类，可参考相关文件路径：src/core/observe/index.js\n\n  // 存储规范化样式在一个不同的键下，以便下一次 diff\n  // 如果它是响应性的（style.__ob__），请确保克隆它，因为用户可能想要改变它\n  vnode.data.normalizedStyle = isDef(style.__ob__) ? extend({}, style) : style;\n\n  // 获取 style 样式\n  const newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    // 旧的样式属性在新样式中不存在，则设置 style 属性为空\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, \"\");\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    // 新旧样式属性不重复，则设置 style 属性\n    if (cur !== oldStyle[name]) {\n      // Ie9设置为空没有效果，必须使用空字符串\n      setProp(el, name, cur == null ? \"\" : cur);\n    }\n  }\n}\n\nexport default {\n  create: updateStyle,\n  update: updateStyle,\n};\n","import attrs from './attrs';\nimport klass from './class';\nimport style from './style';\n\nexport default [attrs, klass, style];\n","import * as nodeOps from './node-ops';\nimport { createPatchFunction } from '../../core/vdom/patch';\nimport platformModules from './modules/index';\n\nconst modules = platformModules;\n\nexport const patch = createPatchFunction({ nodeOps, modules });\n","import { initState } from './state';\nimport { mountComponent } from './lifecycle';\nimport { compileToFunctions } from '../../compiler/index';\nimport { baseOptions } from '../../web/compiler/options';\nimport { patch } from '../../web/runtime/patch';\n\nexport function initMixin(Vue) {\n  // 初始化函数\n  Vue.prototype._init = function (options) {\n    const vm = this; // 存储 this（ Vue实例 ）\n    vm.$options = options; // 将 options 挂载到 vm 上，以便后续使用\n    // 一个避免被观察的标志\n    vm._isVue = true;\n    // Vue 实例中的 data、 props、methods、computed 和 watch，都会在 initState 函数中\n    // 进行初始化。由于我们主要解说：Vue 数据劫持，所以只对 data 进行处理。\n    initState(vm);\n\n    if (vm.$options.el) {\n      // Vue.prototype.$mount --> 挂载函数\n      vm.$mount(vm.$options.el);\n    }\n  };\n  // 挂载函数\n  Vue.prototype.$mount = function (el) {\n    const vm = this;\n    const options = vm.$options;\n\n    // Vue 选项中的 render 函数若存在，则 Vue 构造函数不会从\n    // template 选项或通过 el 选项指定的挂载元素中提取出的 HTML 模板编译渲染函数。\n\n    // 处理模板（优先级）: render  >  template   >  html模板\n\n    // 若是 render 函数不存在，就生成 render\n    if (!options.render) {\n      let template = options.template; // 获取模板\n\n      // el存在，且 template 不存在\n      if (el && !template) {\n        // 挂载 el（ HTML 模板），以便在实例的 _update 方法中使用\n        vm.$el = document.querySelector(el);\n        template = vm.$el.outerHTML;\n      }\n\n      // 编译模板，生成 AST 抽象语法树并将其生成渲染函数 render\n      const render = compileToFunctions(template, baseOptions);\n      options.render = render; // 挂载 render\n    }\n    // 挂载组件\n    mountComponent(vm);\n  };\n\n  // patch 函数，用于创建文档树\n  Vue.prototype.__patch__ = patch;\n}\n","\nimport { createTextVNode } from '../vnode'\nimport { isFalse, isTrue, isDef, isUndef, isPrimitive } from '../../../shared/util'\n\n// 模板编译器试图通过在编译时静态分析模板来最小化规范化的需要。\n// 对于普通的HTML标记，可以完全跳过标准化，因为生成的渲染函数保证返回 Array<VNode>。\n// 且有两种情况需要额外的规范化:\n\n// 1. 当子组件包含组件时——因为函数组件可能返回Array而不是单个根。\n// 在这种情况下，只需要一个简单的标准化——如果任何子元素是Array，我们就用Array.prototype.concat将整个元素平化。\n// 它保证只有一级深度，因为功能组件已经规范化了它们自己的子组件。\n\n// 2. 当子元素包含总是生成嵌套数组的构造时，例如：<template>, <slot>, v-for 或者当用户用手写的 render函数 / JSX 提供子对象时。\n// 在这种情况下，需要完全标准化，以满足所有可能类型的子元素值。\n\n// done: 对 children 进行完全标准化\n// normalizeChildren 用于第二种情况，且在目前的代码中只做了对 v-for 的处理\nexport function normalizeChildren(children) {\n    return isPrimitive(children)\n        ? [createTextVNode(children)]\n        : Array.isArray(children)\n            ? normalizeArrayChildren(children)\n            : undefined;\n}\n\n// done: 是否为文本节点\nfunction isTextNode(node) {\n    return isDef(node) && isDef(node.text) && isFalse(node.isComment);\n}\n\n// done: 标准化数组子元素\nfunction normalizeArrayChildren(children, nestedIndex) {\n    const res = [];\n    let i, c, lastIndex, last;\n    for (i = 0; i < children.length; i++) {\n        c = children[i];\n        if (isUndef(c) || typeof c === 'boolean') continue;\n        lastIndex = res.length - 1;\n        last = res[lastIndex];\n\n        //  处理嵌套\n        if (Array.isArray(c)) {\n            if (c.length > 0) {\n                c = normalizeArrayChildren(c, `${nestedIndex || ''}_${i}`)\n                // 合并相邻文本节点\n                if (isTextNode(c[0]) && isTextNode(last)) {\n                    res[lastIndex] = createTextVNode(last.text + (c[0]).text)\n                    c.shift()\n                }\n                res.push.apply(res, c)\n            }\n        } else if (isPrimitive(c)) { // 是否为原始值\n\n            if (isTextNode(last)) {\n                // 合并相邻的文本节点，这对于 SSR hydration 是必要的，\n                // 因为文本节点在呈现为HTML字符串时本质上是合并的\n                res[lastIndex] = createTextVNode(last.text + c)\n            } else if (c !== '') {\n                // 将 primitive 转换为 vnode\n                res.push(createTextVNode(c))\n            }\n        } else {\n            if (isTextNode(c) && isTextNode(last)) {\n                // 合并相邻的文本节点\n                res[lastIndex] = createTextVNode(last.text + c.text)\n            } else {\n                // 嵌套数组子数组的默认键(可能由v-for生成)\n                if (isTrue(children._isVList) &&\n                    isDef(c.tag) &&\n                    isUndef(c.key) &&\n                    isDef(nestedIndex)) {\n                    c.key = `__vlist${nestedIndex}_${i}__`\n                }\n                res.push(c)\n            }\n        }\n    }\n\n    return res\n}\n","import VNode from \"./vnode\";\n\nimport { isTrue, isPrimitive } from \"../../shared/util\";\nimport { normalizeChildren } from \"./helpers/index\";\n\nconst SIMPLE_NORMALIZE = 1;\nconst ALWAYS_NORMALIZE = 2;\n\n// done: 创建元素 vnode 的包装器函数，提供更灵活的接口且不会被干扰\nexport function createElement(\n    tag,\n    data,\n    children,\n    normalizationType,\n    alwaysNormalize\n) {\n    // data 是数组或原始值，则对数据进行替换。\n    // 对于此处逻辑代码，建议结合生成的 render 渲染函数（看 Readme.md 文档）和 vue 官网文档-虚拟 DOM 章节进行理解(下方是链接)\n    // https://cn.vuejs.org/v2/guide/render-function.html#%E8%99%9A%E6%8B%9F-DOM\n\n    if (Array.isArray(data) || isPrimitive(data)) {\n        // console.log(\"data是数组或原始值------------------->\", tag, data, children);\n        normalizationType = children;\n        children = data;\n        data = undefined;\n    }\n\n    // normalizationType 值: 1 代表简单标准化  2 代表完全标准化\n    // alwaysNormalize 为 true，则需要对 children 进行完全标准化。\n    if (isTrue(alwaysNormalize)) {\n        normalizationType = ALWAYS_NORMALIZE;\n    }\n\n    return _createElement(tag, data, children, normalizationType);\n}\n// done: 创建元素 vnode\nexport function _createElement(tag, data, children, normalizationType) {\n    // console.log(\"_createElement--->执行\", tag, data, children);\n\n    if (normalizationType === ALWAYS_NORMALIZE) {\n        children = normalizeChildren(children); // children 需要完全标准化\n    }\n\n    let vnode;\n    if (typeof tag === \"string\") {\n        vnode = new VNode(tag, data, children, undefined, undefined);\n    }\n\n    return vnode;\n}\n","import { isDef, isObject, hasSymbol } from '../../../shared/util';\n\n\n// done: 处理 v-for 指令中的 lists（即要遍历的数组、字符串、数字或对象）\nexport function renderList(val, render) {\n    var ret, i, l, keys, key;\n    if (Array.isArray(val) || typeof val === \"string\") {\n        // val 是数组或字符串\n        ret = new Array(val.length);\n        for (i = 0, l = val.length; i < l; i++) {\n            // console.log('有ret------------------>', val[i], i);\n\n            ret[i] = render(val[i], i);\n        }\n    } else if (typeof val === \"number\") {\n        // val 是数字\n        ret = new Array(val);\n        for (i = 0; i < val; i++) {\n            ret[i] = render(i + 1, i);\n        }\n    } else if (isObject(val)) {\n        // val 是 'object' 对象\n\n        if (hasSymbol && val[Symbol.iterator]) {\n            // val 是 Symbol\n            ret = [];\n            var iterator = val[Symbol.iterator]();\n            var result = iterator.next();\n            while (!result.done) {\n                ret.push(render(result.value, ret.length));\n                result = iterator.next();\n            }\n        } else {\n            // val 是普通对象\n            keys = Object.keys(val);\n            ret = new Array(keys.length);\n            for (i = 0, l = keys.length; i < l; i++) {\n                key = keys[i];\n                ret[i] = render(val[key], key, i);\n            }\n        }\n    }\n    // ret 不存在，则设置为空数组\n    if (!isDef(ret)) {\n        ret = [];\n    }\n    // 标记为已处理\n    ret._isVList = true;\n    \n    return ret;\n}","\nimport { createTextVNode, toString } from '../../vdom/vnode'\nimport { createElement } from '../../vdom/create-element'\nimport { renderList } from './render-list'\n\n\nexport function installRenderHelpers (target) {\n  target._v = createTextVNode;\n  target._c = createElement;\n  target._s = toString;\n  target._l = renderList;\n}\n","import { installRenderHelpers } from './render-helpers/index'\n\nexport function renderMixin(Vue) {\n    // 安装运行时所需的辅助性渲染函数\n    installRenderHelpers(Vue.prototype);\n\n    // 调用 vm.$options.render 渲染函数，生成虚拟节点\n    Vue.prototype._render = function () {\n        const vm = this;\n        const vnode = vm.$options.render.call(vm); // 生成虚拟节点对象并返回\n\n        return vnode;\n    };\n}","import { initMixin } from './init';\nimport { lifecycleMixin } from './lifecycle';\nimport { renderMixin } from './render';\n\nfunction Vue(options) {\n    // 通过关键字 new 创建 Vue实例时，便会调用 Vue 原型方法 _init 初始化数据\n    this._init(options);\n}\n\n// 初始化相关操作\ninitMixin(Vue);\n// 生命周期相关操作\nlifecycleMixin(Vue);\n// 渲染相关操作\nrenderMixin(Vue);\n\nexport default Vue;","import Vue from './instance/index';\n\nVue.version = '2.0';\n\nexport default Vue\n"],"names":["proxy","vm","target","key","Object","defineProperty","get","set","newValue","remove","arr","item","length","index","indexOf","splice","_toString","prototype","toString","isPlainObject","obj","call","hasOwnProperty","hasOwn","hasProto","camelizeRE","camelize","cached","str","replace","_","c","toUpperCase","hyphenateRE","hyphenate","toLowerCase","def","val","enumerable","value","writable","configurable","isObject","toObject","res","i","extend","to","_from","fn","cache","create","cachedFn","hit","hasSymbol","Symbol","isNative","Reflect","ownKeys","Ctor","test","isUndef","v","undefined","isDef","isPrimitive","makeMap","expectsLowerCase","map","list","split","isTrue","isFalse","noop","a","b","_Set","Set","has","add","clear","uid","Dep","constructor","id","subs","addSub","sub","push","removeSub","depend","addDep","notify","slice","l","console","log","update","targetStack","pushTarget","popTarget","pop","methodsToPatch","arrayProto","Array","arrayMethods","forEach","method","original","mutator","args","result","apply","ob","__ob__","inserted","observeArray","arrayKeys","getOwnPropertyNames","observe","asRootData","Observer","isArray","isExtensible","_isVue","vmCount","dep","protoAugment","copyAugment","walk","keys","defineReactive","items","customSetter","shallow","property","getOwnPropertyDescriptor","getter","setter","arguments","childOb","reactiveGetter","dependArray","reactiveSetter","newVal","src","__proto__","e","initState","_watchers","options","$options","data","initData","$data","callbacks","pending","flushCallbacks","copies","timerFunc","Promise","p","resolve","then","setTimeout","nextTick","cb","ctx","_resolve","queue","waiting","flushing","resetSchedulerState","flushSchedulerQueue","watcher","sort","run","queueWatcher","Watcher","expOrFn","isRenderWatcher","_watcher","deps","newDeps","depIds","newDepIds","cleanupDeps","tmp","oldValue","updateComponent","mountComponent","_update","_render","lifecycleMixin","Vue","vnode","$el","prevEl","prevVnode","_vnode","__patch__","__vue__","$vnode","$parent","defaultTagRE","parseText","text","tagRE","tokens","rawTokens","lastIndex","match","tokenValue","exec","JSON","stringify","exp","trim","expression","join","attribute","ncname","qnameCapture","startTagOpen","RegExp","startTagClose","endTag","parseHTML","html","textEnd","startTagMatch","parseStartTag","start","tagName","attrs","endTagMatch","end","advance","substring","chars","attr","name","n","getAndRemoveAttr","el","removeFromMap","attrsMap","attrsList","getBindingAttr","getStatic","dynamicValue","staticValue","addAttr","range","dynamic","dynamicAttrs","rangeSetItem","plain","pluckModuleFunction","modules","m","filter","forAliasRE","stripParensRE","forIteratorRE","transforms","parse","template","stack","root","currentParent","tag","element","createASTElement","processFor","processElement","parent","children","child","type","makeAttrsMap","len","parseFor","inMatch","for","alias","iteratorMatch","iterator1","iterator2","processKey","scopedSlots","processAttrs","iterator","codegenState","dataGenFns","generate","ast","state","code","genElement","forProcessed","genFor","genData","genChildren","genProps","checkSkip","normalizationType","getNormalizationType","maybeComponent","genNode","needsNormalization","props","staticProps","dynamicProps","prop","transformSpecialNewlines","node","genText","compileToFunctions","render","Function","transformNode","staticClass","classBinding","staticKeys","parseStyleText","cssText","listDelimiter","propertyDelimiter","staticStyle","styleBinding","klass","style","baseOptions","createElement","elm","document","multiple","setAttribute","createTextNode","createComment","insertBefore","parentNode","newNode","referenceNode","removeChild","appendChild","nextSibling","setTextContent","textContent","setStyleScope","scopeId","VNode","context","createTextVNode","cloneVNode","cloned","isCloned","emptyNode","hooks","createPatchFunction","backend","j","cbs","nodeOps","emptyNodeAt","invokeCreateHooks","insertedVnodeQueue","createElm","parentElm","refElm","nested","ownerArray","createChildren","insert","checkDuplicateKeys","seenKeys","ref","removeVnodes","vnodes","startIdx","endIdx","ch","removeNode","patch","oldVnode","isRealElement","nodeType","oldElm","isEnumeratedAttr","isFalsyAttrValue","updateAttrs","cur","old","oldAttrs","setAttr","removeAttribute","baseSetAttr","genClassForVnode","renderClass","class","dynamicClass","concat","stringifyClass","stringifyArray","stringifyObject","stringified","updateClass","oldData","cls","_prevClass","normalizeStyleData","normalizeStyleBinding","bindingStyle","getStyle","checkChild","styleData","childNode","componentInstance","cssVarRE","importantRE","setProp","setProperty","normalizedName","normalize","vendorNames","emptyStyle","capName","charAt","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","platformModules","initMixin","_init","$mount","querySelector","outerHTML","normalizeChildren","normalizeArrayChildren","isTextNode","isComment","nestedIndex","last","shift","_isVList","ALWAYS_NORMALIZE","alwaysNormalize","_createElement","renderList","ret","next","done","installRenderHelpers","_v","_c","_s","_l","renderMixin","version"],"mappings":"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"}