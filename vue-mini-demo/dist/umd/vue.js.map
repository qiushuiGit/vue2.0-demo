{"version":3,"file":"vue.js","sources":["../../src/core/instance/proxy.js","../../src/shared/util.js","../../src/core/observe/array.js","../../src/core/observe/index.js","../../src/core/instance/state.js","../../src/core/instance/lifecycle.js","../../src/compiler/parser/text-parser.js","../../src/compiler/parser/html-parser.js","../../src/compiler/parser/helpers.js","../../src/compiler/parser/index.js","../../src/compiler/codegen/index.js","../../src/compiler/index.js","../../src/web/compiler/modules/class.js","../../src/web/compiler/util/style.js","../../src/web/compiler/modules/style.js","../../src/web/compiler/modules/index.js","../../src/web/compiler/options.js","../../src/web/runtime/node-ops.js","../../src/core/vdom/vnode.js","../../src/core/vdom/patch.js","../../src/web/runtime/util/attrs.js","../../src/web/runtime/modules/attrs.js","../../src/web/runtime/util/class.js","../../src/web/runtime/modules/class.js","../../src/web/runtime/modules/index.js","../../src/web/runtime/patch.js","../../src/core/instance/init.js","../../src/core/vdom/helpers/normalize-children.js","../../src/core/vdom/create-element.js","../../src/core/instance/render-helpers/render-list.js","../../src/core/instance/render-helpers/index.js","../../src/core/instance/render.js","../../src/core/instance/index.js","../../src/core/index.js"],"sourcesContent":["function proxy (vm, target, key) {\n  // Object.defineProperty() 方法会直接在一个对象上定义一个新属性，或者修改一个对象的现有属性，并返回此对象。\n  // 将属性都挂载到 vm（Vue实例）上，并设置属性的 getter/setter，以实现数据代理：vm.name --> vm.$data.name\n  Object.defineProperty(vm, key, {\n    get () {\n      return vm[target][key]; // vm[target][key] --> vm.$data.name\n    },\n    set (newValue) {\n      vm[target][key] = newValue;\n    }\n  });\n}\n\nexport default proxy;","// done:: 是否存在 __proto__\r\nexport const hasProto = '__proto__' in {};\r\n\r\n// done: 定义一个属性\r\n export function def (obj, key, val, enumerable) {\r\n    Object.defineProperty(obj, key, {\r\n      value: val,\r\n      enumerable: !!enumerable,\r\n      writable: true,\r\n      configurable: true\r\n    })\r\n  }\r\n\r\n// done: 对象检测\r\nexport function isObject(obj) {\r\n  return obj !== null && typeof obj === 'object';\r\n}\r\n\r\n// done: 混合属性到目标对象中\r\nexport function extend(to, _from) {\r\n  for (const key in _from) {\r\n    to[key] = _from[key];\r\n  }\r\n  return to;\r\n}\r\n\r\n// done: 获取并删除（removeFromMap 为真） attrsMap 中的属性\r\nexport function getAndRemoveAttr(el, name, removeFromMap) {\r\n  if (removeFromMap) {\r\n    delete el.attrsMap[name];\r\n  }\r\n  return el.attrsMap[name];\r\n}\r\n\r\n// done: 创建一个纯函数的缓存\r\nexport function cached(fn) {\r\n  const cache = Object.create(null);\r\n  return function cachedFn(str) {\r\n    const hit = cache[str];\r\n    return hit || (cache[str] = fn(str));\r\n  };\r\n}\r\n\r\n// done: 判断 Symbol 和 Reflect 是否都存在\r\nexport const hasSymbol =\r\n  typeof Symbol !== 'undefined' &&\r\n  isNative(Symbol) &&\r\n  typeof Reflect !== 'undefined' &&\r\n  isNative(Reflect.ownKeys);\r\n\r\nexport function isNative(Ctor) {\r\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString());\r\n}\r\n\r\n// done: 参数等于 undefined 或 null\r\nexport function isUndef(v) {\r\n  return v === undefined || v === null;\r\n}\r\n\r\n// done: 参数不等于 undefined 和 null\r\nexport function isDef(v) {\r\n  return v !== undefined && v !== null;\r\n}\r\n\r\n// done: 检查 value 是否为原始值\r\nexport function isPrimitive(value) {\r\n  return (\r\n    typeof value === 'string' ||\r\n    typeof value === 'number' ||\r\n    typeof value === 'symbol' ||\r\n    typeof value === 'boolean'\r\n  );\r\n}\r\n\r\n// done: 制作一个映射，并返回一个函数来检查键是否在该映射中。\r\nexport function makeMap(str, expectsLowerCase) {\r\n  const map = Object.create(null);\r\n  const list = str.split(',');\r\n\r\n  for (let i = 0; i < list.length; i++) {\r\n    map[list[i]] = true;\r\n  }\r\n\r\n  return expectsLowerCase ? (val) => map[val.toLowerCase()] : (val) => map[val];\r\n}\r\n\r\nexport function isTrue (v) {\r\n    return v === true\r\n  }\r\n  \r\n  export function isFalse (v) {\r\n    return v === false\r\n  }","import { def } from '../../shared/util';\n\n// 存储数组方法\nconst methodsToPatch = [\n    'push',\n    'pop',\n    'shift',\n    'unshift',\n    'splice',\n    'sort',\n    'reverse'\n];\n\nconst slice = Array.prototype.slice;\nconst arrayProto = Array.prototype; // 存储数组原型\nconst arrayMethods = Object.create(arrayProto); // 创建一个新的数组原型对象\n\nmethodsToPatch.forEach(function (method) {\n\n    const original = arrayProto[method]; // 缓存数组的原方法\n\n    def(arrayMethods, method, function mutator(...args) {\n        // 使用数组的原生方法，对数组进行增、删。\n        const result = original.apply(this, args);\n        const ob = this.__ob__;\n        let inserted;\n\n        switch (method) {\n            case 'push':\n            case 'unshift':\n                inserted = args;\n                break\n            case 'splice':\n                // splice() 方法用于添加或删除数组中的元素\n                // 删除：splice(0, 1) --> args 即 [0, 1]\n                // 增加：splice(1, 0, '新增') --> args 即 [1, 0, '新增']\n\n                // slice() 方法可从已有的数组中返回选定的元素\n                // args.slice(2)，固定下标值为 2，是因为 splice 的使用方式：\n                // splice，若是删除，则 args.slice(2) 返回空数组\n                // splice，若是新增，则 args.slice(2) 返回一个新数组，里面是所有新增的数据\n                inserted = args.slice(2);\n                break\n        }\n        // inserted 为真（空数组 --> []，也是真），则调用 observeArray() 方法对其进行观察\n        if (inserted) ob.observeArray(inserted);\n        \n        return result\n    })\n\n\n\n    // arrayMethods[method] = function () {\n\n    //     let inserted; // 存储数组中新增的值，默认undefined\n    //     let args = slice.call(arguments); // 将 arguments 转成一个新的数组并返回\n\n    //     // 这里可以不要返回值，直接写：original.apply(this, args)\n    //     const result = original.apply(this, args); // 使用数组的原生方法，对数组进行增、删。\n\n    //     // console.log('数组新方法', args);\n    //     switch (method) {\n    //         case 'push':\n    //         case 'unshift':\n    //             inserted = args;\n    //             break;\n    //         case 'splice':\n    //             // splice() 方法用于添加或删除数组中的元素\n    //             // 删除：splice(0, 1) --> args 即 [0, 1]\n    //             // 增加：splice(1, 0, '新增') --> args 即 [1, 0, '新增']\n\n    //             // slice() 方法可从已有的数组中返回选定的元素\n    //             // args.slice(2)，固定下标值为 2，是因为 splice 的使用方式：\n    //             // splice，若是删除，则 args.slice(2) 返回空数组\n    //             // splice，若是新增，则 args.slice(2) 返回一个新数组，里面是所有新增的数据\n    //             inserted = args.slice(2);\n    //             break;\n    //         default:\n    //             break;\n    //     }\n\n    //     // inserted 为真（空数组 --> []，也是真），则调用 observeArray() 方法对其进行观察\n    //     inserted && observeArray(inserted);\n\n    //     return result;\n    // }\n});\n\nexport {\n    arrayMethods\n}","// import observeArray from './observeArray';\n// import { defineReactive } from './reactive';\nimport { arrayMethods } from './array';\nimport { isObject, def, hasProto } from '../../shared/util';\n\nconst arrayKeys = Object.getOwnPropertyNames(arrayMethods)\n\nexport function observe(val) {\n\n    // 检查 val 是否为对象（注意：在 js 中，数组也是对象，isObject并不排除数组）。\n    if (!isObject(val)) return;\n    return new Observer(val);\n}\n\nexport class Observer {\n\n    constructor(value) {\n        this.value = value;\n\n        // 为当前 value 定义 __ob__ 属性，其值为 this（即当前 Observer 类）\n        def(value, '__ob__', this);\n\n        if (Array.isArray(value)) {\n            // 以是否存在 __proto__ 来判断使用何种方法增加扩充目标对象或数组\n            if (hasProto) {\n                protoAugment(value, arrayMethods);\n            } else {\n                copyAugment(value, arrayMethods, arrayKeys);\n            }\n\n            // 观察数组（Array）\n            this.observeArray(value);\n        } else {\n            // 观察对象（Object)\n            this.walk(value)\n        }\n    }\n\n    // 遍历所有属性并将它们转换为 getter/setter。仅当值类型为 Object 时才应调用此方法\n    walk(obj) {\n        const keys = Object.keys(obj)\n        for (let i = 0; i < keys.length; i++) {\n            const key = keys[i]; // 属性\n            const value = obj[key]; // 属性值\n            defineReactive(obj, key, value)\n        }\n    }\n\n    // 观察数组（Array）的每一项\n    observeArray(items) {\n        for (let i = 0, l = items.length; i < l; i++) {\n            observe(items[i])\n        }\n    }\n}\n\n// function Observer(val) {\n\n//     if (Array.isArray(val)) {\n//         // arrayMethods 中存储的是：重写的数组方法，例如：push、unshift 等。\n//         // 重写为了在更改数组中的数据时，做出更多操作。比如，通过 push 方法向数组中新添数据时，\n//         // 需要对新的数据进行观察，设置 getter/setter，否则它们将不能在后续的修改中做出反应。\n//         // 实际上，重写的数组方法，其内部依旧使用数组的原生方法来实现数据的增、删。\n\n//         val.__proto__ = arrayMethods; // 使用 __proto__ 拦截原型链来增加目标对象\n//         observeArray(val); // 观察数组（Array）的每一项\n//     } else {\n//         this.walk(val); // 观察对象（Object --> {}）\n//     }\n// }\n\n// export function observeArray(arr) {\n//     for (let i = 0; i < arr.length; i++) {\n//         observe(arr[i]); // 递归观察，arr[i]可能是一个对象\n//     }\n// }\n\nfunction defineReactive(data, key, value) {\n\n    // 递归观察，value可能是一个对象\n    observe(value);\n\n    // Object.defineProperty() 方法会直接在一个对象上定义一个新属性，或者修改一个对象的现有属性，并返回此对象。\n    // 它是实现数据劫持的关键所在。\n    Object.defineProperty(data, key, {\n        get: function reactiveGetter() {\n              console.log('获取', value);\n            return value;\n        },\n        set: function reactiveSetter(newValue) {\n              console.log('设置', newValue);\n            if (newValue === value) return; // 同名属性，不需要重新赋值或观察\n            observe(value); // 递归观察，value可能是一个对象\n            value = newValue;\n        }\n    });\n}\n\n// done: 通过使用 __proto__ 截取原型链来增加目标对象或数组\nfunction protoAugment(target, src) {\n    target.__proto__ = src;\n}\n\n// done: 通过定义隐藏属性来扩充目标对象或数组\nfunction copyAugment(target, src, keys) {\n    for (let i = 0, l = keys.length; i < l; i++) {\n        const key = keys[i];\n        def(target, key, src[key]);\n    }\n}\n// // 遍历所有属性并将它们转换为 getter/setter。仅当值类型为 Object 时才应调用此方法\n// Observer.prototype.walk = function (data) {\n\n//     // Object.keys() 方法会返回一个由一个给定对象的自身可枚举属性组成的数组，\n//     // 数组中属性名的排列顺序和正常循环遍历该对象时返回的顺序一致 。\n//     const keys = Object.keys(data);\n\n//     for (let i = 0; i < keys.length; i++) {\n\n//         const key = keys[i]; // 属性\n//         const value = data[key]; // 属性值\n\n//         // 在对象上定义一个反应性属性\n//         defineReactive(data, key, value);\n\n//     }\n\n// }\n","import proxy from './proxy';\r\nimport { observe } from '../observe/index';\r\n\r\nfunction initState (vm) {\r\n  const options = vm.$options;\r\n\r\n  if (options.data) {\r\n    initData(vm); // 初始化 data\r\n  }\r\n}\r\n\r\nfunction initData (vm) {\r\n  let data = vm.$options.data;\r\n\r\n  // Vue 中的 data 可以是函数（Vue 中建议将 data 作为一个函数来使用），也可以是 Object --> {}\r\n  data = vm.$data = typeof data === 'function' ? data.call(vm) : data || {};\r\n  \r\n  for (var key in data) {\r\n    // proxy 实现数据代理，vm.name --> vm.$data.name\r\n    proxy(vm, '$data', key);\r\n  }\r\n\r\n  // observe 观察者，对数据进行观测，以便在其发生改变时，做出反应。\r\n  observe(vm.$data); \r\n}\r\n\r\nexport {\r\n    initState\r\n}","// 挂载组件\nfunction mountComponent(vm) {\n    // vm._render() 返回虚拟节点 vnode\n    vm._update(vm._render()); // 更新组件\n}\n\nfunction lifecycleMixin(Vue) {\n    // 挂载 _update() 更新函数\n    Vue.prototype._update = function (vnode) {\n        const vm = this;\n        // console.log('_update--->执行', vm.$el, vnode);\n        // 将 vnode 虚拟节点生成相应的 HTML 元素\n        vm.__patch__(vm.$el, vnode);\n    };\n}\n\nexport { lifecycleMixin, mountComponent };\n","// 匹配双大括号 => {{tip}}\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\n\nexport function parseText(text) {\n  const tagRE = defaultTagRE;\n\n  if (!tagRE.test(text)) {\n    return false;\n  }\n\n  const tokens = [];\n  const rawTokens = [];\n\n  // lastIndex 下一次匹配开始的位置。每次循环时，都将其初始为 0，是为防止处理其它文本时，\n  // 取到 lastIndex 是上一个循环结束后保留下的值而导致出错。\n  let lastIndex = tagRE.lastIndex = 0;\n  let match, index, tokenValue;\n\n  // 文本样例解析参考：<div>函数字符串，{{ tip }} 哈哈</div>\n\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n\n    if (index > lastIndex) { // 截取 {{ tip }} 前面的纯文本\n      rawTokens.push(tokenValue = text.slice(lastIndex, index));\n      tokens.push(JSON.stringify(tokenValue))\n    }\n    // 获取 {{ tip }} 中的 tip\n    const exp = match[1].trim();\n    tokens.push(`_s(${exp})`);\n    rawTokens.push({\n      '@binding': exp\n    });\n\n    lastIndex = index + match[0].length; // 标记下一次匹配开始的位置\n  }\n\n   // 截取 {{ tip }} 之后的存文本\n  if (lastIndex < text.length) {\n    rawTokens.push(tokenValue = text.slice(lastIndex));\n    tokens.push(JSON.stringify(tokenValue));\n  }\n\n  return {\n    expression: tokens.join('+'),\n    tokens: rawTokens\n  }\n}","// 匹配属性： id=\"app\"、id='app' 或 id=app\r\nconst attribute =\r\n  /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\r\n// 匹配标签：<my-header></my-header>\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\n// 匹配标签：<my:header></my:header>\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\n// 匹配开始标签：<div\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`);\r\n// 匹配闭合标签： > 或 />\r\nconst startTagClose = /^\\s*(\\/?)>/;\r\n// 匹配结束标签： </div>\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);\r\n\r\n// DONE 解析模版字符串，生成 AST 语法树\r\nexport function parseHTML(html, options) {\r\n  let text; // 纯文本\r\n\r\n  // vue2.0 源码中对以下几种情况分别进行了处理：注释标签、条件注释标签、Doctype、开始标签、结束标签。\r\n  // 而每当处理完一种情况时，都会阻断代码继续往下执行且开启新的一轮循环（注：使用 continue 实现 ），\r\n  // 并且会重置 html 字符串，也就是删掉匹配到的 html 字符串，保留未匹配的 ，以便在下一次循环处理。\r\n\r\n  // 提示：在解读以上几种情况的源码时，配合模板样例来理解会让你理解起来更容易。\r\n  while (html) {\r\n    // textEnd 为 0，则说明是一个开始标签。\r\n    let textEnd = html.indexOf('<');\r\n\r\n    if (textEnd === 0) {\r\n      // 解析开始标签及其属性并将其存放在一个对象中返回，例如：\r\n      // { tagName: 'div', attrs: [{ name: 'id', value: 'app' }] }\r\n      const startTagMatch = parseStartTag();\r\n      // console.log('解析——开始标签——结果', startTagMatch);\r\n\r\n      // 处理开始标签\r\n      if (options.start && startTagMatch) {\r\n        options.start(startTagMatch.tagName, startTagMatch.attrs);\r\n        continue; // 执行到 continue，将开始新的一轮循环，后续代码不会执行\r\n      }\r\n\r\n      const endTagMatch = html.match(endTag); // 匹配结束标签\r\n\r\n      // 处理结束标签\r\n      if (options.end && endTagMatch) {\r\n        advance(endTagMatch[0].length);\r\n        options.end(endTagMatch[1]);\r\n        continue;\r\n      }\r\n    }\r\n    // 截取 HTML 模版字符串中的文本\r\n    if (textEnd > 0) {\r\n      text = html.substring(0, textEnd);\r\n    }\r\n    // 处理文本内容\r\n    if (options.chars && text) {\r\n      advance(text.length);\r\n      options.chars(text);\r\n    }\r\n  }\r\n\r\n  // 解析开始标签及其属性，例如：<div id=\"app\">\r\n  function parseStartTag() {\r\n    // 如果没有找到任何匹配的文本， match() 将返回 null。否则，它返回一个数组，\r\n    // 其中存放了与它找到的匹配文本有关的信息。\r\n    const start = html.match(startTagOpen); // 匹配开始标签\r\n    let end, attr;\r\n    if (start) {\r\n      // 存放开始标签名和属性\r\n      const match = {\r\n        tagName: start[1], // 开始标签的名，例如：div\r\n        attrs: [] // 开始标签的属性，例如：{ name: 'id', value: 'app' }\r\n      };\r\n\r\n      // 删除已匹配到的 HTML 字符串，保留未匹配到的。\r\n      // 例如：匹配到 <div id=\"app\"></div> 中的 <div，调用 advance() 方法后，\r\n      // 原 HTML 字符窜就是这样：id=\"app\"></div>\r\n      advance(start[0].length);\r\n\r\n      // 当匹配到属性（ 形如：id='app'），但未匹配到开始标签的闭合（ 形如：> ）时，进入循环\r\n      while (\r\n        !(end = html.match(startTagClose)) &&\r\n        (attr = html.match(attribute))\r\n      ) {\r\n        match.attrs.push({\r\n          name: attr[1], // 属性名: id\r\n          // 若是你在通过 new 关键字创建 vue 实例时，提供了 template 选项\r\n          // 且在它的字符串中,有的标签的属性使用的是单引号或者没有带引号，\r\n          // 例如：<div id='app'></div> 或 <div id=app></div> 这种形式，那么\r\n          // 在匹配标签的属性时，其返回的数组中这个属性的值，可能在此数组的 下标4 或 下标5\r\n          value: attr[3] || attr[4] || attr[5] // 属性值: app\r\n        });\r\n\r\n        advance(attr[0].length);\r\n      }\r\n\r\n      // 如果匹配到开始标签的闭合（ 形如：> ），则返回 match 对象\r\n      if (end) {\r\n        advance(end[0].length);\r\n        return match;\r\n      }\r\n    }\r\n  }\r\n  // DONE 截取 HTML 字符串，将已匹配到的字符从原有字符中删除。\r\n  function advance(n) {\r\n    // substring() 方法用于提取字符串中介于两个指定下标之间的字符。\r\n    html = html.substring(n);\r\n  }\r\n}\r\n","// 注意: 这只是从数组 (attrsList) 中删除了属性，以便不被 processAttrs 处理。\r\n// 默认情况下，它不会从映射 (attrsMap) 中删除它，因为在代码生成期间需要映射。\r\n\r\n// done: 获取并删除属性\r\nexport function getAndRemoveAttr(el, name, removeFromMap) {\r\n  let val;\r\n  if ((val = el.attrsMap[name]) != null) {\r\n    const list = el.attrsList;\r\n    for (let i = 0, l = list.length; i < l; i++) {\r\n      if (list[i].name === name) {\r\n        list.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  if (removeFromMap) {\r\n    delete el.attrsMap[name];\r\n  }\r\n  return val;\r\n}\r\n\r\n// DONE 获取绑定的属性\r\nexport function getBindingAttr(el, name, getStatic) {\r\n  const dynamicValue =\r\n    getAndRemoveAttr(el, ':' + name) || getAndRemoveAttr(el, 'v-bind:' + name);\r\n\r\n  // 动态绑定属性，例如，v-bind:key = 'index' 或 :key = 'index'\r\n  if (dynamicValue != null) {\r\n    // parseFilters(dynamicValue)\r\n    return dynamicValue;\r\n  } else if (getStatic !== false) {\r\n    // 静态绑定属性，例如，ref = \"nameRef\"\r\n    const staticValue = getAndRemoveAttr(el, name);\r\n    if (staticValue != null) {\r\n      return JSON.stringify(staticValue);\r\n    }\r\n  }\r\n}\r\n\r\n// DONE 为 ast 对象添加 attrs 属性\r\nexport function addAttr(el, name, value, range, dynamic) {\r\n  const attrs = dynamic\r\n    ? el.dynamicAttrs || (el.dynamicAttrs = [])\r\n    : el.attrs || (el.attrs = []);\r\n  attrs.push(\r\n    rangeSetItem(\r\n      {\r\n        name,\r\n        value,\r\n        dynamic\r\n      },\r\n      range\r\n    )\r\n  );\r\n  el.plain = false;\r\n}\r\n\r\n// DONE 合并对象属性\r\nfunction rangeSetItem(item, range) {\r\n  if (range) {\r\n    if (range.start != null) {\r\n      item.start = range.start;\r\n    }\r\n    if (range.end != null) {\r\n      item.end = range.end;\r\n    }\r\n  }\r\n  return item;\r\n}\r\n\r\n// DONE 依据 key 值，选出相应模块函数\r\nexport function pluckModuleFunction(modules, key) {\r\n  return modules ? modules.map((m) => m[key]).filter((_) => _) : [];\r\n}\r\n","import { parseText } from './text-parser';\nimport { parseHTML } from './html-parser';\nimport { addAttr } from './helpers';\nimport { extend } from '../../shared/util';\nimport {\n    getAndRemoveAttr,\n    getBindingAttr,\n    pluckModuleFunction\n} from './helpers';\n\n// 匹配 v-for='(item,index) in arrList' 中的：'(item,index) in arrList'，这里仅是举例\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\n// 匹配圆括号 ——> ()\nconst stripParensRE = /^\\(|\\)$/g;\n// 匹配',' 和 'index'，例如：item, index ——> , index\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\n\n/*\n  假设模板样例：\n   <div id=\"app\" style=\"color: #f66;font-size: 20px;\">\n    函数字符串，{{ tip }}\n    <span class=\"cla\">{{ studentNum }}</span>\n  </div>\n*/\n\nlet transforms;\n\n// done: 解析模版字符串，生成 ast 语法树\nexport function parse(template, options) {\n    // 获取 transformNode 函数，用于处理 class、style 等属性\n    transforms = pluckModuleFunction(options.modules, 'transformNode');\n\n    const stack = []; // 存放所有开始标签的初始 AST 对象\n    let root; // 最终返回的 AST 对象\n    let currentParent; // 当前元素的父级\n\n    parseHTML(template, {\n        // DONE 标签开始\n        start(tag, attrs) {\n            // 创建 AST 对象\n            const element = createASTElement(tag, attrs);\n            processFor(element); // 处理 v-for 指令\n\n            // 如果 root 根节点不存在，则说明当前节点即是整个模版的最顶层节点，也就是第一个节点\n            if (!root) {\n                root = element;\n            }\n\n            // 保存当前父节点（AST 对象）\n            currentParent = element;\n            // 将 AST 对象 push 到 stack 栈中，当解析到其相对应的结束标签时，\n            // 则将这个标签对应的 AST 对象 从栈中 pop 出来。\n\n            // 原因：解析开始标签时，是顺时针；解析结束标签时，是逆时针。结合模板样例看，\n            // 解析顺序如下：<div> => <span> => ...  => </span> => </div>\n\n            // 因此，解析开始标签生成的 AST 对象被 push 到栈中后，若想在解析到其相应的结束标签时取出，\n            // 则要使用 pop。整个操作流程，结合 start() 和 end() 方法一起看，会更易理解。\n\n            stack.push(element);\n        },\n\n        // done: 标签结束\n        end(tag) {\n            // pop() 方法将删除数组的最后一个元素，把数组长度减 1，并且返回它删除的元素的值。\n            // 如果数组已经为空，则 pop() 不改变数组，并返回 undefined 值。\n\n            const element = stack.pop(); // 获取当前元素标签的 AST 对象\n            currentParent = stack[stack.length - 1]; // 获取当前元素标签的父级 AST 对象\n\n            // 处理 ast 对象中的属性\n            processElement(element);\n\n            if (currentParent) {\n                // 标记父子元素\n                element.parent = currentParent; // 子元素存储父元素\n                currentParent.children.push(element); // 父元素存入子元素\n            }\n        },\n\n        // done: 解析文本\n        chars(text) {\n            if (!currentParent) {\n                return;\n            }\n\n            let res;\n            let child;\n            const children = currentParent.children;\n\n            text = text.trim(); // 去掉首尾空格\n            if (text) {\n                // console.log('text------解析文本-->', 'text: ' + text, 'children: ', children);\n                if (text !== ' ' && (res = parseText(text))) {\n                    child = {\n                        type: 2, // 标记 ast 对象子元素的类型\n                        text,\n                        expression: res.expression,\n                        tokens: res.tokens\n                    };\n    \n                } else if (\n                    text !== ' ' ||\n                    !children.length ||\n                    children[children.length - 1].text !== ' '\n                ) {\n                    \n                    child = {\n                        type: 3, // 标记 ast 对象子元素的类型\n                        text,\n                    };\n                    \n                }\n\n                if (child) {\n                    children.push(child);\n                }\n            }\n        }\n    });\n\n    return root;\n}\n\n// done: 生成 ast 对象\nfunction createASTElement(tagName, attrs) {\n    return {\n        tag: tagName, // 标签名\n        type: 1, // 标记 ast 对象类型\n        children: [], // 标签子级\n        attrsList: attrs, // 标签属性\n        attrsMap: makeAttrsMap(attrs),\n        parent // 标签父级\n    };\n}\n\n// DONE 标签属性的映射\nfunction makeAttrsMap(attrs) {\n    const map = {};\n    for (var i = 0, len = attrs.length; i < len; i++) {\n        if (map[attrs[i].name]) {\n            console.log('duplicate attribute: 属性重复' + attrs[i].name, attrs[i]);\n            return false;\n        }\n        map[attrs[i].name] = attrs[i].value;\n    }\n    return map;\n}\n// DONE 处理 v-for 指令\nfunction processFor(el) {\n    const exp = getAndRemoveAttr(el, 'v-for');\n    // 判断 v-for 是否存在\n    if (exp && typeof exp === 'string') {\n        const res = parseFor(exp); // 解析 v-for 指令\n        if (res) {\n            // 将 res中的属性（例如：item、arrList）添加到目标对象（el即ast对象）中\n            extend(el, res);\n        } else {\n            console.log(`Invalid v-for expression: ${exp}`);\n        }\n    }\n}\n// DONE 解析 v-for 指令\nfunction parseFor(exp) {\n    // 匹配 v-for='(item,index) in arrList' 中的：'(item,index) in arrList'，这里仅是举例\n    const inMatch = exp.match(forAliasRE);\n    // 如果没有找到任何匹配的文本， match() 将返回 null。否则，它将返回一个数组，\n    // 其中存放了与它找到的匹配文本有关的信息。\n    if (!inMatch) return;\n\n    const res = {};\n    // 获取 arrList 并去掉其前后空格\n    res.for = inMatch[2].trim();\n    // 获取 (item, index) 并去掉其前后空格以及将圆括号即 () 替换为空。例如：(item, index) ——> item, index\n    const alias = inMatch[1].trim().replace(stripParensRE, '');\n    // 匹配 ',' 和 'index'，例如：item, index ——> , index\n    const iteratorMatch = alias.match(forIteratorRE);\n\n    // iteratorMatch 为真，说明你使用 v-for 时，写的是 (item, index)。否则，就是 (item) 或 item。\n    if (iteratorMatch) {\n        // 将 ',' 和 'index'替换为空，得到 item 并去除其前后空格。例如：item, index ——> item\n        res.alias = alias.replace(forIteratorRE, '').trim();\n        // 获取 index 并去除其前后空格\n        res.iterator1 = iteratorMatch[1].trim();\n        if (iteratorMatch[2]) {\n            // 若是走到这里，说明你多写了逗号。例如：(item, , , index)。\n            // 而这时，index 的值在 iteratorMatch[2] 的位置\n            res.iterator2 = iteratorMatch[2].trim();\n        }\n    } else {\n        res.alias = alias;\n    }\n\n    return res;\n}\n\n// DONE 处理 ast 对象\nfunction processElement(element) {\n    // 处理 key\n    processKey(element);\n\n    // 在删除结构属性后确定这是否是普通元素\n    element.plain =\n        !element.key && !element.scopedSlots && !element.attrsList.length;\n\n    // 处理 class 或 style 属性\n    for (let i = 0; i < transforms.length; i++) {\n        element = transforms[i](element) || element;\n    }\n\n    processAttrs(element); // 处理属性\n\n    return element;\n}\n\n// DONE 处理 key\nfunction processKey(el) {\n    const exp = getBindingAttr(el, 'key');\n\n    if (exp) {\n        if (el.tag === 'template') {\n            console.log(`<template>不能被设置 key。请将 key 放在真实元素上。`);\n            return false;\n        }\n\n        if (el.for) {\n            const iterator = el.iterator2 || el.iterator1;\n            const parent = el.parent;\n\n            if (\n                iterator &&\n                iterator === exp &&\n                parent &&\n                parent.tag === 'transition-group'\n            ) {\n                console.log(\n                    `不要使用 v-for 索引（index）作为 <transition-group> 子节点的 key`\n                );\n                return false;\n            }\n        }\n\n        el.key = exp;\n    }\n}\n\n// DONE 处理属性\nfunction processAttrs(el) {\n    const list = el.attrsList;\n    let i, l, name, rawName, value;\n\n    for (i = 0, l = list.length; i < l; i++) {\n        name = rawName = list[i].name;\n        value = list[i].value;\n        // 为 ast 对象添加 attrs 属性，用于存放 ast 中的属性\n        addAttr(el, name, JSON.stringify(value), list[i]);\n    }\n}\n","import { pluckModuleFunction } from \"../parser/helpers\";\n\n/* \n  以下三个个函数的作用：\n\n  _c() => createElement() 创建元素节点\n\n  _v() => createTextNode() 创建文本节点\n\n  _s(value) => _s(tip) 解析双大括号，例如：{{tip}}\n*/\n\n/*\n  ast => render 渲染函数\n\n  function render() {\n    return `_c(\"div\",{id: \"app\",style:{ \"color\":\"#f66\",\"font-size\":\"20px\"}},\n      _v(\"函数字符串，\"+_s(tip)),\n      _c(\"span\", { \"class\": \"cla\", \"style\": { \"color\": \"green\" } }, _v(_s(studentNum)))  \n    )`;\n  }\n*/\n\n// DONE 生成配置状态对象\nfunction codegenState(options) {\n  return {\n    options,\n    // 获取 class 和 style 模块中的 genData函数，用于拼接 class 和 style 属性\n    dataGenFns: pluckModuleFunction(options.modules, \"genData\"),\n  };\n}\n\n// DONE 生成 code 代码字符串\nexport function generate(ast, options) {\n  const state = codegenState(options);\n  const code = ast\n    ? ast.tag === \"script\"\n      ? \"null\"\n      : genElement(ast, state)\n    : '_c(\"div\")';\n\n  return code;\n}\n\n// DONE 生成 code 代码字符串\nfunction genElement(el, state) {\n  if (el.for && !el.forProcessed) {\n    return genFor(el, state);\n  } else {\n    // 处理 element\n    let code;\n    let data;\n\n    if (!el.plain) {\n      data = genData(el, state);\n    }\n\n    const children = genChildren(el, state, true);\n\n    code = `_c('${el.tag}'${\n      data ? `,${data}` : \"\" // data\n    }${\n      children ? `,${children}` : \"\" // children\n    })`;\n\n    return code;\n  }\n}\n\n// DONE 处理有 v-for 指令的 ast 对象\nfunction genFor(el, state) {\n  const exp = el.for;\n  const alias = el.alias;\n  const iterator1 = el.iterator1 ? `,${el.iterator1}` : \"\";\n  const iterator2 = el.iterator2 ? `,${el.iterator2}` : \"\";\n\n  el.forProcessed = true; // 避免递归时，重复处理\n\n  return (\n    `${\"_l\"}((${exp}),` +\n    `function(${alias}${iterator1}${iterator2}){` +\n    `return ${genElement(el, state)}` +\n    \"})\"\n  );\n}\n\n// DONE 处理 ast 对象中的各种属性\nfunction genData(el, state) {\n  let data = \"{\";\n\n  // key\n  if (el.key) {\n    data += `key:${el.key},`;\n  }\n\n  // 拼接已处理好的 class 或 style 属性\n  for (let i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += `attrs:${genProps(el.attrs)},`;\n  }\n\n  data = data.replace(/,$/, \"\") + \"}\";\n\n  return data;\n}\n\n// DONE 处理子节点\nfunction genChildren(el, state, checkSkip) {\n  const children = el.children;\n  // 是否存在子节点\n  if (children.length) {\n    const normalizationType = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0;\n      \n    return `[${children.map((c) => genNode(c, state)).join(\",\")}]${\n      normalizationType ? `,${normalizationType}` : \"\"\n    }`;\n  }\n}\n\n// DONE 确定子数组需要的规范化。\n// 0:不需要标准化\n// 1:需要简单的规范化(可能是1级深嵌套数组)\n// 2:需要完全标准化\nfunction getNormalizationType(children, maybeComponent) {\n  let res = 0;\n  for (let i = 0; i < children.length; i++) {\n    const el = children[i];\n\n    if (el.type !== 1) {\n      continue;\n    }\n\n    if (needsNormalization(el)) {\n      res = 2;\n      break;\n    }\n  }\n\n  return res;\n}\n\nfunction needsNormalization(el) {\n    return el.for !== undefined || el.tag === \"template\" || el.tag === \"slot\";\n}\n\n// DONE 将属性拼接成字符串\n// 例如：`style:{ \"color\":\"#f66\",\"font-size\":\"20px\"}`\nfunction genProps(props) {\n  let staticProps = ``;\n  let dynamicProps = ``;\n\n  for (let i = 0; i < props.length; i++) {\n    const prop = props[i];\n    const value = transformSpecialNewlines(prop.value);\n\n    if (prop.dynamic) {\n      dynamicProps += `${prop.name},${value},`;\n    } else {\n      staticProps += `\"${prop.name}\":${value},`;\n    }\n  }\n  staticProps = `{${staticProps.slice(0, -1)}}`;\n\n  if (dynamicProps) {\n    return `_d(${staticProps},[${dynamicProps.slice(0, -1)}])`;\n  } else {\n    return staticProps;\n  }\n}\n// DONE 根据类型的不同进行相应处理\nfunction genNode(node, state) {\n  if (node.type === 1) {\n    // 元素节点\n    return genElement(node, state);\n  } else {\n    // 文本节点\n    return genText(node);\n  }\n}\n\n// DONE 处理文本节点\nfunction genText(text) {\n  // 在模板编译阶段，已通过 parseText 函数对文本进行了处理\n  return `_v(${\n    text.type === 2\n      ? text.expression\n      : transformSpecialNewlines(JSON.stringify(text.text))\n  })`;\n}\n\n// \\u2028（行分隔符） 和 \\u2029（段落分隔符）会被浏览器理解为换行，\n// 而在Javascript的字符串表达式中是不允许换行的，那样会导致错误。\nfunction transformSpecialNewlines(text) {\n  return text.replace(/\\u2028/g, \"\\\\u2028\").replace(/\\u2029/g, \"\\\\u2029\");\n}\n","import { parse } from './parser/index';\nimport { generate } from './codegen/index';\n\n//编译：HTML字符串（ template ） => AST => render\nexport function compileToFunctions(html, options) {\n  // 解析 HTML 字符串，将其转换成 AST 抽象语法树\n  const ast = parse(html, options);\n  // 将 AST 转换成字符串函数\n  const code = generate(ast, options);\n  // 生成 render 渲染函数\n  const render = new Function(`with(this){ return ${code} }`);\n\n  console.log('生成render-->', render);\n  return render;\n}\n\n","import { getAndRemoveAttr, getBindingAttr } from '../../../compiler/parser/helpers';\n\n// 处理 class 静态绑定和动态绑定。\nfunction transformNode(el) {\n  const staticClass = getAndRemoveAttr(el, 'class');\n  if (staticClass) {\n    // console.log('这是静态class', staticClass);\n    el.staticClass = JSON.stringify(staticClass);\n  }\n\n  const classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\n// 分别拼接 class 静态和动态属性\nfunction genData(el) {\n  let data = '';\n  if (el.staticClass) {\n    data += `staticClass:${el.staticClass},`;\n  }\n  if (el.classBinding) {\n    data += `class:${el.classBinding},`;\n  }\n  return data;\n}\n\nexport default {\n  staticKeys: ['staticClass'],\n  transformNode,\n  genData\n};\n","import { cached } from '../../../shared/util';\n\n// DONE 创建一个解析 style 文本的函数。例如，\"width: 100%;height: 50px;\"\nexport const parseStyleText = cached(function (cssText) {\n  const res = {};\n  const listDelimiter = /;(?![^(]*\\))/g;\n  const propertyDelimiter = /:(.+)/; // 匹配冒号\n  // 以分号进行分割\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      const tmp = item.split(propertyDelimiter); // 以冒号进行分割\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res;\n});\n","import { getAndRemoveAttr, getBindingAttr } from '../../../compiler/parser/helpers';\nimport { parseStyleText } from '../util/style';\n\n// 处理 style 静态绑定和动态绑定。\nfunction transformNode(el) {\n  const staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  const styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\n// 分别拼接 style 静态和动态属性\nfunction genData(el) {\n  let data = '';\n  if (el.staticStyle) {\n    data += `staticStyle:${el.staticStyle},`;\n  }\n  if (el.styleBinding) {\n    data += `style:(${el.styleBinding}),`;\n  }\n  return data;\n}\n\nexport default {\n  staticKeys: ['staticStyle'],\n  transformNode,\n  genData\n};\n","import klass from './class';\nimport style from './style';\n\nexport default [klass, style];\n","import modules from './modules/index';\n\nexport const baseOptions = {\n  modules\n};\n","/* HTML DOM 方法 */\n\n// DONE 通过指定名称创建一个元素\nexport function createElement(tagName, vnode) {\n  const elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm;\n  }\n  // false 或 null 将删除该属性，但 undefined 不会\n  if (\n    vnode.data &&\n    vnode.data.attrs &&\n    vnode.data.attrs.multiple !== undefined\n  ) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm;\n}\n\n// DONE 创建一个具有指定的命名空间URI和限定名称的元素\n// export function createElementNS(namespace, tagName) {\n//   return document.createElementNS(namespaceMap[namespace], tagName);\n// }\n\n// DONE 创建文本节点\nexport function createTextNode(text) {\n  return document.createTextNode(text);\n}\n\n// DONE 创建注释节点\nexport function createComment(text) {\n  return document.createComment(text);\n}\n\n// DONE 在已有的子节点前插入一个新的子节点\nexport function insertBefore(parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\n// DONE 从子节点列表中删除某个节点\nexport function removeChild(node, child) {\n  node.removeChild(child);\n}\n\n// DONE 向节点的子节点列表的末尾添加新的子节点\n// 提示：如果文档树中已经存在了 newchild，它将从文档树中删除，然后重新插入它的新位置。\n// 如果 newchild 是 DocumentFragment 节点，则不会直接插入它，而是把它的子节点按序插入当前节点的 childNodes[] 数组的末尾。\n// 你可以使用 appendChild() 方法移除元素到另外一个元素。\nexport function appendChild(node, child) {\n  node.appendChild(child);\n}\n// DONE 可返回某节点的父节点\nexport function parentNode(node) {\n  return node.parentNode;\n}\n\n// DONE 返回某个元素之后紧跟的节点（处于同一树层级中）\nexport function nextSibling(node) {\n  return node.nextSibling;\n}\n\n// DONE 获取元素的标签名\nexport function tagName(node) {\n  return node.tagName;\n}\n\n// DONE 设置或者返回指定节点的文本内容\n// 如果你设置了 textContent 属性, 任何的子节点会被移除及被指定的字符串的文本节点替换\nexport function setTextContent(node, text) {\n  node.textContent = text;\n}\n\n// DONE 创建或改变某个新属性。如果指定属性已经存在,则只设置该值\nexport function setStyleScope(node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n","\n// done: vnode（虚拟节点）类\nexport default class VNode {\n    constructor(tag, data, children, text, elm, context) {\n        this.tag = tag;\n        this.data = data;\n        this.children = children;\n        this.text = text;\n        this.elm = elm;\n        this.context = context;\n        this.key = data && data.key;\n    }\n}\n\n\n// done: 创建空节点\nexport const createEmptyVNode = (text = '') => {\n    const node = new VNode();\n    node.text = text;\n    node.isComment = true;\n    return node;\n}\n\n// done: 创建文本 vnode\nexport function createTextVNode(text) {\n    return new VNode(undefined, undefined, undefined, text);\n}\n// done: 解析双大括号中的表达式，例如：{{tip}} => tip\nexport function toString(value) {\n    if (value === null) return;\n    return typeof value === 'object' ? JSON.stringify(value) : value;\n};\n// done: 克隆节点对象。\n//用于静态节点和槽节点，因为它们可以在多个渲染中重用，克隆它们可以避免DOM操作依赖它们的elm引用时出现错误。\nexport function cloneVNode(vnode) {\n    const cloned = new VNode(\n        vnode.tag,\n        vnode.data,\n        //克隆子数组，以避免在克隆子数组时发生原数组的突变。\n        vnode.children && vnode.children.slice(),\n        vnode.text,\n        vnode.elm,\n        vnode.context\n    );\n\n    cloned.key = vnode.key;\n\n    cloned.isCloned = true;\n\n    return cloned;\n}","import { isUndef, isDef, isPrimitive } from '../../shared/util';\nimport VNode, { cloneVNode } from './vnode';\n\n/**\n * 样例展示：结合 patch函数中的 insertBefore 和 removeChild 方法看\n * <body>\n *  <div id=\"app\"></div> 原有的\n *  <div id=\"app\"></div> 新生成的\n *  <script></script>\n * </body>\n *\n */\n\nexport const emptyNode = new VNode('', {}, []); // 创建空的虚拟节点对象\nconst hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nexport function createPatchFunction(backend) {\n    let i, j;\n    const cbs = {};\n\n    // modules 对象中存储着处理 attrs、class 和 style等方法\n    // nodeOps 对象中存储着 HTML DOM 方法。例如，document.createElement()\n    const { modules, nodeOps } = backend;\n\n    // 整合 modules 中的函数并将它们存在 cbs 对象中\n    for (i = 0; i < hooks.length; ++i) {\n        cbs[hooks[i]] = [];\n        for (j = 0; j < modules.length; ++j) {\n            if (isDef(modules[j][hooks[i]])) {\n                cbs[hooks[i]].push(modules[j][hooks[i]]);\n            }\n        }\n    }\n    \n    // done: 创建虚拟节点对象\n    function emptyNodeAt(elm) {\n        const node = new VNode(\n            nodeOps.tagName(elm).toLowerCase(),\n            {},\n            [],\n            undefined,\n            elm\n        );\n        return node;\n    }\n\n    // done: 调用 cbs.create 数组中函数(主要用于处理 class、style、指令等)\n    function invokeCreateHooks(vnode, insertedVnodeQueue) {\n        for (let i = 0; i < cbs.create.length; ++i) {\n            cbs.create[i](emptyNode, vnode);\n        }\n    }\n    // done: 创建元素\n    function createElm(\n        vnode, // 虚拟节点对象\n        insertedVnodeQueue, // 存储已插入的 vnode 的队列\n        parentElm, // vnode.elm 父元素\n        refElm, // 紧跟在 vnode.elm 之后的元素\n        nested,\n        ownerArray,\n        index\n    ) {\n        if (isDef(vnode.elm) && isDef(ownerArray)) {\n            // 这个 vnode 在之前的渲染中使用过!\n            // 现在它被用作一个新节点，当它被用作插入参考节点时，覆盖它的 elm 会导致潜在的补丁错误。\n            // 相反，我们在为节点创建相关的 DOM 元素之前按需克隆节点。\n            vnode = ownerArray[index] = cloneVNode(vnode);\n        }\n\n        const data = vnode.data; // 获取元素属性\n        const children = vnode.children; // 获取子元素\n        const tag = vnode.tag; // 获取标签\n\n        // 元素节点\n        if (isDef(tag)) {\n            vnode.elm = nodeOps.createElement(tag, vnode);\n            // console.log('元素节点------>', vnode);\n            // 创建子元素\n            createChildren(vnode, children, insertedVnodeQueue);\n            if (isDef(data)) {\n                // 处理元素上的各种属性\n                invokeCreateHooks(vnode, insertedVnodeQueue);\n            }\n            // 插入元素\n            insert(parentElm, vnode.elm, refElm);\n        } else {\n            // 纯文本节点\n            // console.log('文本节点------>', vnode);\n            vnode.elm = nodeOps.createTextNode(vnode.text);\n            insert(parentElm, vnode.elm, refElm);\n        }\n    }\n\n    // DONE 创建子元素\n    function createChildren(vnode, children, insertedVnodeQueue) {\n        if (Array.isArray(children)) {\n            // 检查 children 中的子节点是否有重复的 key 值\n            checkDuplicateKeys(children);\n\n            for (let i = 0; i < children.length; ++i) {\n                createElm(\n                    children[i],\n                    insertedVnodeQueue,\n                    vnode.elm,\n                    null,\n                    true,\n                    children,\n                    i\n                );\n            }\n        } else if (isPrimitive(vnode.text)) { // 是否为原始值\n            nodeOps.appendChild(\n                vnode.elm,\n                nodeOps.createTextNode(vnode.text)\n            );\n        }\n    }\n\n    // done: 检查 key 值是否重复\n    function checkDuplicateKeys(children) {\n        const seenKeys = {};\n        for (let i = 0; i < children.length; i++) {\n            const vnode = children[i];\n            const key = vnode.key;\n\n            if (isDef(key)) {\n                if (seenKeys[key]) {\n                    console.log(\n                        // 检测到重复键:'${key}'。这可能会导致更新错误。\n                        `Duplicate keys detected: '${key}'. This may cause an update error.`,\n                        vnode.context\n                    );\n                } else {\n                    seenKeys[key] = true;\n                }\n            }\n        }\n    }\n    // done: 插入元素\n    function insert(parent, elm, ref) {\n        // 存在父级\n        if (isDef(parent)) {\n            // elm 之后存在元素（有同级的兄弟元素）\n            if (isDef(ref)) {\n                // elm 和 ref 元素的父级元素是同一个（elm 和 ref是同级兄弟元素）\n                if (nodeOps.parentNode(ref) === parent) {\n                    nodeOps.insertBefore(parent, elm, ref);\n                }\n            } else {\n                // elm 之后不存在元素\n                nodeOps.appendChild(parent, elm);\n            }\n        }\n    }\n\n    // DONE 移除节点\n    function removeVnodes(vnodes, startIdx, endIdx) {\n        for (; startIdx <= endIdx; ++startIdx) {\n            const ch = vnodes[startIdx];\n            if (isDef(ch)) {\n                removeNode(ch.elm);\n            }\n        }\n    }\n\n    function removeNode(el) {\n        const parent = nodeOps.parentNode(el);\n        // 元素可能已经由于 v-html 或 v-text而被删除\n        if (isDef(parent)) {\n            nodeOps.removeChild(parent, el);\n        }\n    }\n\n    /**\n     * DONE 将 vnode 虚拟节点生成相应的 HTML 元素\n     * @param { HTMLDivElement } oldVnode => html\n     * @param { Object } vnode => 虚拟节点对象\n     */\n    return function patch(oldVnode, vnode) {\n        console.log(\"path---->执行\", oldVnode, vnode);\n\n        const insertedVnodeQueue = [];\n\n        // 老节点不存在\n        if (isUndef(oldVnode)) {\n            // empty mount (likely as component), create new root element\n            // isInitialPatch = true;\n            // createElm(vnode, insertedVnodeQueue);\n        } else {\n            // 是否为真实元素\n            const isRealElement = isDef(oldVnode.nodeType);\n\n            if (isRealElement) {\n                // 创建空节点对象（初始化部分数据）\n                oldVnode = emptyNodeAt(oldVnode);\n                console.log('是真实的元素，初始化oldVnode--->', oldVnode);\n            }\n\n            // 替换现有的 element\n            const oldElm = oldVnode.elm;\n            const parentElm = nodeOps.parentNode(oldElm); // 获取 oldElm 父元素\n\n            // 创建新节点\n            createElm(\n                vnode,\n                insertedVnodeQueue,\n                parentElm,\n                // 返回紧跟 oldElm 之后的元素\n                nodeOps.nextSibling(oldElm)\n            );\n\n            // 销毁旧节点\n            if (isDef(parentElm)) {\n                console.log('执行销毁操作--->', oldVnode);\n                removeVnodes([oldVnode], 0, 0);\n            }\n\n        }\n\n        return vnode.elm;\n    };\n}\n","import { makeMap } from '../../../shared/util';\n\nexport const isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\n// DONE 是否为假值\nexport const isFalsyAttrValue = (val) => {\n  return val == null || val === false;\n};\n","import { isUndef } from '../../../shared/util';\nimport { isEnumeratedAttr, isFalsyAttrValue } from '../util/attrs';\n\nfunction updateAttrs(oldVnode, vnode) {\n  // 新旧虚拟节点都不存在 attr\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return;\n  }\n\n  let key, cur, old;\n  const elm = vnode.elm;\n  const oldAttrs = oldVnode.data.attrs || {};\n  let attrs = vnode.data.attrs || {};\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n\n    // 新旧虚拟节点属性不同\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n\n  for (key in oldAttrs) {\n    // attrs[key] 为 undefined 或 null\n    if (isUndef(attrs[key])) {\n      // key 值不是 contenteditable、draggable 和 spellcheck\n      if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key); // 删除空属性\n      }\n    }\n  }\n}\n\n// 设置属性\nfunction setAttr(el, key, value) {\n  baseSetAttr(el, key, value);\n}\n\nfunction baseSetAttr(el, key, value) {\n  // 若是假值，则删除属性\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    el.setAttribute(key, value);\n  }\n}\n\nexport default {\n  create: updateAttrs,\n  update: updateAttrs\n};\n","/* @flow */\n\nimport { isDef, isObject } from '../../../shared/util';\n\nexport function genClassForVnode(vnode) {\n  let data = vnode.data;\n\n  return renderClass(data.staticClass, data.class);\n}\n\nexport function renderClass(staticClass, dynamicClass) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass));\n  }\n\n  return '';\n}\n\nexport function concat(a, b) {\n  return a ? (b ? a + ' ' + b : a) : b || '';\n}\n\nexport function stringifyClass(value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value);\n  }\n  if (isObject(value)) {\n    return stringifyObject(value);\n  }\n  if (typeof value === 'string') {\n    return value;\n  }\n\n  return '';\n}\n\nfunction stringifyArray(value) {\n  let res = '';\n  let stringified;\n  for (let i = 0, l = value.length; i < l; i++) {\n    if (isDef((stringified = stringifyClass(value[i]))) && stringified !== '') {\n      if (res) res += ' ';\n      res += stringified;\n    }\n  }\n  return res;\n}\n\nfunction stringifyObject(value) {\n  let res = '';\n  for (const key in value) {\n    if (value[key]) {\n      if (res) res += ' ';\n      res += key;\n    }\n  }\n  return res;\n}\n","import { isUndef } from '../../../shared/util';\nimport { genClassForVnode } from '../util/class';\n\nfunction updateClass(oldVnode, vnode) {\n  const el = vnode.elm;\n  const data = vnode.data;\n  const oldData = oldVnode.data;\n\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) &&\n    (isUndef(oldData) ||\n      (isUndef(oldData.staticClass) && isUndef(oldData.class)))\n  ) {\n    return;\n  }\n\n  let cls = genClassForVnode(vnode);\n\n  // 设置 class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nexport default {\n  create: updateClass,\n  update: updateClass\n};\n","import attrs from './attrs';\nimport klass from './class';\n// import style from './style';\n\nexport default [attrs, klass];\n","import * as nodeOps from './node-ops';\nimport { createPatchFunction } from '../../core/vdom/patch';\nimport platformModules from './modules/index';\n\nconst modules = platformModules;\n\nexport const patch = createPatchFunction({ nodeOps, modules });\n","import { initState } from './state';\nimport { mountComponent } from './lifecycle';\nimport { compileToFunctions } from '../../compiler/index';\nimport { baseOptions } from '../../web/compiler/options';\nimport { patch } from '../../web/runtime/patch';\n\nexport function initMixin(Vue) {\n  // 初始化函数\n  Vue.prototype._init = function (options) {\n    const vm = this; // 存储 this（ Vue实例 ）\n    vm.$options = options; // 将 options 挂载到 vm 上，以便后续使用\n\n    // Vue 实例中的 data、 props、methods、computed 和 watch，都会在 initState 函数中\n    // 进行初始化。由于我们主要解说：Vue 数据劫持，所以只对 data 进行处理。\n    initState(vm);\n\n    if (vm.$options.el) {\n      // Vue.prototype.$mount --> 挂载函数\n      vm.$mount(vm.$options.el);\n    }\n  };\n  // 挂载函数\n  Vue.prototype.$mount = function (el) {\n    const vm = this;\n    const options = vm.$options;\n\n    // Vue 选项中的 render 函数若存在，则 Vue 构造函数不会从\n    // template 选项或通过 el 选项指定的挂载元素中提取出的 HTML 模板编译渲染函数。\n\n    // 处理模板（优先级）: render  >  template   >  html模板\n\n    // 若是 render 函数不存在，就生成 render\n    if (!options.render) {\n      let template = options.template; // 获取模板\n\n      // el存在，且 template 不存在\n      if (el && !template) {\n        // 挂载 el（ HTML 模板），以便在实例的 _update 方法中使用\n        vm.$el = document.querySelector(el);\n        template = vm.$el.outerHTML;\n      }\n\n      // 编译模板，生成 AST 抽象语法树并将其生成渲染函数 render\n      const render = compileToFunctions(template, baseOptions);\n      options.render = render; // 挂载 render\n    }\n    // 挂载组件\n    mountComponent(vm);\n  };\n\n  // patch 函数，用于创建文档树\n  Vue.prototype.__patch__ = patch;\n}\n","\nimport { createTextVNode } from '../vnode'\nimport { isFalse, isTrue, isDef, isUndef, isPrimitive } from '../../../shared/util'\n\n// 模板编译器试图通过在编译时静态分析模板来最小化规范化的需要。\n// 对于普通的HTML标记，可以完全跳过标准化，因为生成的渲染函数保证返回 Array<VNode>。\n// 且有两种情况需要额外的规范化:\n\n// 1. 当子组件包含组件时——因为函数组件可能返回Array而不是单个根。\n// 在这种情况下，只需要一个简单的标准化——如果任何子元素是Array，我们就用Array.prototype.concat将整个元素平化。\n// 它保证只有一级深度，因为功能组件已经规范化了它们自己的子组件。\n\n// 2. 当子元素包含总是生成嵌套数组的构造时，例如：<template>, <slot>, v-for 或者当用户用手写的 render函数 / JSX 提供子对象时。\n// 在这种情况下，需要完全标准化，以满足所有可能类型的子元素值。\n\n// done: 对 children 进行完全标准化\n// normalizeChildren 用于第二种情况，且在目前的代码中只做了对 v-for 的处理\nexport function normalizeChildren(children) {\n    return isPrimitive(children)\n        ? [createTextVNode(children)]\n        : Array.isArray(children)\n            ? normalizeArrayChildren(children)\n            : undefined;\n}\n\n// done: 是否为文本节点\nfunction isTextNode(node) {\n    return isDef(node) && isDef(node.text) && isFalse(node.isComment);\n}\n\n// done: 标准化数组子元素\nfunction normalizeArrayChildren(children, nestedIndex) {\n    const res = [];\n    let i, c, lastIndex, last;\n    for (i = 0; i < children.length; i++) {\n        c = children[i];\n        if (isUndef(c) || typeof c === 'boolean') continue;\n        lastIndex = res.length - 1;\n        last = res[lastIndex];\n\n        //  处理嵌套\n        if (Array.isArray(c)) {\n            if (c.length > 0) {\n                c = normalizeArrayChildren(c, `${nestedIndex || ''}_${i}`)\n                // 合并相邻文本节点\n                if (isTextNode(c[0]) && isTextNode(last)) {\n                    res[lastIndex] = createTextVNode(last.text + (c[0]).text)\n                    c.shift()\n                }\n                res.push.apply(res, c)\n            }\n        } else if (isPrimitive(c)) { // 是否为原始值\n\n            if (isTextNode(last)) {\n                // 合并相邻的文本节点，这对于 SSR hydration 是必要的，\n                // 因为文本节点在呈现为HTML字符串时本质上是合并的\n                res[lastIndex] = createTextVNode(last.text + c)\n            } else if (c !== '') {\n                // 将 primitive 转换为 vnode\n                res.push(createTextVNode(c))\n            }\n        } else {\n            if (isTextNode(c) && isTextNode(last)) {\n                // 合并相邻的文本节点\n                res[lastIndex] = createTextVNode(last.text + c.text)\n            } else {\n                // 嵌套数组子数组的默认键(可能由v-for生成)\n                if (isTrue(children._isVList) &&\n                    isDef(c.tag) &&\n                    isUndef(c.key) &&\n                    isDef(nestedIndex)) {\n                    c.key = `__vlist${nestedIndex}_${i}__`\n                }\n                res.push(c)\n            }\n        }\n    }\n\n    return res\n}\n","import VNode from \"./vnode\";\n\nimport { isTrue, isPrimitive } from \"../../shared/util\";\nimport { normalizeChildren } from \"./helpers/index\";\n\nconst SIMPLE_NORMALIZE = 1;\nconst ALWAYS_NORMALIZE = 2;\n\n// done: 创建元素 vnode 的包装器函数，提供更灵活的接口且不会被干扰\nexport function createElement(\n    tag,\n    data,\n    children,\n    normalizationType,\n    alwaysNormalize\n) {\n    // data 是数组或原始值，则对数据进行替换。\n    // 对于此处逻辑代码，建议结合生成的 render 渲染函数（看 Readme.md 文档）和 vue 官网文档-虚拟 DOM 章节进行理解(下方是链接)\n    // https://cn.vuejs.org/v2/guide/render-function.html#%E8%99%9A%E6%8B%9F-DOM\n\n    if (Array.isArray(data) || isPrimitive(data)) {\n        // console.log(\"data是数组或原始值------------------->\", tag, data, children);\n        normalizationType = children;\n        children = data;\n        data = undefined;\n    }\n\n    // normalizationType 值: 1 代表简单标准化  2 代表完全标准化\n    // alwaysNormalize 为 true，则需要对 children 进行完全标准化。\n    if (isTrue(alwaysNormalize)) {\n        normalizationType = ALWAYS_NORMALIZE;\n    }\n\n    return _createElement(tag, data, children, normalizationType);\n}\n// done: 创建元素 vnode\nexport function _createElement(tag, data, children, normalizationType) {\n    // console.log(\"_createElement--->执行\", tag, data, children);\n\n    if (normalizationType === ALWAYS_NORMALIZE) {\n        children = normalizeChildren(children); // children 需要完全标准化\n    }\n\n    let vnode;\n    if (typeof tag === \"string\") {\n        vnode = new VNode(tag, data, children, undefined, undefined);\n    }\n\n    return vnode;\n}\n","import { isDef, isObject, hasSymbol } from '../../../shared/util';\n\n\n// DONE 处理 v-for 指令中的 lists（即要遍历的数组、字符串、数字或对象）\nexport function renderList(val, render) {\n    var ret, i, l, keys, key;\n    if (Array.isArray(val) || typeof val === \"string\") {\n        // val 是数组或字符串\n        ret = new Array(val.length);\n        for (i = 0, l = val.length; i < l; i++) {\n            // console.log('有ret------------------>', val[i], i);\n\n            ret[i] = render(val[i], i);\n        }\n    } else if (typeof val === \"number\") {\n        // val 是数字\n        ret = new Array(val);\n        for (i = 0; i < val; i++) {\n            ret[i] = render(i + 1, i);\n        }\n    } else if (isObject(val)) {\n        // val 是 'object' 对象\n\n        if (hasSymbol && val[Symbol.iterator]) {\n            // val 是 Symbol\n            ret = [];\n            var iterator = val[Symbol.iterator]();\n            var result = iterator.next();\n            while (!result.done) {\n                ret.push(render(result.value, ret.length));\n                result = iterator.next();\n            }\n        } else {\n            // val 是普通对象\n            keys = Object.keys(val);\n            ret = new Array(keys.length);\n            for (i = 0, l = keys.length; i < l; i++) {\n                key = keys[i];\n                ret[i] = render(val[key], key, i);\n            }\n        }\n    }\n    // ret 不存在，则设置为空数组\n    if (!isDef(ret)) {\n        ret = [];\n    }\n    // 标记为已处理\n    ret._isVList = true;\n    \n    return ret;\n}","\nimport { createTextVNode, toString } from '../../vdom/vnode'\nimport { createElement } from '../../vdom/create-element'\nimport { renderList } from './render-list'\n\n\nexport function installRenderHelpers (target) {\n  target._v = createTextVNode;\n  target._c = createElement;\n  target._s = toString;\n  target._l = renderList;\n}\n","import { installRenderHelpers } from './render-helpers/index'\n\nexport function renderMixin(Vue) {\n    // 安装运行时所需的辅助性渲染函数\n    installRenderHelpers(Vue.prototype);\n\n\n    // 调用 vm.$options.render 渲染函数，生成虚拟节点\n    Vue.prototype._render = function () {\n        const vm = this;\n        const vnode = vm.$options.render.call(vm); // 生成虚拟节点对象并返回\n\n        return vnode;\n    };\n}","import { initMixin } from './init';\nimport { lifecycleMixin } from './lifecycle';\nimport { renderMixin } from './render';\n\nfunction Vue(options) {\n    // 通过关键字 new 创建 Vue实例时，便会调用 Vue 原型方法 _init 初始化数据\n    this._init(options);\n}\n\n// 初始化相关操作\ninitMixin(Vue);\n// 生命周期相关操作\nlifecycleMixin(Vue);\n// 渲染相关操作\nrenderMixin(Vue);\n\nexport default Vue;","import Vue from './instance/index';\n\n\nVue.version = '2.0';\n\nexport default Vue\n"],"names":["proxy","vm","target","key","Object","defineProperty","get","set","newValue","hasProto","def","obj","val","enumerable","value","writable","configurable","isObject","extend","to","_from","cached","fn","cache","create","cachedFn","str","hit","hasSymbol","Symbol","isNative","Reflect","ownKeys","Ctor","test","toString","isUndef","v","undefined","isDef","isPrimitive","makeMap","expectsLowerCase","map","list","split","i","length","toLowerCase","isTrue","isFalse","methodsToPatch","arrayProto","Array","prototype","arrayMethods","forEach","method","original","mutator","args","result","apply","ob","__ob__","inserted","slice","observeArray","arrayKeys","getOwnPropertyNames","observe","Observer","constructor","isArray","protoAugment","copyAugment","walk","keys","defineReactive","items","l","data","reactiveGetter","console","log","reactiveSetter","src","__proto__","initState","options","$options","initData","$data","call","mountComponent","_update","_render","lifecycleMixin","Vue","vnode","__patch__","$el","defaultTagRE","parseText","text","tagRE","tokens","rawTokens","lastIndex","match","index","tokenValue","exec","push","JSON","stringify","exp","trim","expression","join","attribute","ncname","qnameCapture","startTagOpen","RegExp","startTagClose","endTag","parseHTML","html","textEnd","indexOf","startTagMatch","parseStartTag","start","tagName","attrs","endTagMatch","end","advance","substring","chars","attr","name","n","getAndRemoveAttr","el","removeFromMap","attrsMap","attrsList","splice","getBindingAttr","getStatic","dynamicValue","staticValue","addAttr","range","dynamic","dynamicAttrs","rangeSetItem","plain","item","pluckModuleFunction","modules","m","filter","_","forAliasRE","stripParensRE","forIteratorRE","transforms","parse","template","stack","root","currentParent","tag","element","createASTElement","processFor","pop","processElement","parent","children","res","child","type","makeAttrsMap","len","parseFor","inMatch","for","alias","replace","iteratorMatch","iterator1","iterator2","processKey","scopedSlots","processAttrs","iterator","codegenState","dataGenFns","generate","ast","state","code","genElement","forProcessed","genFor","genData","genChildren","genProps","checkSkip","normalizationType","getNormalizationType","maybeComponent","c","genNode","needsNormalization","props","staticProps","dynamicProps","prop","transformSpecialNewlines","node","genText","compileToFunctions","render","Function","transformNode","staticClass","classBinding","staticKeys","parseStyleText","cssText","listDelimiter","propertyDelimiter","tmp","staticStyle","styleBinding","klass","style","baseOptions","createElement","elm","document","multiple","setAttribute","createTextNode","createComment","insertBefore","parentNode","newNode","referenceNode","removeChild","appendChild","nextSibling","setTextContent","textContent","setStyleScope","scopeId","VNode","context","createTextVNode","cloneVNode","cloned","isCloned","emptyNode","hooks","createPatchFunction","backend","j","cbs","nodeOps","emptyNodeAt","invokeCreateHooks","insertedVnodeQueue","createElm","parentElm","refElm","nested","ownerArray","createChildren","insert","checkDuplicateKeys","seenKeys","ref","removeVnodes","vnodes","startIdx","endIdx","ch","removeNode","patch","oldVnode","isRealElement","nodeType","oldElm","isEnumeratedAttr","isFalsyAttrValue","updateAttrs","cur","old","oldAttrs","setAttr","removeAttribute","baseSetAttr","update","genClassForVnode","renderClass","class","dynamicClass","concat","stringifyClass","a","b","stringifyArray","stringifyObject","stringified","updateClass","oldData","cls","_prevClass","platformModules","initMixin","_init","$mount","querySelector","outerHTML","normalizeChildren","normalizeArrayChildren","isTextNode","isComment","nestedIndex","last","shift","_isVList","ALWAYS_NORMALIZE","alwaysNormalize","_createElement","renderList","ret","next","done","installRenderHelpers","_v","_c","_s","_l","renderMixin","version"],"mappings":";;;;;;EAAA,SAASA,KAAT,CAAgBC,EAAhB,EAAoBC,MAApB,EAA4BC,GAA5B,EAAiC;EAC/B;EACA;EACAC,EAAAA,MAAM,CAACC,cAAP,CAAsBJ,EAAtB,EAA0BE,GAA1B,EAA+B;EAC7BG,IAAAA,GAAG,GAAI;EACL,aAAOL,EAAE,CAACC,MAAD,CAAF,CAAWC,GAAX,CAAP,CADK;EAEN,KAH4B;;EAI7BI,IAAAA,GAAG,CAAEC,QAAF,EAAY;EACbP,MAAAA,EAAE,CAACC,MAAD,CAAF,CAAWC,GAAX,IAAkBK,QAAlB;EACD;;EAN4B,GAA/B;EAQD;;ECXD;EACO,MAAMC,QAAQ,IAAG,eAAe,EAAlB,CAAd;;EAGC,SAASC,GAAT,CAAcC,GAAd,EAAmBR,GAAnB,EAAwBS,GAAxB,EAA6BC,UAA7B,EAAyC;EAC7CT,EAAAA,MAAM,CAACC,cAAP,CAAsBM,GAAtB,EAA2BR,GAA3B,EAAgC;EAC9BW,IAAAA,KAAK,EAAEF,GADuB;EAE9BC,IAAAA,UAAU,EAAE,CAAC,CAACA,UAFgB;EAG9BE,IAAAA,QAAQ,EAAE,IAHoB;EAI9BC,IAAAA,YAAY,EAAE;EAJgB,GAAhC;EAMD;;EAGI,SAASC,QAAT,CAAkBN,GAAlB,EAAuB;EAC5B,SAAOA,GAAG,KAAK,IAAR,IAAgB,OAAOA,GAAP,KAAe,QAAtC;EACD;;EAGM,SAASO,MAAT,CAAgBC,EAAhB,EAAoBC,KAApB,EAA2B;EAChC,OAAK,MAAMjB,GAAX,IAAkBiB,KAAlB,EAAyB;EACvBD,IAAAA,EAAE,CAAChB,GAAD,CAAF,GAAUiB,KAAK,CAACjB,GAAD,CAAf;EACD;;EACD,SAAOgB,EAAP;EACD;;EAWM,SAASE,MAAT,CAAgBC,EAAhB,EAAoB;EACzB,QAAMC,KAAK,GAAGnB,MAAM,CAACoB,MAAP,CAAc,IAAd,CAAd;EACA,SAAO,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;EAC5B,UAAMC,GAAG,GAAGJ,KAAK,CAACG,GAAD,CAAjB;EACA,WAAOC,GAAG,KAAKJ,KAAK,CAACG,GAAD,CAAL,GAAaJ,EAAE,CAACI,GAAD,CAApB,CAAV;EACD,GAHD;EAID;;EAGM,MAAME,SAAS,GACpB,OAAOC,MAAP,KAAkB,WAAlB,IACAC,QAAQ,CAACD,MAAD,CADR,IAEA,OAAOE,OAAP,KAAmB,WAFnB,IAGAD,QAAQ,CAACC,OAAO,CAACC,OAAT,CAJH;EAMA,SAASF,QAAT,CAAkBG,IAAlB,EAAwB;EAC7B,SAAO,OAAOA,IAAP,KAAgB,UAAhB,IAA8B,cAAcC,IAAd,CAAmBD,IAAI,CAACE,QAAL,EAAnB,CAArC;EACD;;EAGM,SAASC,OAAT,CAAiBC,CAAjB,EAAoB;EACzB,SAAOA,CAAC,KAAKC,SAAN,IAAmBD,CAAC,KAAK,IAAhC;EACD;;EAGM,SAASE,KAAT,CAAeF,CAAf,EAAkB;EACvB,SAAOA,CAAC,KAAKC,SAAN,IAAmBD,CAAC,KAAK,IAAhC;EACD;;EAGM,SAASG,WAAT,CAAqB1B,KAArB,EAA4B;EACjC,SACE,OAAOA,KAAP,KAAiB,QAAjB,IACA,OAAOA,KAAP,KAAiB,QADjB,IAEA,OAAOA,KAAP,KAAiB,QAFjB,IAGA,OAAOA,KAAP,KAAiB,SAJnB;EAMD;;EAGM,SAAS2B,OAAT,CAAiBf,GAAjB,EAAsBgB,gBAAtB,EAAwC;EAC7C,QAAMC,GAAG,GAAGvC,MAAM,CAACoB,MAAP,CAAc,IAAd,CAAZ;EACA,QAAMoB,IAAI,GAAGlB,GAAG,CAACmB,KAAJ,CAAU,GAAV,CAAb;;EAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;EACpCH,IAAAA,GAAG,CAACC,IAAI,CAACE,CAAD,CAAL,CAAH,GAAe,IAAf;EACD;;EAED,SAAOJ,gBAAgB,GAAI9B,GAAD,IAAS+B,GAAG,CAAC/B,GAAG,CAACoC,WAAJ,EAAD,CAAf,GAAsCpC,GAAD,IAAS+B,GAAG,CAAC/B,GAAD,CAAxE;EACD;EAEM,SAASqC,MAAT,CAAiBZ,CAAjB,EAAoB;EACvB,SAAOA,CAAC,KAAK,IAAb;EACD;EAEM,SAASa,OAAT,CAAkBb,CAAlB,EAAqB;EAC1B,SAAOA,CAAC,KAAK,KAAb;EACD;;ECzFH,MAAMc,cAAc,GAAG,CACnB,MADmB,EAEnB,KAFmB,EAGnB,OAHmB,EAInB,SAJmB,EAKnB,QALmB,EAMnB,MANmB,EAOnB,SAPmB,CAAvB;EAWA,MAAMC,UAAU,GAAGC,KAAK,CAACC,SAAzB;;EACA,MAAMC,YAAY,GAAGnD,MAAM,CAACoB,MAAP,CAAc4B,UAAd,CAArB;;EAEAD,cAAc,CAACK,OAAf,CAAuB,UAAUC,MAAV,EAAkB;EAErC,QAAMC,QAAQ,GAAGN,UAAU,CAACK,MAAD,CAA3B,CAFqC;;EAIrC/C,EAAAA,GAAG,CAAC6C,YAAD,EAAeE,MAAf,EAAuB,SAASE,OAAT,CAAiB,GAAGC,IAApB,EAA0B;EAChD;EACA,UAAMC,MAAM,GAAGH,QAAQ,CAACI,KAAT,CAAe,IAAf,EAAqBF,IAArB,CAAf;EACA,UAAMG,EAAE,GAAG,KAAKC,MAAhB;EACA,QAAIC,QAAJ;;EAEA,YAAQR,MAAR;EACI,WAAK,MAAL;EACA,WAAK,SAAL;EACIQ,QAAAA,QAAQ,GAAGL,IAAX;EACA;;EACJ,WAAK,QAAL;EACI;EACA;EACA;EAEA;EACA;EACA;EACA;EACAK,QAAAA,QAAQ,GAAGL,IAAI,CAACM,KAAL,CAAW,CAAX,CAAX;EACA;EAfR,KANgD;;;EAwBhD,QAAID,QAAJ,EAAcF,EAAE,CAACI,YAAH,CAAgBF,QAAhB;EAEd,WAAOJ,MAAP;EACH,GA3BE,CAAH,CAJqC;EAqCrC;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EAEA;EACA;EACH,CArED;;ECjBA;EAKA,MAAMO,SAAS,GAAGhE,MAAM,CAACiE,mBAAP,CAA2Bd,YAA3B,CAAlB;EAEO,SAASe,OAAT,CAAiB1D,GAAjB,EAAsB;EAEzB;EACA,MAAI,CAACK,QAAQ,CAACL,GAAD,CAAb,EAAoB;EACpB,SAAO,IAAI2D,QAAJ,CAAa3D,GAAb,CAAP;EACH;EAEM,MAAM2D,QAAN,CAAe;EAElBC,EAAAA,WAAW,CAAC1D,KAAD,EAAQ;EACf,SAAKA,KAAL,GAAaA,KAAb,CADe;;EAIfJ,IAAAA,GAAG,CAACI,KAAD,EAAQ,QAAR,EAAkB,IAAlB,CAAH;;EAEA,QAAIuC,KAAK,CAACoB,OAAN,CAAc3D,KAAd,CAAJ,EAA0B;EACtB;EACA,UAAIL,QAAJ,EAAc;EACViE,QAAAA,YAAY,CAAC5D,KAAD,EAAQyC,YAAR,CAAZ;EACH,OAFD,MAEO;EACHoB,QAAAA,WAAW,CAAC7D,KAAD,EAAQyC,YAAR,EAAsBa,SAAtB,CAAX;EACH,OANqB;;;EAStB,WAAKD,YAAL,CAAkBrD,KAAlB;EACH,KAVD,MAUO;EACH;EACA,WAAK8D,IAAL,CAAU9D,KAAV;EACH;EACJ,GAtBiB;;;EAyBlB8D,EAAAA,IAAI,CAACjE,GAAD,EAAM;EACN,UAAMkE,IAAI,GAAGzE,MAAM,CAACyE,IAAP,CAAYlE,GAAZ,CAAb;;EACA,SAAK,IAAImC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+B,IAAI,CAAC9B,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;EAClC,YAAM3C,GAAG,GAAG0E,IAAI,CAAC/B,CAAD,CAAhB,CADkC;;EAElC,YAAMhC,KAAK,GAAGH,GAAG,CAACR,GAAD,CAAjB,CAFkC;;EAGlC2E,MAAAA,cAAc,CAACnE,GAAD,EAAMR,GAAN,EAAWW,KAAX,CAAd;EACH;EACJ,GAhCiB;;;EAmClBqD,EAAAA,YAAY,CAACY,KAAD,EAAQ;EAChB,SAAK,IAAIjC,CAAC,GAAG,CAAR,EAAWkC,CAAC,GAAGD,KAAK,CAAChC,MAA1B,EAAkCD,CAAC,GAAGkC,CAAtC,EAAyClC,CAAC,EAA1C,EAA8C;EAC1CwB,MAAAA,OAAO,CAACS,KAAK,CAACjC,CAAD,CAAN,CAAP;EACH;EACJ;;EAvCiB;EA4CtB;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;;EAEA,SAASgC,cAAT,CAAwBG,IAAxB,EAA8B9E,GAA9B,EAAmCW,KAAnC,EAA0C;EAEtC;EACAwD,EAAAA,OAAO,CAACxD,KAAD,CAAP,CAHsC;EAMtC;;EACAV,EAAAA,MAAM,CAACC,cAAP,CAAsB4E,IAAtB,EAA4B9E,GAA5B,EAAiC;EAC7BG,IAAAA,GAAG,EAAE,SAAS4E,cAAT,GAA0B;EACzBC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBtE,KAAlB;EACF,aAAOA,KAAP;EACH,KAJ4B;EAK7BP,IAAAA,GAAG,EAAE,SAAS8E,cAAT,CAAwB7E,QAAxB,EAAkC;EACjC2E,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkB5E,QAAlB;EACF,UAAIA,QAAQ,KAAKM,KAAjB,EAAwB,OAFW;;EAGnCwD,MAAAA,OAAO,CAACxD,KAAD,CAAP,CAHmC;;EAInCA,MAAAA,KAAK,GAAGN,QAAR;EACH;EAV4B,GAAjC;EAYH;;;EAGD,SAASkE,YAAT,CAAsBxE,MAAtB,EAA8BoF,GAA9B,EAAmC;EAC/BpF,EAAAA,MAAM,CAACqF,SAAP,GAAmBD,GAAnB;EACH;;;EAGD,SAASX,WAAT,CAAqBzE,MAArB,EAA6BoF,GAA7B,EAAkCT,IAAlC,EAAwC;EACpC,OAAK,IAAI/B,CAAC,GAAG,CAAR,EAAWkC,CAAC,GAAGH,IAAI,CAAC9B,MAAzB,EAAiCD,CAAC,GAAGkC,CAArC,EAAwClC,CAAC,EAAzC,EAA6C;EACzC,UAAM3C,GAAG,GAAG0E,IAAI,CAAC/B,CAAD,CAAhB;EACApC,IAAAA,GAAG,CAACR,MAAD,EAASC,GAAT,EAAcmF,GAAG,CAACnF,GAAD,CAAjB,CAAH;EACH;EACJ;EAED;EAEA;EACA;EACA;EAEA;EAEA;EACA;EAEA;EACA;EAEA;EAEA;;EC5HA,SAASqF,SAAT,CAAoBvF,EAApB,EAAwB;EACtB,QAAMwF,OAAO,GAAGxF,EAAE,CAACyF,QAAnB;;EAEA,MAAID,OAAO,CAACR,IAAZ,EAAkB;EAChBU,IAAAA,QAAQ,CAAC1F,EAAD,CAAR,CADgB;EAEjB;EACF;;EAED,SAAS0F,QAAT,CAAmB1F,EAAnB,EAAuB;EACrB,MAAIgF,IAAI,GAAGhF,EAAE,CAACyF,QAAH,CAAYT,IAAvB,CADqB;;EAIrBA,EAAAA,IAAI,GAAGhF,EAAE,CAAC2F,KAAH,GAAW,OAAOX,IAAP,KAAgB,UAAhB,GAA6BA,IAAI,CAACY,IAAL,CAAU5F,EAAV,CAA7B,GAA6CgF,IAAI,IAAI,EAAvE;;EAEA,OAAK,IAAI9E,GAAT,IAAgB8E,IAAhB,EAAsB;EACpB;EACAjF,IAAAA,KAAK,CAACC,EAAD,EAAK,OAAL,EAAcE,GAAd,CAAL;EACD,GAToB;;;EAYrBmE,EAAAA,OAAO,CAACrE,EAAE,CAAC2F,KAAJ,CAAP;EACD;;ECxBD;EACA,SAASE,cAAT,CAAwB7F,EAAxB,EAA4B;EACxB;EACAA,EAAAA,EAAE,CAAC8F,OAAH,CAAW9F,EAAE,CAAC+F,OAAH,EAAX,EAFwB;;EAG3B;;EAED,SAASC,cAAT,CAAwBC,GAAxB,EAA6B;EACzB;EACAA,EAAAA,GAAG,CAAC5C,SAAJ,CAAcyC,OAAd,GAAwB,UAAUI,KAAV,EAAiB;EACrC,UAAMlG,EAAE,GAAG,IAAX,CADqC;EAGrC;;EACAA,IAAAA,EAAE,CAACmG,SAAH,CAAanG,EAAE,CAACoG,GAAhB,EAAqBF,KAArB;EACH,GALD;EAMH;;ECdD;EACA,MAAMG,YAAY,GAAG,0BAArB;EAEO,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;EAC9B,QAAMC,KAAK,GAAGH,YAAd;;EAEA,MAAI,CAACG,KAAK,CAACvE,IAAN,CAAWsE,IAAX,CAAL,EAAuB;EACrB,WAAO,KAAP;EACD;;EAED,QAAME,MAAM,GAAG,EAAf;EACA,QAAMC,SAAS,GAAG,EAAlB,CAR8B;EAW9B;;EACA,MAAIC,SAAS,GAAGH,KAAK,CAACG,SAAN,GAAkB,CAAlC;EACA,MAAIC,KAAJ,EAAWC,KAAX,EAAkBC,UAAlB,CAb8B;;EAiB9B,SAAQF,KAAK,GAAGJ,KAAK,CAACO,IAAN,CAAWR,IAAX,CAAhB,EAAmC;EACjCM,IAAAA,KAAK,GAAGD,KAAK,CAACC,KAAd;;EAEA,QAAIA,KAAK,GAAGF,SAAZ,EAAuB;EAAE;EACvBD,MAAAA,SAAS,CAACM,IAAV,CAAeF,UAAU,GAAGP,IAAI,CAACtC,KAAL,CAAW0C,SAAX,EAAsBE,KAAtB,CAA5B;EACAJ,MAAAA,MAAM,CAACO,IAAP,CAAYC,IAAI,CAACC,SAAL,CAAeJ,UAAf,CAAZ;EACD,KANgC;;;EAQjC,UAAMK,GAAG,GAAGP,KAAK,CAAC,CAAD,CAAL,CAASQ,IAAT,EAAZ;EACAX,IAAAA,MAAM,CAACO,IAAP,CAAa,MAAKG,GAAI,GAAtB;EACAT,IAAAA,SAAS,CAACM,IAAV,CAAe;EACb,kBAAYG;EADC,KAAf;EAIAR,IAAAA,SAAS,GAAGE,KAAK,GAAGD,KAAK,CAAC,CAAD,CAAL,CAAS9D,MAA7B,CAdiC;EAelC,GAhC6B;;;EAmC9B,MAAI6D,SAAS,GAAGJ,IAAI,CAACzD,MAArB,EAA6B;EAC3B4D,IAAAA,SAAS,CAACM,IAAV,CAAeF,UAAU,GAAGP,IAAI,CAACtC,KAAL,CAAW0C,SAAX,CAA5B;EACAF,IAAAA,MAAM,CAACO,IAAP,CAAYC,IAAI,CAACC,SAAL,CAAeJ,UAAf,CAAZ;EACD;;EAED,SAAO;EACLO,IAAAA,UAAU,EAAEZ,MAAM,CAACa,IAAP,CAAY,GAAZ,CADP;EAELb,IAAAA,MAAM,EAAEC;EAFH,GAAP;EAID;;EC/CD;EACA,MAAMa,SAAS,GACb,2EADF;;EAGA,MAAMC,MAAM,GAAI,8BAAhB;;EAEA,MAAMC,YAAY,GAAI,OAAMD,MAAO,QAAOA,MAAO,GAAjD;;EAEA,MAAME,YAAY,GAAG,IAAIC,MAAJ,CAAY,KAAIF,YAAa,EAA7B,CAArB;;EAEA,MAAMG,aAAa,GAAG,YAAtB;;EAEA,MAAMC,MAAM,GAAG,IAAIF,MAAJ,CAAY,QAAOF,YAAa,QAAhC,CAAf;;EAGO,SAASK,SAAT,CAAmBC,IAAnB,EAAyBvC,OAAzB,EAAkC;EACvC,MAAIe,IAAJ,CADuC;EAGvC;EACA;EACA;EAEA;;EACA,SAAOwB,IAAP,EAAa;EACX;EACA,QAAIC,OAAO,GAAGD,IAAI,CAACE,OAAL,CAAa,GAAb,CAAd;;EAEA,QAAID,OAAO,KAAK,CAAhB,EAAmB;EACjB;EACA;EACA,YAAME,aAAa,GAAGC,aAAa,EAAnC,CAHiB;EAMjB;;EACA,UAAI3C,OAAO,CAAC4C,KAAR,IAAiBF,aAArB,EAAoC;EAClC1C,QAAAA,OAAO,CAAC4C,KAAR,CAAcF,aAAa,CAACG,OAA5B,EAAqCH,aAAa,CAACI,KAAnD;EACA,iBAFkC;EAGnC;;EAED,YAAMC,WAAW,GAAGR,IAAI,CAACnB,KAAL,CAAWiB,MAAX,CAApB,CAZiB;EAcjB;;EACA,UAAIrC,OAAO,CAACgD,GAAR,IAAeD,WAAnB,EAAgC;EAC9BE,QAAAA,OAAO,CAACF,WAAW,CAAC,CAAD,CAAX,CAAezF,MAAhB,CAAP;EACA0C,QAAAA,OAAO,CAACgD,GAAR,CAAYD,WAAW,CAAC,CAAD,CAAvB;EACA;EACD;EACF,KAxBU;;;EA0BX,QAAIP,OAAO,GAAG,CAAd,EAAiB;EACfzB,MAAAA,IAAI,GAAGwB,IAAI,CAACW,SAAL,CAAe,CAAf,EAAkBV,OAAlB,CAAP;EACD,KA5BU;;;EA8BX,QAAIxC,OAAO,CAACmD,KAAR,IAAiBpC,IAArB,EAA2B;EACzBkC,MAAAA,OAAO,CAAClC,IAAI,CAACzD,MAAN,CAAP;EACA0C,MAAAA,OAAO,CAACmD,KAAR,CAAcpC,IAAd;EACD;EACF,GA1CsC;;;EA6CvC,WAAS4B,aAAT,GAAyB;EACvB;EACA;EACA,UAAMC,KAAK,GAAGL,IAAI,CAACnB,KAAL,CAAWc,YAAX,CAAd,CAHuB;;EAIvB,QAAIc,GAAJ,EAASI,IAAT;;EACA,QAAIR,KAAJ,EAAW;EACT;EACA,YAAMxB,KAAK,GAAG;EACZyB,QAAAA,OAAO,EAAED,KAAK,CAAC,CAAD,CADF;EACO;EACnBE,QAAAA,KAAK,EAAE,EAFK;;EAAA,OAAd,CAFS;EAQT;EACA;;EACAG,MAAAA,OAAO,CAACL,KAAK,CAAC,CAAD,CAAL,CAAStF,MAAV,CAAP,CAVS;;EAaT,aACE,EAAE0F,GAAG,GAAGT,IAAI,CAACnB,KAAL,CAAWgB,aAAX,CAAR,MACCgB,IAAI,GAAGb,IAAI,CAACnB,KAAL,CAAWW,SAAX,CADR,CADF,EAGE;EACAX,QAAAA,KAAK,CAAC0B,KAAN,CAAYtB,IAAZ,CAAiB;EACf6B,UAAAA,IAAI,EAAED,IAAI,CAAC,CAAD,CADK;EACA;EACf;EACA;EACA;EACA;EACA/H,UAAAA,KAAK,EAAE+H,IAAI,CAAC,CAAD,CAAJ,IAAWA,IAAI,CAAC,CAAD,CAAf,IAAsBA,IAAI,CAAC,CAAD,CANlB;;EAAA,SAAjB;EASAH,QAAAA,OAAO,CAACG,IAAI,CAAC,CAAD,CAAJ,CAAQ9F,MAAT,CAAP;EACD,OA3BQ;;;EA8BT,UAAI0F,GAAJ,EAAS;EACPC,QAAAA,OAAO,CAACD,GAAG,CAAC,CAAD,CAAH,CAAO1F,MAAR,CAAP;EACA,eAAO8D,KAAP;EACD;EACF;EACF,GArFsC;;;EAuFvC,WAAS6B,OAAT,CAAiBK,CAAjB,EAAoB;EAClB;EACAf,IAAAA,IAAI,GAAGA,IAAI,CAACW,SAAL,CAAeI,CAAf,CAAP;EACD;EACF;;EC1GD;EACA;EAEA;EACO,SAASC,gBAAT,CAA0BC,EAA1B,EAA8BH,IAA9B,EAAoCI,aAApC,EAAmD;EACxD,MAAItI,GAAJ;;EACA,MAAI,CAACA,GAAG,GAAGqI,EAAE,CAACE,QAAH,CAAYL,IAAZ,CAAP,KAA6B,IAAjC,EAAuC;EACrC,UAAMlG,IAAI,GAAGqG,EAAE,CAACG,SAAhB;;EACA,SAAK,IAAItG,CAAC,GAAG,CAAR,EAAWkC,CAAC,GAAGpC,IAAI,CAACG,MAAzB,EAAiCD,CAAC,GAAGkC,CAArC,EAAwClC,CAAC,EAAzC,EAA6C;EAC3C,UAAIF,IAAI,CAACE,CAAD,CAAJ,CAAQgG,IAAR,KAAiBA,IAArB,EAA2B;EACzBlG,QAAAA,IAAI,CAACyG,MAAL,CAAYvG,CAAZ,EAAe,CAAf;EACA;EACD;EACF;EACF;;EACD,MAAIoG,aAAJ,EAAmB;EACjB,WAAOD,EAAE,CAACE,QAAH,CAAYL,IAAZ,CAAP;EACD;;EACD,SAAOlI,GAAP;EACD;;EAGM,SAAS0I,cAAT,CAAwBL,EAAxB,EAA4BH,IAA5B,EAAkCS,SAAlC,EAA6C;EAClD,QAAMC,YAAY,GAChBR,gBAAgB,CAACC,EAAD,EAAK,MAAMH,IAAX,CAAhB,IAAoCE,gBAAgB,CAACC,EAAD,EAAK,YAAYH,IAAjB,CADtD,CADkD;;EAKlD,MAAIU,YAAY,IAAI,IAApB,EAA0B;EACxB;EACA,WAAOA,YAAP;EACD,GAHD,MAGO,IAAID,SAAS,KAAK,KAAlB,EAAyB;EAC9B;EACA,UAAME,WAAW,GAAGT,gBAAgB,CAACC,EAAD,EAAKH,IAAL,CAApC;;EACA,QAAIW,WAAW,IAAI,IAAnB,EAAyB;EACvB,aAAOvC,IAAI,CAACC,SAAL,CAAesC,WAAf,CAAP;EACD;EACF;EACF;;EAGM,SAASC,OAAT,CAAiBT,EAAjB,EAAqBH,IAArB,EAA2BhI,KAA3B,EAAkC6I,KAAlC,EAAyCC,OAAzC,EAAkD;EACvD,QAAMrB,KAAK,GAAGqB,OAAO,GACjBX,EAAE,CAACY,YAAH,KAAoBZ,EAAE,CAACY,YAAH,GAAkB,EAAtC,CADiB,GAEjBZ,EAAE,CAACV,KAAH,KAAaU,EAAE,CAACV,KAAH,GAAW,EAAxB,CAFJ;EAGAA,EAAAA,KAAK,CAACtB,IAAN,CACE6C,YAAY,CACV;EACEhB,IAAAA,IADF;EAEEhI,IAAAA,KAFF;EAGE8I,IAAAA;EAHF,GADU,EAMVD,KANU,CADd;EAUAV,EAAAA,EAAE,CAACc,KAAH,GAAW,KAAX;EACD;;EAGD,SAASD,YAAT,CAAsBE,IAAtB,EAA4BL,KAA5B,EAAmC;EACjC,MAAIA,KAAJ,EAAW;EACT,QAAIA,KAAK,CAACtB,KAAN,IAAe,IAAnB,EAAyB;EACvB2B,MAAAA,IAAI,CAAC3B,KAAL,GAAasB,KAAK,CAACtB,KAAnB;EACD;;EACD,QAAIsB,KAAK,CAAClB,GAAN,IAAa,IAAjB,EAAuB;EACrBuB,MAAAA,IAAI,CAACvB,GAAL,GAAWkB,KAAK,CAAClB,GAAjB;EACD;EACF;;EACD,SAAOuB,IAAP;EACD;;;EAGM,SAASC,mBAAT,CAA6BC,OAA7B,EAAsC/J,GAAtC,EAA2C;EAChD,SAAO+J,OAAO,GAAGA,OAAO,CAACvH,GAAR,CAAawH,CAAD,IAAOA,CAAC,CAAChK,GAAD,CAApB,EAA2BiK,MAA3B,CAAmCC,CAAD,IAAOA,CAAzC,CAAH,GAAiD,EAA/D;EACD;;EC9DD,MAAMC,UAAU,GAAG,oCAAnB;;EAEA,MAAMC,aAAa,GAAG,UAAtB;;EAEA,MAAMC,aAAa,GAAG,gCAAtB;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,IAAIC,UAAJ;;EAGO,SAASC,KAAT,CAAeC,QAAf,EAAyBlF,OAAzB,EAAkC;EACrC;EACAgF,EAAAA,UAAU,GAAGR,mBAAmB,CAACxE,OAAO,CAACyE,OAAT,EAAkB,eAAlB,CAAhC;EAEA,QAAMU,KAAK,GAAG,EAAd,CAJqC;;EAKrC,MAAIC,IAAJ,CALqC;;EAMrC,MAAIC,aAAJ,CANqC;;EAQrC/C,EAAAA,SAAS,CAAC4C,QAAD,EAAW;EAChB;EACAtC,IAAAA,KAAK,CAAC0C,GAAD,EAAMxC,KAAN,EAAa;EACd;EACA,YAAMyC,OAAO,GAAGC,gBAAgB,CAACF,GAAD,EAAMxC,KAAN,CAAhC;EACA2C,MAAAA,UAAU,CAACF,OAAD,CAAV,CAHc;EAKd;;EACA,UAAI,CAACH,IAAL,EAAW;EACPA,QAAAA,IAAI,GAAGG,OAAP;EACH,OARa;;;EAWdF,MAAAA,aAAa,GAAGE,OAAhB,CAXc;EAad;EAEA;EACA;EAEA;EACA;;EAEAJ,MAAAA,KAAK,CAAC3D,IAAN,CAAW+D,OAAX;EACH,KAxBe;;EA0BhB;EACAvC,IAAAA,GAAG,CAACsC,GAAD,EAAM;EACL;EACA;EAEA,YAAMC,OAAO,GAAGJ,KAAK,CAACO,GAAN,EAAhB,CAJK;;EAKLL,MAAAA,aAAa,GAAGF,KAAK,CAACA,KAAK,CAAC7H,MAAN,GAAe,CAAhB,CAArB,CALK;EAOL;;EACAqI,MAAAA,cAAc,CAACJ,OAAD,CAAd;;EAEA,UAAIF,aAAJ,EAAmB;EACf;EACAE,QAAAA,OAAO,CAACK,MAAR,GAAiBP,aAAjB,CAFe;;EAGfA,QAAAA,aAAa,CAACQ,QAAd,CAAuBrE,IAAvB,CAA4B+D,OAA5B,EAHe;EAIlB;EACJ,KA1Ce;;EA4ChB;EACApC,IAAAA,KAAK,CAACpC,IAAD,EAAO;EACR,UAAI,CAACsE,aAAL,EAAoB;EAChB;EACH;;EAED,UAAIS,GAAJ;EACA,UAAIC,KAAJ;EACA,YAAMF,QAAQ,GAAGR,aAAa,CAACQ,QAA/B;EAEA9E,MAAAA,IAAI,GAAGA,IAAI,CAACa,IAAL,EAAP,CATQ;;EAUR,UAAIb,IAAJ,EAAU;EACN;EACA,YAAIA,IAAI,KAAK,GAAT,KAAiB+E,GAAG,GAAGhF,SAAS,CAACC,IAAD,CAAhC,CAAJ,EAA6C;EACzCgF,UAAAA,KAAK,GAAG;EACJC,YAAAA,IAAI,EAAE,CADF;EACK;EACTjF,YAAAA,IAFI;EAGJc,YAAAA,UAAU,EAAEiE,GAAG,CAACjE,UAHZ;EAIJZ,YAAAA,MAAM,EAAE6E,GAAG,CAAC7E;EAJR,WAAR;EAOH,SARD,MAQO,IACHF,IAAI,KAAK,GAAT,IACA,CAAC8E,QAAQ,CAACvI,MADV,IAEAuI,QAAQ,CAACA,QAAQ,CAACvI,MAAT,GAAkB,CAAnB,CAAR,CAA8ByD,IAA9B,KAAuC,GAHpC,EAIL;EAEEgF,UAAAA,KAAK,GAAG;EACJC,YAAAA,IAAI,EAAE,CADF;EACK;EACTjF,YAAAA;EAFI,WAAR;EAKH;;EAED,YAAIgF,KAAJ,EAAW;EACPF,UAAAA,QAAQ,CAACrE,IAAT,CAAcuE,KAAd;EACH;EACJ;EACJ;;EAlFe,GAAX,CAAT;EAqFA,SAAOX,IAAP;EACH;;EAGD,SAASI,gBAAT,CAA0B3C,OAA1B,EAAmCC,KAAnC,EAA0C;EACtC,SAAO;EACHwC,IAAAA,GAAG,EAAEzC,OADF;EACW;EACdmD,IAAAA,IAAI,EAAE,CAFH;EAEM;EACTH,IAAAA,QAAQ,EAAE,EAHP;EAGW;EACdlC,IAAAA,SAAS,EAAEb,KAJR;EAIe;EAClBY,IAAAA,QAAQ,EAAEuC,YAAY,CAACnD,KAAD,CALnB;EAMH8C,IAAAA,MANG;;EAAA,GAAP;EAQH;;;EAGD,SAASK,YAAT,CAAsBnD,KAAtB,EAA6B;EACzB,QAAM5F,GAAG,GAAG,EAAZ;;EACA,OAAK,IAAIG,CAAC,GAAG,CAAR,EAAW6I,GAAG,GAAGpD,KAAK,CAACxF,MAA5B,EAAoCD,CAAC,GAAG6I,GAAxC,EAA6C7I,CAAC,EAA9C,EAAkD;EAC9C,QAAIH,GAAG,CAAC4F,KAAK,CAACzF,CAAD,CAAL,CAASgG,IAAV,CAAP,EAAwB;EACpB3D,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAA8BmD,KAAK,CAACzF,CAAD,CAAL,CAASgG,IAAnD,EAAyDP,KAAK,CAACzF,CAAD,CAA9D;EACA,aAAO,KAAP;EACH;;EACDH,IAAAA,GAAG,CAAC4F,KAAK,CAACzF,CAAD,CAAL,CAASgG,IAAV,CAAH,GAAqBP,KAAK,CAACzF,CAAD,CAAL,CAAShC,KAA9B;EACH;;EACD,SAAO6B,GAAP;EACH;;;EAED,SAASuI,UAAT,CAAoBjC,EAApB,EAAwB;EACpB,QAAM7B,GAAG,GAAG4B,gBAAgB,CAACC,EAAD,EAAK,OAAL,CAA5B,CADoB;;EAGpB,MAAI7B,GAAG,IAAI,OAAOA,GAAP,KAAe,QAA1B,EAAoC;EAChC,UAAMmE,GAAG,GAAGK,QAAQ,CAACxE,GAAD,CAApB,CADgC;;EAEhC,QAAImE,GAAJ,EAAS;EACL;EACArK,MAAAA,MAAM,CAAC+H,EAAD,EAAKsC,GAAL,CAAN;EACH,KAHD,MAGO;EACHpG,MAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BgC,GAAI,EAA7C;EACH;EACJ;EACJ;;;EAED,SAASwE,QAAT,CAAkBxE,GAAlB,EAAuB;EACnB;EACA,QAAMyE,OAAO,GAAGzE,GAAG,CAACP,KAAJ,CAAUyD,UAAV,CAAhB,CAFmB;EAInB;;EACA,MAAI,CAACuB,OAAL,EAAc;EAEd,QAAMN,GAAG,GAAG,EAAZ,CAPmB;;EASnBA,EAAAA,GAAG,CAACO,GAAJ,GAAUD,OAAO,CAAC,CAAD,CAAP,CAAWxE,IAAX,EAAV,CATmB;;EAWnB,QAAM0E,KAAK,GAAGF,OAAO,CAAC,CAAD,CAAP,CAAWxE,IAAX,GAAkB2E,OAAlB,CAA0BzB,aAA1B,EAAyC,EAAzC,CAAd,CAXmB;;EAanB,QAAM0B,aAAa,GAAGF,KAAK,CAAClF,KAAN,CAAY2D,aAAZ,CAAtB,CAbmB;;EAgBnB,MAAIyB,aAAJ,EAAmB;EACf;EACAV,IAAAA,GAAG,CAACQ,KAAJ,GAAYA,KAAK,CAACC,OAAN,CAAcxB,aAAd,EAA6B,EAA7B,EAAiCnD,IAAjC,EAAZ,CAFe;;EAIfkE,IAAAA,GAAG,CAACW,SAAJ,GAAgBD,aAAa,CAAC,CAAD,CAAb,CAAiB5E,IAAjB,EAAhB;;EACA,QAAI4E,aAAa,CAAC,CAAD,CAAjB,EAAsB;EAClB;EACA;EACAV,MAAAA,GAAG,CAACY,SAAJ,GAAgBF,aAAa,CAAC,CAAD,CAAb,CAAiB5E,IAAjB,EAAhB;EACH;EACJ,GAVD,MAUO;EACHkE,IAAAA,GAAG,CAACQ,KAAJ,GAAYA,KAAZ;EACH;;EAED,SAAOR,GAAP;EACH;;;EAGD,SAASH,cAAT,CAAwBJ,OAAxB,EAAiC;EAC7B;EACAoB,EAAAA,UAAU,CAACpB,OAAD,CAAV,CAF6B;;EAK7BA,EAAAA,OAAO,CAACjB,KAAR,GACI,CAACiB,OAAO,CAAC7K,GAAT,IAAgB,CAAC6K,OAAO,CAACqB,WAAzB,IAAwC,CAACrB,OAAO,CAAC5B,SAAR,CAAkBrG,MAD/D,CAL6B;;EAS7B,OAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2H,UAAU,CAAC1H,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;EACxCkI,IAAAA,OAAO,GAAGP,UAAU,CAAC3H,CAAD,CAAV,CAAckI,OAAd,KAA0BA,OAApC;EACH;;EAEDsB,EAAAA,YAAY,CAACtB,OAAD,CAAZ,CAb6B;;EAe7B,SAAOA,OAAP;EACH;;;EAGD,SAASoB,UAAT,CAAoBnD,EAApB,EAAwB;EACpB,QAAM7B,GAAG,GAAGkC,cAAc,CAACL,EAAD,EAAK,KAAL,CAA1B;;EAEA,MAAI7B,GAAJ,EAAS;EACL,QAAI6B,EAAE,CAAC8B,GAAH,KAAW,UAAf,EAA2B;EACvB5F,MAAAA,OAAO,CAACC,GAAR,CAAa,qCAAb;EACA,aAAO,KAAP;EACH;;EAED,QAAI6D,EAAE,CAAC6C,GAAP,EAAY;EACR,YAAMS,QAAQ,GAAGtD,EAAE,CAACkD,SAAH,IAAgBlD,EAAE,CAACiD,SAApC;EACA,YAAMb,MAAM,GAAGpC,EAAE,CAACoC,MAAlB;;EAEA,UACIkB,QAAQ,IACRA,QAAQ,KAAKnF,GADb,IAEAiE,MAFA,IAGAA,MAAM,CAACN,GAAP,KAAe,kBAJnB,EAKE;EACE5F,QAAAA,OAAO,CAACC,GAAR,CACK,oDADL;EAGA,eAAO,KAAP;EACH;EACJ;;EAED6D,IAAAA,EAAE,CAAC9I,GAAH,GAASiH,GAAT;EACH;EACJ;;;EAGD,SAASkF,YAAT,CAAsBrD,EAAtB,EAA0B;EACtB,QAAMrG,IAAI,GAAGqG,EAAE,CAACG,SAAhB;EACA,MAAItG,CAAJ,EAAOkC,CAAP,EAAU8D,IAAV,EAAyBhI;;EAEzB,OAAKgC,CAAC,GAAG,CAAJ,EAAOkC,CAAC,GAAGpC,IAAI,CAACG,MAArB,EAA6BD,CAAC,GAAGkC,CAAjC,EAAoClC,CAAC,EAArC,EAAyC;EACrCgG,IAAAA,IAAI,GAAalG,IAAI,CAACE,CAAD,CAAJ,CAAQgG,IAAzB;EACAhI,IAAAA,KAAK,GAAG8B,IAAI,CAACE,CAAD,CAAJ,CAAQhC,KAAhB,CAFqC;;EAIrC4I,IAAAA,OAAO,CAACT,EAAD,EAAKH,IAAL,EAAW5B,IAAI,CAACC,SAAL,CAAerG,KAAf,CAAX,EAAkC8B,IAAI,CAACE,CAAD,CAAtC,CAAP;EACH;EACJ;;EC/PD;EACA;AACA;EACA;AACA;EACA;AACA;EACA;EACA;;EAEA;EACA;AACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;;EACA,SAAS0J,YAAT,CAAsB/G,OAAtB,EAA+B;EAC7B,SAAO;EACLA,IAAAA,OADK;EAEL;EACAgH,IAAAA,UAAU,EAAExC,mBAAmB,CAACxE,OAAO,CAACyE,OAAT,EAAkB,SAAlB;EAH1B,GAAP;EAKD;;;EAGM,SAASwC,QAAT,CAAkBC,GAAlB,EAAuBlH,OAAvB,EAAgC;EACrC,QAAMmH,KAAK,GAAGJ,YAAY,CAAC/G,OAAD,CAA1B;EACA,QAAMoH,IAAI,GAAGF,GAAG,GACZA,GAAG,CAAC5B,GAAJ,KAAY,QAAZ,GACE,MADF,GAEE+B,UAAU,CAACH,GAAD,EAAMC,KAAN,CAHA,GAIZ,WAJJ;EAMA,SAAOC,IAAP;EACD;;EAGD,SAASC,UAAT,CAAoB7D,EAApB,EAAwB2D,KAAxB,EAA+B;EAC7B,MAAI3D,EAAE,CAAC6C,GAAH,IAAU,CAAC7C,EAAE,CAAC8D,YAAlB,EAAgC;EAC9B,WAAOC,MAAM,CAAC/D,EAAD,EAAK2D,KAAL,CAAb;EACD,GAFD,MAEO;EACL;EACA,QAAIC,IAAJ;EACA,QAAI5H,IAAJ;;EAEA,QAAI,CAACgE,EAAE,CAACc,KAAR,EAAe;EACb9E,MAAAA,IAAI,GAAGgI,SAAO,CAAChE,EAAD,EAAK2D,KAAL,CAAd;EACD;;EAED,UAAMtB,QAAQ,GAAG4B,WAAW,CAACjE,EAAD,EAAK2D,KAAL,EAAY,IAAZ,CAA5B;EAEAC,IAAAA,IAAI,GAAI,OAAM5D,EAAE,CAAC8B,GAAI,IACnB9F,IAAI,GAAI,IAAGA,IAAK,EAAZ,GAAgB,EADf;AAEN,OACCqG,QAAQ,GAAI,IAAGA,QAAS,EAAhB,GAAoB,EAHvB;AAIN,OAJD;EAMA,WAAOuB,IAAP;EACD;EACF;;;EAGD,SAASG,MAAT,CAAgB/D,EAAhB,EAAoB2D,KAApB,EAA2B;EACzB,QAAMxF,GAAG,GAAG6B,EAAE,CAAC6C,GAAf;EACA,QAAMC,KAAK,GAAG9C,EAAE,CAAC8C,KAAjB;EACA,QAAMG,SAAS,GAAGjD,EAAE,CAACiD,SAAH,GAAgB,IAAGjD,EAAE,CAACiD,SAAU,EAAhC,GAAoC,EAAtD;EACA,QAAMC,SAAS,GAAGlD,EAAE,CAACkD,SAAH,GAAgB,IAAGlD,EAAE,CAACkD,SAAU,EAAhC,GAAoC,EAAtD;EAEAlD,EAAAA,EAAE,CAAC8D,YAAH,GAAkB,IAAlB,CANyB;;EAQzB,SACG,GAAE,IAAK,KAAI3F,GAAI,IAAhB,GACC,YAAW2E,KAAM,GAAEG,SAAU,GAAEC,SAAU,IAD1C,GAEC,UAASW,UAAU,CAAC7D,EAAD,EAAK2D,KAAL,CAAY,EAFhC,GAGA,IAJF;EAMD;;;EAGD,SAASK,SAAT,CAAiBhE,EAAjB,EAAqB2D,KAArB,EAA4B;EAC1B,MAAI3H,IAAI,GAAG,GAAX,CAD0B;;EAI1B,MAAIgE,EAAE,CAAC9I,GAAP,EAAY;EACV8E,IAAAA,IAAI,IAAK,OAAMgE,EAAE,CAAC9I,GAAI,GAAtB;EACD,GANyB;;;EAS1B,OAAK,IAAI2C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8J,KAAK,CAACH,UAAN,CAAiB1J,MAArC,EAA6CD,CAAC,EAA9C,EAAkD;EAChDmC,IAAAA,IAAI,IAAI2H,KAAK,CAACH,UAAN,CAAiB3J,CAAjB,EAAoBmG,EAApB,CAAR;EACD,GAXyB;;;EAa1B,MAAIA,EAAE,CAACV,KAAP,EAAc;EACZtD,IAAAA,IAAI,IAAK,SAAQkI,QAAQ,CAAClE,EAAE,CAACV,KAAJ,CAAW,GAApC;EACD;;EAEDtD,EAAAA,IAAI,GAAGA,IAAI,CAAC+G,OAAL,CAAa,IAAb,EAAmB,EAAnB,IAAyB,GAAhC;EAEA,SAAO/G,IAAP;EACD;;;EAGD,SAASiI,WAAT,CAAqBjE,EAArB,EAAyB2D,KAAzB,EAAgCQ,SAAhC,EAA2C;EACzC,QAAM9B,QAAQ,GAAGrC,EAAE,CAACqC,QAApB,CADyC;;EAGzC,MAAIA,QAAQ,CAACvI,MAAb,EAAqB;EACnB,UAAMsK,iBAAiB,GAAGD,SAAS,GAC/BE,oBAAoB,CAAChC,QAAD,EAAWsB,KAAK,CAACW,cAAjB,CADW,GAE/B,CAFJ;EAIA,WAAQ,IAAGjC,QAAQ,CAAC3I,GAAT,CAAc6K,CAAD,IAAOC,OAAO,CAACD,CAAD,EAAIZ,KAAJ,CAA3B,EAAuCrF,IAAvC,CAA4C,GAA5C,CAAiD,IAC1D8F,iBAAiB,GAAI,IAAGA,iBAAkB,EAAzB,GAA6B,EAC/C,EAFD;EAGD;EACF;EAGD;EACA;EACA;;;EACA,SAASC,oBAAT,CAA8BhC,QAA9B,EAAwCiC,cAAxC,EAAwD;EACtD,MAAIhC,GAAG,GAAG,CAAV;;EACA,OAAK,IAAIzI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwI,QAAQ,CAACvI,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;EACxC,UAAMmG,EAAE,GAAGqC,QAAQ,CAACxI,CAAD,CAAnB;;EAEA,QAAImG,EAAE,CAACwC,IAAH,KAAY,CAAhB,EAAmB;EACjB;EACD;;EAED,QAAIiC,kBAAkB,CAACzE,EAAD,CAAtB,EAA4B;EAC1BsC,MAAAA,GAAG,GAAG,CAAN;EACA;EACD;EACF;;EAED,SAAOA,GAAP;EACD;;EAED,SAASmC,kBAAT,CAA4BzE,EAA5B,EAAgC;EAC5B,SAAOA,EAAE,CAAC6C,GAAH,KAAWxJ,SAAX,IAAwB2G,EAAE,CAAC8B,GAAH,KAAW,UAAnC,IAAiD9B,EAAE,CAAC8B,GAAH,KAAW,MAAnE;EACH;EAGD;;;EACA,SAASoC,QAAT,CAAkBQ,KAAlB,EAAyB;EACvB,MAAIC,WAAW,GAAI,EAAnB;EACA,MAAIC,YAAY,GAAI,EAApB;;EAEA,OAAK,IAAI/K,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6K,KAAK,CAAC5K,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;EACrC,UAAMgL,IAAI,GAAGH,KAAK,CAAC7K,CAAD,CAAlB;EACA,UAAMhC,KAAK,GAAGiN,wBAAwB,CAACD,IAAI,CAAChN,KAAN,CAAtC;;EAEA,QAAIgN,IAAI,CAAClE,OAAT,EAAkB;EAChBiE,MAAAA,YAAY,IAAK,GAAEC,IAAI,CAAChF,IAAK,IAAGhI,KAAM,GAAtC;EACD,KAFD,MAEO;EACL8M,MAAAA,WAAW,IAAK,IAAGE,IAAI,CAAChF,IAAK,KAAIhI,KAAM,GAAvC;EACD;EACF;;EACD8M,EAAAA,WAAW,GAAI,IAAGA,WAAW,CAAC1J,KAAZ,CAAkB,CAAlB,EAAqB,CAAC,CAAtB,CAAyB,GAA3C;;EAEA,MAAI2J,YAAJ,EAAkB;EAChB,WAAQ,MAAKD,WAAY,KAAIC,YAAY,CAAC3J,KAAb,CAAmB,CAAnB,EAAsB,CAAC,CAAvB,CAA0B,IAAvD;EACD,GAFD,MAEO;EACL,WAAO0J,WAAP;EACD;EACF;;;EAED,SAASH,OAAT,CAAiBO,IAAjB,EAAuBpB,KAAvB,EAA8B;EAC5B,MAAIoB,IAAI,CAACvC,IAAL,KAAc,CAAlB,EAAqB;EACnB;EACA,WAAOqB,UAAU,CAACkB,IAAD,EAAOpB,KAAP,CAAjB;EACD,GAHD,MAGO;EACL;EACA,WAAOqB,OAAO,CAACD,IAAD,CAAd;EACD;EACF;;;EAGD,SAASC,OAAT,CAAiBzH,IAAjB,EAAuB;EACrB;EACA,SAAQ,MACNA,IAAI,CAACiF,IAAL,KAAc,CAAd,GACIjF,IAAI,CAACc,UADT,GAEIyG,wBAAwB,CAAC7G,IAAI,CAACC,SAAL,CAAeX,IAAI,CAACA,IAApB,CAAD,CAC7B,GAJD;EAKD;EAGD;;;EACA,SAASuH,wBAAT,CAAkCvH,IAAlC,EAAwC;EACtC,SAAOA,IAAI,CAACwF,OAAL,CAAa,SAAb,EAAwB,SAAxB,EAAmCA,OAAnC,CAA2C,SAA3C,EAAsD,SAAtD,CAAP;EACD;;ECnMM,SAASkC,kBAAT,CAA4BlG,IAA5B,EAAkCvC,OAAlC,EAA2C;EAChD;EACA,QAAMkH,GAAG,GAAGjC,KAAK,CAAC1C,IAAD,EAAOvC,OAAP,CAAjB,CAFgD;;EAIhD,QAAMoH,IAAI,GAAGH,QAAQ,CAACC,GAAD,EAAMlH,OAAN,CAArB,CAJgD;;EAMhD,QAAM0I,MAAM,GAAG,IAAIC,QAAJ,CAAc,sBAAqBvB,IAAK,IAAxC,CAAf;EAEA1H,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B+I,MAA3B;EACA,SAAOA,MAAP;EACD;;ECXD,SAASE,eAAT,CAAuBpF,EAAvB,EAA2B;EACzB,QAAMqF,WAAW,GAAGtF,gBAAgB,CAACC,EAAD,EAAK,OAAL,CAApC;;EACA,MAAIqF,WAAJ,EAAiB;EACf;EACArF,IAAAA,EAAE,CAACqF,WAAH,GAAiBpH,IAAI,CAACC,SAAL,CAAemH,WAAf,CAAjB;EACD;;EAED,QAAMC,YAAY,GAAGjF,cAAc,CAACL,EAAD,EAAK,OAAL,EAAc;EAAM;EAApB,GAAnC;;EAEA,MAAIsF,YAAJ,EAAkB;EAChBtF,IAAAA,EAAE,CAACsF,YAAH,GAAkBA,YAAlB;EACD;EACF;;;EAGD,SAAStB,SAAT,CAAiBhE,EAAjB,EAAqB;EACnB,MAAIhE,IAAI,GAAG,EAAX;;EACA,MAAIgE,EAAE,CAACqF,WAAP,EAAoB;EAClBrJ,IAAAA,IAAI,IAAK,eAAcgE,EAAE,CAACqF,WAAY,GAAtC;EACD;;EACD,MAAIrF,EAAE,CAACsF,YAAP,EAAqB;EACnBtJ,IAAAA,IAAI,IAAK,SAAQgE,EAAE,CAACsF,YAAa,GAAjC;EACD;;EACD,SAAOtJ,IAAP;EACD;;AAED,gBAAe;EACbuJ,EAAAA,UAAU,EAAE,CAAC,aAAD,CADC;EAEbH,iBAAAA,eAFa;EAGbpB,WAAAA;EAHa,CAAf;;EC1BO,MAAMwB,cAAc,GAAGpN,MAAM,CAAC,UAAUqN,OAAV,EAAmB;EACtD,QAAMnD,GAAG,GAAG,EAAZ;EACA,QAAMoD,aAAa,GAAG,eAAtB;EACA,QAAMC,iBAAiB,GAAG,OAA1B,CAHsD;EAItD;;EACAF,EAAAA,OAAO,CAAC7L,KAAR,CAAc8L,aAAd,EAA6BnL,OAA7B,CAAqC,UAAUwG,IAAV,EAAgB;EACnD,QAAIA,IAAJ,EAAU;EACR,YAAM6E,GAAG,GAAG7E,IAAI,CAACnH,KAAL,CAAW+L,iBAAX,CAAZ,CADQ;;EAERC,MAAAA,GAAG,CAAC9L,MAAJ,GAAa,CAAb,KAAmBwI,GAAG,CAACsD,GAAG,CAAC,CAAD,CAAH,CAAOxH,IAAP,EAAD,CAAH,GAAqBwH,GAAG,CAAC,CAAD,CAAH,CAAOxH,IAAP,EAAxC;EACD;EACF,GALD;EAMA,SAAOkE,GAAP;EACD,CAZmC,CAA7B;;ECCP,SAAS8C,aAAT,CAAuBpF,EAAvB,EAA2B;EACzB,QAAM6F,WAAW,GAAG9F,gBAAgB,CAACC,EAAD,EAAK,OAAL,CAApC;;EACA,MAAI6F,WAAJ,EAAiB;EACf7F,IAAAA,EAAE,CAAC6F,WAAH,GAAiB5H,IAAI,CAACC,SAAL,CAAesH,cAAc,CAACK,WAAD,CAA7B,CAAjB;EACD;;EAED,QAAMC,YAAY,GAAGzF,cAAc,CAACL,EAAD,EAAK,OAAL,EAAc;EAAM;EAApB,GAAnC;;EACA,MAAI8F,YAAJ,EAAkB;EAChB9F,IAAAA,EAAE,CAAC8F,YAAH,GAAkBA,YAAlB;EACD;EACF;;;EAGD,SAAS9B,OAAT,CAAiBhE,EAAjB,EAAqB;EACnB,MAAIhE,IAAI,GAAG,EAAX;;EACA,MAAIgE,EAAE,CAAC6F,WAAP,EAAoB;EAClB7J,IAAAA,IAAI,IAAK,eAAcgE,EAAE,CAAC6F,WAAY,GAAtC;EACD;;EACD,MAAI7F,EAAE,CAAC8F,YAAP,EAAqB;EACnB9J,IAAAA,IAAI,IAAK,UAASgE,EAAE,CAAC8F,YAAa,IAAlC;EACD;;EACD,SAAO9J,IAAP;EACD;;AAED,cAAe;EACbuJ,EAAAA,UAAU,EAAE,CAAC,aAAD,CADC;EAEbH,EAAAA,aAFa;EAGbpB,EAAAA;EAHa,CAAf;;ACzBA,kBAAe,CAAC+B,OAAD,EAAQC,KAAR,CAAf;;ECDO,MAAMC,WAAW,GAAG;EACzBhF,WAAAA;EADyB,CAApB;;ECFP;EAEA;EACO,SAASiF,eAAT,CAAuB7G,OAAvB,EAAgCnC,KAAhC,EAAuC;EAC5C,QAAMiJ,GAAG,GAAGC,QAAQ,CAACF,aAAT,CAAuB7G,OAAvB,CAAZ;;EACA,MAAIA,OAAO,KAAK,QAAhB,EAA0B;EACxB,WAAO8G,GAAP;EACD,GAJ2C;;;EAM5C,MACEjJ,KAAK,CAAClB,IAAN,IACAkB,KAAK,CAAClB,IAAN,CAAWsD,KADX,IAEApC,KAAK,CAAClB,IAAN,CAAWsD,KAAX,CAAiB+G,QAAjB,KAA8BhN,SAHhC,EAIE;EACA8M,IAAAA,GAAG,CAACG,YAAJ,CAAiB,UAAjB,EAA6B,UAA7B;EACD;;EACD,SAAOH,GAAP;EACD;EAGD;EACA;EACA;EAEA;;EACO,SAASI,cAAT,CAAwBhJ,IAAxB,EAA8B;EACnC,SAAO6I,QAAQ,CAACG,cAAT,CAAwBhJ,IAAxB,CAAP;EACD;;EAGM,SAASiJ,aAAT,CAAuBjJ,IAAvB,EAA6B;EAClC,SAAO6I,QAAQ,CAACI,aAAT,CAAuBjJ,IAAvB,CAAP;EACD;;EAGM,SAASkJ,YAAT,CAAsBC,UAAtB,EAAkCC,OAAlC,EAA2CC,aAA3C,EAA0D;EAC/DF,EAAAA,UAAU,CAACD,YAAX,CAAwBE,OAAxB,EAAiCC,aAAjC;EACD;;EAGM,SAASC,WAAT,CAAqB9B,IAArB,EAA2BxC,KAA3B,EAAkC;EACvCwC,EAAAA,IAAI,CAAC8B,WAAL,CAAiBtE,KAAjB;EACD;EAGD;EACA;EACA;;EACO,SAASuE,WAAT,CAAqB/B,IAArB,EAA2BxC,KAA3B,EAAkC;EACvCwC,EAAAA,IAAI,CAAC+B,WAAL,CAAiBvE,KAAjB;EACD;;EAEM,SAASmE,UAAT,CAAoB3B,IAApB,EAA0B;EAC/B,SAAOA,IAAI,CAAC2B,UAAZ;EACD;;EAGM,SAASK,WAAT,CAAqBhC,IAArB,EAA2B;EAChC,SAAOA,IAAI,CAACgC,WAAZ;EACD;;EAGM,SAAS1H,OAAT,CAAiB0F,IAAjB,EAAuB;EAC5B,SAAOA,IAAI,CAAC1F,OAAZ;EACD;EAGD;;EACO,SAAS2H,cAAT,CAAwBjC,IAAxB,EAA8BxH,IAA9B,EAAoC;EACzCwH,EAAAA,IAAI,CAACkC,WAAL,GAAmB1J,IAAnB;EACD;;EAGM,SAAS2J,aAAT,CAAuBnC,IAAvB,EAA6BoC,OAA7B,EAAsC;EAC3CpC,EAAAA,IAAI,CAACuB,YAAL,CAAkBa,OAAlB,EAA2B,EAA3B;EACD;;;;;;;;;;;;;;;;;EC1ED;EACe,MAAMC,KAAN,CAAY;EACvB7L,EAAAA,WAAW,CAACuG,GAAD,EAAM9F,IAAN,EAAYqG,QAAZ,EAAsB9E,IAAtB,EAA4B4I,GAA5B,EAAiCkB,OAAjC,EAA0C;EACjD,SAAKvF,GAAL,GAAWA,GAAX;EACA,SAAK9F,IAAL,GAAYA,IAAZ;EACA,SAAKqG,QAAL,GAAgBA,QAAhB;EACA,SAAK9E,IAAL,GAAYA,IAAZ;EACA,SAAK4I,GAAL,GAAWA,GAAX;EACA,SAAKkB,OAAL,GAAeA,OAAf;EACA,SAAKnQ,GAAL,GAAW8E,IAAI,IAAIA,IAAI,CAAC9E,GAAxB;EACH;;EATsB;;EAsBpB,SAASoQ,eAAT,CAAyB/J,IAAzB,EAA+B;EAClC,SAAO,IAAI6J,KAAJ,CAAU/N,SAAV,EAAqBA,SAArB,EAAgCA,SAAhC,EAA2CkE,IAA3C,CAAP;EACH;;EAEM,SAASrE,QAAT,CAAkBrB,KAAlB,EAAyB;EAC5B,MAAIA,KAAK,KAAK,IAAd,EAAoB;EACpB,SAAO,OAAOA,KAAP,KAAiB,QAAjB,GAA4BoG,IAAI,CAACC,SAAL,CAAerG,KAAf,CAA5B,GAAoDA,KAA3D;EACH;EAED;;EACO,SAAS0P,UAAT,CAAoBrK,KAApB,EAA2B;EAC9B,QAAMsK,MAAM,GAAG,IAAIJ,KAAJ,CACXlK,KAAK,CAAC4E,GADK,EAEX5E,KAAK,CAAClB,IAFK;EAIXkB,EAAAA,KAAK,CAACmF,QAAN,IAAkBnF,KAAK,CAACmF,QAAN,CAAepH,KAAf,EAJP,EAKXiC,KAAK,CAACK,IALK,EAMXL,KAAK,CAACiJ,GANK,EAOXjJ,KAAK,CAACmK,OAPK,CAAf;EAUAG,EAAAA,MAAM,CAACtQ,GAAP,GAAagG,KAAK,CAAChG,GAAnB;EAEAsQ,EAAAA,MAAM,CAACC,QAAP,GAAkB,IAAlB;EAEA,SAAOD,MAAP;EACH;;EC/CD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEO,MAAME,SAAS,GAAG,IAAIN,KAAJ,CAAU,EAAV,EAAc,EAAd,EAAkB,EAAlB,CAAlB;;EACP,MAAMO,KAAK,GAAG,CAAC,QAAD,EAAW,UAAX,EAAuB,QAAvB,EAAiC,QAAjC,EAA2C,SAA3C,CAAd;EAEO,SAASC,mBAAT,CAA6BC,OAA7B,EAAsC;EACzC,MAAIhO,CAAJ,EAAOiO,CAAP;EACA,QAAMC,GAAG,GAAG,EAAZ,CAFyC;EAKzC;;EACA,QAAM;EAAE9G,IAAAA,OAAF;EAAW+G,IAAAA;EAAX,MAAuBH,OAA7B,CANyC;;EASzC,OAAKhO,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG8N,KAAK,CAAC7N,MAAtB,EAA8B,EAAED,CAAhC,EAAmC;EAC/BkO,IAAAA,GAAG,CAACJ,KAAK,CAAC9N,CAAD,CAAN,CAAH,GAAgB,EAAhB;;EACA,SAAKiO,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG7G,OAAO,CAACnH,MAAxB,EAAgC,EAAEgO,CAAlC,EAAqC;EACjC,UAAIxO,KAAK,CAAC2H,OAAO,CAAC6G,CAAD,CAAP,CAAWH,KAAK,CAAC9N,CAAD,CAAhB,CAAD,CAAT,EAAiC;EAC7BkO,QAAAA,GAAG,CAACJ,KAAK,CAAC9N,CAAD,CAAN,CAAH,CAAcmE,IAAd,CAAmBiD,OAAO,CAAC6G,CAAD,CAAP,CAAWH,KAAK,CAAC9N,CAAD,CAAhB,CAAnB;EACH;EACJ;EACJ,GAhBwC;;;EAmBzC,WAASoO,WAAT,CAAqB9B,GAArB,EAA0B;EACtB,UAAMpB,IAAI,GAAG,IAAIqC,KAAJ,CACTY,OAAO,CAAC3I,OAAR,CAAgB8G,GAAhB,EAAqBpM,WAArB,EADS,EAET,EAFS,EAGT,EAHS,EAITV,SAJS,EAKT8M,GALS,CAAb;EAOA,WAAOpB,IAAP;EACH,GA5BwC;;;EA+BzC,WAASmD,iBAAT,CAA2BhL,KAA3B,EAAkCiL,kBAAlC,EAAsD;EAClD,SAAK,IAAItO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkO,GAAG,CAACxP,MAAJ,CAAWuB,MAA/B,EAAuC,EAAED,CAAzC,EAA4C;EACxCkO,MAAAA,GAAG,CAACxP,MAAJ,CAAWsB,CAAX,EAAc6N,SAAd,EAAyBxK,KAAzB;EACH;EACJ,GAnCwC;;;EAqCzC,WAASkL,SAAT,CACIlL,KADJ;EAEIiL,EAAAA,kBAFJ;EAGIE,EAAAA,SAHJ;EAIIC,EAAAA,MAJJ;EAKIC,EAAAA,MALJ,EAMIC,UANJ,EAOI3K,KAPJ,EAQE;EACE,QAAIvE,KAAK,CAAC4D,KAAK,CAACiJ,GAAP,CAAL,IAAoB7M,KAAK,CAACkP,UAAD,CAA7B,EAA2C;EACvC;EACA;EACA;EACAtL,MAAAA,KAAK,GAAGsL,UAAU,CAAC3K,KAAD,CAAV,GAAoB0J,UAAU,CAACrK,KAAD,CAAtC;EACH;;EAED,UAAMlB,IAAI,GAAGkB,KAAK,CAAClB,IAAnB,CARF;;EASE,UAAMqG,QAAQ,GAAGnF,KAAK,CAACmF,QAAvB,CATF;;EAUE,UAAMP,GAAG,GAAG5E,KAAK,CAAC4E,GAAlB,CAVF;EAYE;;EACA,QAAIxI,KAAK,CAACwI,GAAD,CAAT,EAAgB;EACZ5E,MAAAA,KAAK,CAACiJ,GAAN,GAAY6B,OAAO,CAAC9B,aAAR,CAAsBpE,GAAtB,EAA2B5E,KAA3B,CAAZ,CADY;EAGZ;;EACAuL,MAAAA,cAAc,CAACvL,KAAD,EAAQmF,QAAR,EAAkB8F,kBAAlB,CAAd;;EACA,UAAI7O,KAAK,CAAC0C,IAAD,CAAT,EAAiB;EACb;EACAkM,QAAAA,iBAAiB,CAAChL,KAAD,CAAjB;EACH,OARW;;;EAUZwL,MAAAA,MAAM,CAACL,SAAD,EAAYnL,KAAK,CAACiJ,GAAlB,EAAuBmC,MAAvB,CAAN;EACH,KAXD,MAWO;EACH;EACA;EACApL,MAAAA,KAAK,CAACiJ,GAAN,GAAY6B,OAAO,CAACzB,cAAR,CAAuBrJ,KAAK,CAACK,IAA7B,CAAZ;EACAmL,MAAAA,MAAM,CAACL,SAAD,EAAYnL,KAAK,CAACiJ,GAAlB,EAAuBmC,MAAvB,CAAN;EACH;EACJ,GA3EwC;;;EA8EzC,WAASG,cAAT,CAAwBvL,KAAxB,EAA+BmF,QAA/B,EAAyC8F,kBAAzC,EAA6D;EACzD,QAAI/N,KAAK,CAACoB,OAAN,CAAc6G,QAAd,CAAJ,EAA6B;EACzB;EACAsG,MAAAA,kBAAkB,CAACtG,QAAD,CAAlB;;EAEA,WAAK,IAAIxI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwI,QAAQ,CAACvI,MAA7B,EAAqC,EAAED,CAAvC,EAA0C;EACtCuO,QAAAA,SAAS,CACL/F,QAAQ,CAACxI,CAAD,CADH,EAELsO,kBAFK,EAGLjL,KAAK,CAACiJ,GAHD,EAIL,IAJK,EAKL,IALK,EAML9D,QANK,EAOLxI,CAPK,CAAT;EASH;EACJ,KAfD,MAeO,IAAIN,WAAW,CAAC2D,KAAK,CAACK,IAAP,CAAf,EAA6B;EAAE;EAClCyK,MAAAA,OAAO,CAAClB,WAAR,CACI5J,KAAK,CAACiJ,GADV,EAEI6B,OAAO,CAACzB,cAAR,CAAuBrJ,KAAK,CAACK,IAA7B,CAFJ;EAIH;EACJ,GApGwC;;;EAuGzC,WAASoL,kBAAT,CAA4BtG,QAA5B,EAAsC;EAClC,UAAMuG,QAAQ,GAAG,EAAjB;;EACA,SAAK,IAAI/O,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwI,QAAQ,CAACvI,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;EACtC,YAAMqD,KAAK,GAAGmF,QAAQ,CAACxI,CAAD,CAAtB;EACA,YAAM3C,GAAG,GAAGgG,KAAK,CAAChG,GAAlB;;EAEA,UAAIoC,KAAK,CAACpC,GAAD,CAAT,EAAgB;EACZ,YAAI0R,QAAQ,CAAC1R,GAAD,CAAZ,EAAmB;EACfgF,UAAAA,OAAO,CAACC,GAAR;EAEK,uCAA4BjF,GAAI,oCAFrC,EAGIgG,KAAK,CAACmK,OAHV;EAKH,SAND,MAMO;EACHuB,UAAAA,QAAQ,CAAC1R,GAAD,CAAR,GAAgB,IAAhB;EACH;EACJ;EACJ;EACJ,GAzHwC;;;EA2HzC,WAASwR,MAAT,CAAgBtG,MAAhB,EAAwB+D,GAAxB,EAA6B0C,GAA7B,EAAkC;EAC9B;EACA,QAAIvP,KAAK,CAAC8I,MAAD,CAAT,EAAmB;EACf;EACA,UAAI9I,KAAK,CAACuP,GAAD,CAAT,EAAgB;EACZ;EACA,YAAIb,OAAO,CAACtB,UAAR,CAAmBmC,GAAnB,MAA4BzG,MAAhC,EAAwC;EACpC4F,UAAAA,OAAO,CAACvB,YAAR,CAAqBrE,MAArB,EAA6B+D,GAA7B,EAAkC0C,GAAlC;EACH;EACJ,OALD,MAKO;EACH;EACAb,QAAAA,OAAO,CAAClB,WAAR,CAAoB1E,MAApB,EAA4B+D,GAA5B;EACH;EACJ;EACJ,GAzIwC;;;EA4IzC,WAAS2C,YAAT,CAAsBC,MAAtB,EAA8BC,QAA9B,EAAwCC,MAAxC,EAAgD;EAC5C,WAAOD,QAAQ,IAAIC,MAAnB,EAA2B,EAAED,QAA7B,EAAuC;EACnC,YAAME,EAAE,GAAGH,MAAM,CAACC,QAAD,CAAjB;;EACA,UAAI1P,KAAK,CAAC4P,EAAD,CAAT,EAAe;EACXC,QAAAA,UAAU,CAACD,EAAE,CAAC/C,GAAJ,CAAV;EACH;EACJ;EACJ;;EAED,WAASgD,UAAT,CAAoBnJ,EAApB,EAAwB;EACpB,UAAMoC,MAAM,GAAG4F,OAAO,CAACtB,UAAR,CAAmB1G,EAAnB,CAAf,CADoB;;EAGpB,QAAI1G,KAAK,CAAC8I,MAAD,CAAT,EAAmB;EACf4F,MAAAA,OAAO,CAACnB,WAAR,CAAoBzE,MAApB,EAA4BpC,EAA5B;EACH;EACJ;EAED;EACJ;EACA;EACA;EACA;;;EACI,SAAO,SAASoJ,KAAT,CAAeC,QAAf,EAAyBnM,KAAzB,EAAgC;EACnChB,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BkN,QAA3B,EAAqCnM,KAArC;EAEA,UAAMiL,kBAAkB,GAAG,EAA3B,CAHmC;;EAMnC,QAAIhP,OAAO,CAACkQ,QAAD,CAAX,EAAuB,CAAvB,MAIO;EACH;EACA,YAAMC,aAAa,GAAGhQ,KAAK,CAAC+P,QAAQ,CAACE,QAAV,CAA3B;;EAEA,UAAID,aAAJ,EAAmB;EACf;EACAD,QAAAA,QAAQ,GAAGpB,WAAW,CAACoB,QAAD,CAAtB;EACAnN,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCkN,QAAtC;EACH,OARE;;;EAWH,YAAMG,MAAM,GAAGH,QAAQ,CAAClD,GAAxB;EACA,YAAMkC,SAAS,GAAGL,OAAO,CAACtB,UAAR,CAAmB8C,MAAnB,CAAlB,CAZG;EAcH;;EACApB,MAAAA,SAAS,CACLlL,KADK,EAELiL,kBAFK,EAGLE,SAHK;EAKLL,MAAAA,OAAO,CAACjB,WAAR,CAAoByC,MAApB,CALK,CAAT,CAfG;;EAwBH,UAAIlQ,KAAK,CAAC+O,SAAD,CAAT,EAAsB;EAClBnM,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BkN,QAA1B;EACAP,QAAAA,YAAY,CAAC,CAACO,QAAD,CAAD,EAAa,CAAb,EAAgB,CAAhB,CAAZ;EACH;EAEJ;;EAED,WAAOnM,KAAK,CAACiJ,GAAb;EACH,GA1CD;EA2CH;;EC3NM,MAAMsD,gBAAgB,GAAGjQ,OAAO,CAAC,sCAAD,CAAhC;;EAGA,MAAMkQ,gBAAgB,GAAI/R,GAAD,IAAS;EACvC,SAAOA,GAAG,IAAI,IAAP,IAAeA,GAAG,KAAK,KAA9B;EACD,CAFM;;ECFP,SAASgS,WAAT,CAAqBN,QAArB,EAA+BnM,KAA/B,EAAsC;EACpC;EACA,MAAI/D,OAAO,CAACkQ,QAAQ,CAACrN,IAAT,CAAcsD,KAAf,CAAP,IAAgCnG,OAAO,CAAC+D,KAAK,CAAClB,IAAN,CAAWsD,KAAZ,CAA3C,EAA+D;EAC7D;EACD;;EAED,MAAIpI,GAAJ,EAAS0S,GAAT,EAAcC,GAAd;EACA,QAAM1D,GAAG,GAAGjJ,KAAK,CAACiJ,GAAlB;EACA,QAAM2D,QAAQ,GAAGT,QAAQ,CAACrN,IAAT,CAAcsD,KAAd,IAAuB,EAAxC;EACA,MAAIA,KAAK,GAAGpC,KAAK,CAAClB,IAAN,CAAWsD,KAAX,IAAoB,EAAhC;;EAEA,OAAKpI,GAAL,IAAYoI,KAAZ,EAAmB;EACjBsK,IAAAA,GAAG,GAAGtK,KAAK,CAACpI,GAAD,CAAX;EACA2S,IAAAA,GAAG,GAAGC,QAAQ,CAAC5S,GAAD,CAAd,CAFiB;;EAKjB,QAAI2S,GAAG,KAAKD,GAAZ,EAAiB;EACfG,MAAAA,OAAO,CAAC5D,GAAD,EAAMjP,GAAN,EAAW0S,GAAX,CAAP;EACD;EACF;;EAED,OAAK1S,GAAL,IAAY4S,QAAZ,EAAsB;EACpB;EACA,QAAI3Q,OAAO,CAACmG,KAAK,CAACpI,GAAD,CAAN,CAAX,EAAyB;EACvB;EACA,UAAI,CAACuS,gBAAgB,CAACvS,GAAD,CAArB,EAA4B;EAC1BiP,QAAAA,GAAG,CAAC6D,eAAJ,CAAoB9S,GAApB,EAD0B;EAE3B;EACF;EACF;EACF;;;EAGD,SAAS6S,OAAT,CAAiB/J,EAAjB,EAAqB9I,GAArB,EAA0BW,KAA1B,EAAiC;EAC/BoS,EAAAA,WAAW,CAACjK,EAAD,EAAK9I,GAAL,EAAUW,KAAV,CAAX;EACD;;EAED,SAASoS,WAAT,CAAqBjK,EAArB,EAAyB9I,GAAzB,EAA8BW,KAA9B,EAAqC;EACnC;EACA,MAAI6R,gBAAgB,CAAC7R,KAAD,CAApB,EAA6B;EAC3BmI,IAAAA,EAAE,CAACgK,eAAH,CAAmB9S,GAAnB;EACD,GAFD,MAEO;EACL8I,IAAAA,EAAE,CAACsG,YAAH,CAAgBpP,GAAhB,EAAqBW,KAArB;EACD;EACF;;AAED,cAAe;EACbU,EAAAA,MAAM,EAAEoR,WADK;EAEbO,EAAAA,MAAM,EAAEP;EAFK,CAAf;;ECjDA;EAIO,SAASQ,gBAAT,CAA0BjN,KAA1B,EAAiC;EACtC,MAAIlB,IAAI,GAAGkB,KAAK,CAAClB,IAAjB;EAEA,SAAOoO,WAAW,CAACpO,IAAI,CAACqJ,WAAN,EAAmBrJ,IAAI,CAACqO,KAAxB,CAAlB;EACD;EAEM,SAASD,WAAT,CAAqB/E,WAArB,EAAkCiF,YAAlC,EAAgD;EACrD,MAAIhR,KAAK,CAAC+L,WAAD,CAAL,IAAsB/L,KAAK,CAACgR,YAAD,CAA/B,EAA+C;EAC7C,WAAOC,MAAM,CAAClF,WAAD,EAAcmF,cAAc,CAACF,YAAD,CAA5B,CAAb;EACD;;EAED,SAAO,EAAP;EACD;EAEM,SAASC,MAAT,CAAgBE,CAAhB,EAAmBC,CAAnB,EAAsB;EAC3B,SAAOD,CAAC,GAAIC,CAAC,GAAGD,CAAC,GAAG,GAAJ,GAAUC,CAAb,GAAiBD,CAAtB,GAA2BC,CAAC,IAAI,EAAxC;EACD;EAEM,SAASF,cAAT,CAAwB3S,KAAxB,EAA+B;EACpC,MAAIuC,KAAK,CAACoB,OAAN,CAAc3D,KAAd,CAAJ,EAA0B;EACxB,WAAO8S,cAAc,CAAC9S,KAAD,CAArB;EACD;;EACD,MAAIG,QAAQ,CAACH,KAAD,CAAZ,EAAqB;EACnB,WAAO+S,eAAe,CAAC/S,KAAD,CAAtB;EACD;;EACD,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;EAC7B,WAAOA,KAAP;EACD;;EAED,SAAO,EAAP;EACD;;EAED,SAAS8S,cAAT,CAAwB9S,KAAxB,EAA+B;EAC7B,MAAIyK,GAAG,GAAG,EAAV;EACA,MAAIuI,WAAJ;;EACA,OAAK,IAAIhR,CAAC,GAAG,CAAR,EAAWkC,CAAC,GAAGlE,KAAK,CAACiC,MAA1B,EAAkCD,CAAC,GAAGkC,CAAtC,EAAyClC,CAAC,EAA1C,EAA8C;EAC5C,QAAIP,KAAK,CAAEuR,WAAW,GAAGL,cAAc,CAAC3S,KAAK,CAACgC,CAAD,CAAN,CAA9B,CAAL,IAAmDgR,WAAW,KAAK,EAAvE,EAA2E;EACzE,UAAIvI,GAAJ,EAASA,GAAG,IAAI,GAAP;EACTA,MAAAA,GAAG,IAAIuI,WAAP;EACD;EACF;;EACD,SAAOvI,GAAP;EACD;;EAED,SAASsI,eAAT,CAAyB/S,KAAzB,EAAgC;EAC9B,MAAIyK,GAAG,GAAG,EAAV;;EACA,OAAK,MAAMpL,GAAX,IAAkBW,KAAlB,EAAyB;EACvB,QAAIA,KAAK,CAACX,GAAD,CAAT,EAAgB;EACd,UAAIoL,GAAJ,EAASA,GAAG,IAAI,GAAP;EACTA,MAAAA,GAAG,IAAIpL,GAAP;EACD;EACF;;EACD,SAAOoL,GAAP;EACD;;ECtDD,SAASwI,WAAT,CAAqBzB,QAArB,EAA+BnM,KAA/B,EAAsC;EACpC,QAAM8C,EAAE,GAAG9C,KAAK,CAACiJ,GAAjB;EACA,QAAMnK,IAAI,GAAGkB,KAAK,CAAClB,IAAnB;EACA,QAAM+O,OAAO,GAAG1B,QAAQ,CAACrN,IAAzB;;EAEA,MACE7C,OAAO,CAAC6C,IAAI,CAACqJ,WAAN,CAAP,IACAlM,OAAO,CAAC6C,IAAI,CAACqO,KAAN,CADP,KAEClR,OAAO,CAAC4R,OAAD,CAAP,IACE5R,OAAO,CAAC4R,OAAO,CAAC1F,WAAT,CAAP,IAAgClM,OAAO,CAAC4R,OAAO,CAACV,KAAT,CAH1C,CADF,EAKE;EACA;EACD;;EAED,MAAIW,GAAG,GAAGb,gBAAgB,CAACjN,KAAD,CAA1B,CAdoC;;EAiBpC,MAAI8N,GAAG,KAAKhL,EAAE,CAACiL,UAAf,EAA2B;EACzBjL,IAAAA,EAAE,CAACsG,YAAH,CAAgB,OAAhB,EAAyB0E,GAAzB;EACAhL,IAAAA,EAAE,CAACiL,UAAH,GAAgBD,GAAhB;EACD;EACF;;AAED,cAAe;EACbzS,EAAAA,MAAM,EAAEuS,WADK;EAEbZ,EAAAA,MAAM,EAAEY;EAFK,CAAf;;ACtBA,wBAAe,CAACxL,KAAD,EAAQyG,KAAR,CAAf;;ECAA,MAAM9E,OAAO,GAAGiK,eAAhB;EAEO,MAAM9B,KAAK,GAAGxB,mBAAmB,CAAC;EAAEI,EAAAA,OAAF;EAAW/G,EAAAA;EAAX,CAAD,CAAjC;;ECAA,SAASkK,SAAT,CAAmBlO,GAAnB,EAAwB;EAC7B;EACAA,EAAAA,GAAG,CAAC5C,SAAJ,CAAc+Q,KAAd,GAAsB,UAAU5O,OAAV,EAAmB;EACvC,UAAMxF,EAAE,GAAG,IAAX,CADuC;;EAEvCA,IAAAA,EAAE,CAACyF,QAAH,GAAcD,OAAd,CAFuC;EAIvC;EACA;;EACAD,IAAAA,SAAS,CAACvF,EAAD,CAAT;;EAEA,QAAIA,EAAE,CAACyF,QAAH,CAAYuD,EAAhB,EAAoB;EAClB;EACAhJ,MAAAA,EAAE,CAACqU,MAAH,CAAUrU,EAAE,CAACyF,QAAH,CAAYuD,EAAtB;EACD;EACF,GAZD,CAF6B;;;EAgB7B/C,EAAAA,GAAG,CAAC5C,SAAJ,CAAcgR,MAAd,GAAuB,UAAUrL,EAAV,EAAc;EACnC,UAAMhJ,EAAE,GAAG,IAAX;EACA,UAAMwF,OAAO,GAAGxF,EAAE,CAACyF,QAAnB,CAFmC;EAKnC;EAEA;EAEA;;EACA,QAAI,CAACD,OAAO,CAAC0I,MAAb,EAAqB;EACnB,UAAIxD,QAAQ,GAAGlF,OAAO,CAACkF,QAAvB,CADmB;EAGnB;;EACA,UAAI1B,EAAE,IAAI,CAAC0B,QAAX,EAAqB;EACnB;EACA1K,QAAAA,EAAE,CAACoG,GAAH,GAASgJ,QAAQ,CAACkF,aAAT,CAAuBtL,EAAvB,CAAT;EACA0B,QAAAA,QAAQ,GAAG1K,EAAE,CAACoG,GAAH,CAAOmO,SAAlB;EACD,OARkB;;;EAWnB,YAAMrG,MAAM,GAAGD,kBAAkB,CAACvD,QAAD,EAAWuE,WAAX,CAAjC;EACAzJ,MAAAA,OAAO,CAAC0I,MAAR,GAAiBA,MAAjB,CAZmB;EAapB,KAvBkC;;;EAyBnCrI,IAAAA,cAAc,CAAC7F,EAAD,CAAd;EACD,GA1BD,CAhB6B;;;EA6C7BiG,EAAAA,GAAG,CAAC5C,SAAJ,CAAc8C,SAAd,GAA0BiM,KAA1B;EACD;;EC/CD;EACA;EAEA;EACA;EACA;EAEA;EACA;EAEA;EACA;;EACO,SAASoC,iBAAT,CAA2BnJ,QAA3B,EAAqC;EACxC,SAAO9I,WAAW,CAAC8I,QAAD,CAAX,GACD,CAACiF,eAAe,CAACjF,QAAD,CAAhB,CADC,GAEDjI,KAAK,CAACoB,OAAN,CAAc6G,QAAd,IACIoJ,sBAAsB,CAACpJ,QAAD,CAD1B,GAEIhJ,SAJV;EAKH;;EAGD,SAASqS,UAAT,CAAoB3G,IAApB,EAA0B;EACtB,SAAOzL,KAAK,CAACyL,IAAD,CAAL,IAAezL,KAAK,CAACyL,IAAI,CAACxH,IAAN,CAApB,IAAmCtD,OAAO,CAAC8K,IAAI,CAAC4G,SAAN,CAAjD;EACH;;;EAGD,SAASF,sBAAT,CAAgCpJ,QAAhC,EAA0CuJ,WAA1C,EAAuD;EACnD,QAAMtJ,GAAG,GAAG,EAAZ;EACA,MAAIzI,CAAJ,EAAO0K,CAAP,EAAU5G,SAAV,EAAqBkO,IAArB;;EACA,OAAKhS,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGwI,QAAQ,CAACvI,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;EAClC0K,IAAAA,CAAC,GAAGlC,QAAQ,CAACxI,CAAD,CAAZ;EACA,QAAIV,OAAO,CAACoL,CAAD,CAAP,IAAc,OAAOA,CAAP,KAAa,SAA/B,EAA0C;EAC1C5G,IAAAA,SAAS,GAAG2E,GAAG,CAACxI,MAAJ,GAAa,CAAzB;EACA+R,IAAAA,IAAI,GAAGvJ,GAAG,CAAC3E,SAAD,CAAV,CAJkC;;EAOlC,QAAIvD,KAAK,CAACoB,OAAN,CAAc+I,CAAd,CAAJ,EAAsB;EAClB,UAAIA,CAAC,CAACzK,MAAF,GAAW,CAAf,EAAkB;EACdyK,QAAAA,CAAC,GAAGkH,sBAAsB,CAAClH,CAAD,EAAK,GAAEqH,WAAW,IAAI,EAAG,IAAG/R,CAAE,EAA9B,CAA1B,CADc;;EAGd,YAAI6R,UAAU,CAACnH,CAAC,CAAC,CAAD,CAAF,CAAV,IAAoBmH,UAAU,CAACG,IAAD,CAAlC,EAA0C;EACtCvJ,UAAAA,GAAG,CAAC3E,SAAD,CAAH,GAAiB2J,eAAe,CAACuE,IAAI,CAACtO,IAAL,GAAagH,CAAC,CAAC,CAAD,CAAF,CAAOhH,IAApB,CAAhC;EACAgH,UAAAA,CAAC,CAACuH,KAAF;EACH;;EACDxJ,QAAAA,GAAG,CAACtE,IAAJ,CAASnD,KAAT,CAAeyH,GAAf,EAAoBiC,CAApB;EACH;EACJ,KAVD,MAUO,IAAIhL,WAAW,CAACgL,CAAD,CAAf,EAAoB;EAAE;EAEzB,UAAImH,UAAU,CAACG,IAAD,CAAd,EAAsB;EAClB;EACA;EACAvJ,QAAAA,GAAG,CAAC3E,SAAD,CAAH,GAAiB2J,eAAe,CAACuE,IAAI,CAACtO,IAAL,GAAYgH,CAAb,CAAhC;EACH,OAJD,MAIO,IAAIA,CAAC,KAAK,EAAV,EAAc;EACjB;EACAjC,QAAAA,GAAG,CAACtE,IAAJ,CAASsJ,eAAe,CAAC/C,CAAD,CAAxB;EACH;EACJ,KAVM,MAUA;EACH,UAAImH,UAAU,CAACnH,CAAD,CAAV,IAAiBmH,UAAU,CAACG,IAAD,CAA/B,EAAuC;EACnC;EACAvJ,QAAAA,GAAG,CAAC3E,SAAD,CAAH,GAAiB2J,eAAe,CAACuE,IAAI,CAACtO,IAAL,GAAYgH,CAAC,CAAChH,IAAf,CAAhC;EACH,OAHD,MAGO;EACH;EACA,YAAIvD,MAAM,CAACqI,QAAQ,CAAC0J,QAAV,CAAN,IACAzS,KAAK,CAACiL,CAAC,CAACzC,GAAH,CADL,IAEA3I,OAAO,CAACoL,CAAC,CAACrN,GAAH,CAFP,IAGAoC,KAAK,CAACsS,WAAD,CAHT,EAGwB;EACpBrH,UAAAA,CAAC,CAACrN,GAAF,GAAS,UAAS0U,WAAY,IAAG/R,CAAE,IAAnC;EACH;;EACDyI,QAAAA,GAAG,CAACtE,IAAJ,CAASuG,CAAT;EACH;EACJ;EACJ;;EAED,SAAOjC,GAAP;EACH;;ECzED,MAAM0J,gBAAgB,GAAG,CAAzB;;EAGO,SAAS9F,aAAT,CACHpE,GADG,EAEH9F,IAFG,EAGHqG,QAHG,EAIH+B,iBAJG,EAKH6H,eALG,EAML;EACE;EACA;EACA;EAEA,MAAI7R,KAAK,CAACoB,OAAN,CAAcQ,IAAd,KAAuBzC,WAAW,CAACyC,IAAD,CAAtC,EAA8C;EAC1C;EACAoI,IAAAA,iBAAiB,GAAG/B,QAApB;EACAA,IAAAA,QAAQ,GAAGrG,IAAX;EACAA,IAAAA,IAAI,GAAG3C,SAAP;EACH,GAVH;EAaE;;;EACA,MAAIW,MAAM,CAACiS,eAAD,CAAV,EAA6B;EACzB7H,IAAAA,iBAAiB,GAAG4H,gBAApB;EACH;;EAED,SAAOE,cAAc,CAACpK,GAAD,EAAM9F,IAAN,EAAYqG,QAAZ,EAAsB+B,iBAAtB,CAArB;EACH;;EAEM,SAAS8H,cAAT,CAAwBpK,GAAxB,EAA6B9F,IAA7B,EAAmCqG,QAAnC,EAA6C+B,iBAA7C,EAAgE;EACnE;EAEA,MAAIA,iBAAiB,KAAK4H,gBAA1B,EAA4C;EACxC3J,IAAAA,QAAQ,GAAGmJ,iBAAiB,CAACnJ,QAAD,CAA5B,CADwC;EAE3C;;EAED,MAAInF,KAAJ;;EACA,MAAI,OAAO4E,GAAP,KAAe,QAAnB,EAA6B;EACzB5E,IAAAA,KAAK,GAAG,IAAIkK,KAAJ,CAAUtF,GAAV,EAAe9F,IAAf,EAAqBqG,QAArB,EAA+BhJ,SAA/B,EAA0CA,SAA1C,CAAR;EACH;;EAED,SAAO6D,KAAP;EACH;;EC7CM,SAASiP,UAAT,CAAoBxU,GAApB,EAAyBuN,MAAzB,EAAiC;EACpC,MAAIkH,GAAJ,EAASvS,CAAT,EAAYkC,CAAZ,EAAeH,IAAf,EAAqB1E,GAArB;;EACA,MAAIkD,KAAK,CAACoB,OAAN,CAAc7D,GAAd,KAAsB,OAAOA,GAAP,KAAe,QAAzC,EAAmD;EAC/C;EACAyU,IAAAA,GAAG,GAAG,IAAIhS,KAAJ,CAAUzC,GAAG,CAACmC,MAAd,CAAN;;EACA,SAAKD,CAAC,GAAG,CAAJ,EAAOkC,CAAC,GAAGpE,GAAG,CAACmC,MAApB,EAA4BD,CAAC,GAAGkC,CAAhC,EAAmClC,CAAC,EAApC,EAAwC;EACpC;EAEAuS,MAAAA,GAAG,CAACvS,CAAD,CAAH,GAASqL,MAAM,CAACvN,GAAG,CAACkC,CAAD,CAAJ,EAASA,CAAT,CAAf;EACH;EACJ,GARD,MAQO,IAAI,OAAOlC,GAAP,KAAe,QAAnB,EAA6B;EAChC;EACAyU,IAAAA,GAAG,GAAG,IAAIhS,KAAJ,CAAUzC,GAAV,CAAN;;EACA,SAAKkC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGlC,GAAhB,EAAqBkC,CAAC,EAAtB,EAA0B;EACtBuS,MAAAA,GAAG,CAACvS,CAAD,CAAH,GAASqL,MAAM,CAACrL,CAAC,GAAG,CAAL,EAAQA,CAAR,CAAf;EACH;EACJ,GANM,MAMA,IAAI7B,QAAQ,CAACL,GAAD,CAAZ,EAAmB;EACtB;EAEA,QAAIgB,SAAS,IAAIhB,GAAG,CAACiB,MAAM,CAAC0K,QAAR,CAApB,EAAuC;EACnC;EACA8I,MAAAA,GAAG,GAAG,EAAN;EACA,UAAI9I,QAAQ,GAAG3L,GAAG,CAACiB,MAAM,CAAC0K,QAAR,CAAH,EAAf;EACA,UAAI1I,MAAM,GAAG0I,QAAQ,CAAC+I,IAAT,EAAb;;EACA,aAAO,CAACzR,MAAM,CAAC0R,IAAf,EAAqB;EACjBF,QAAAA,GAAG,CAACpO,IAAJ,CAASkH,MAAM,CAACtK,MAAM,CAAC/C,KAAR,EAAeuU,GAAG,CAACtS,MAAnB,CAAf;EACAc,QAAAA,MAAM,GAAG0I,QAAQ,CAAC+I,IAAT,EAAT;EACH;EACJ,KATD,MASO;EACH;EACAzQ,MAAAA,IAAI,GAAGzE,MAAM,CAACyE,IAAP,CAAYjE,GAAZ,CAAP;EACAyU,MAAAA,GAAG,GAAG,IAAIhS,KAAJ,CAAUwB,IAAI,CAAC9B,MAAf,CAAN;;EACA,WAAKD,CAAC,GAAG,CAAJ,EAAOkC,CAAC,GAAGH,IAAI,CAAC9B,MAArB,EAA6BD,CAAC,GAAGkC,CAAjC,EAAoClC,CAAC,EAArC,EAAyC;EACrC3C,QAAAA,GAAG,GAAG0E,IAAI,CAAC/B,CAAD,CAAV;EACAuS,QAAAA,GAAG,CAACvS,CAAD,CAAH,GAASqL,MAAM,CAACvN,GAAG,CAACT,GAAD,CAAJ,EAAWA,GAAX,EAAgB2C,CAAhB,CAAf;EACH;EACJ;EACJ,GArCmC;;;EAuCpC,MAAI,CAACP,KAAK,CAAC8S,GAAD,CAAV,EAAiB;EACbA,IAAAA,GAAG,GAAG,EAAN;EACH,GAzCmC;;;EA2CpCA,EAAAA,GAAG,CAACL,QAAJ,GAAe,IAAf;EAEA,SAAOK,GAAP;EACH;;EC5CM,SAASG,oBAAT,CAA+BtV,MAA/B,EAAuC;EAC5CA,EAAAA,MAAM,CAACuV,EAAP,GAAYlF,eAAZ;EACArQ,EAAAA,MAAM,CAACwV,EAAP,GAAYvG,aAAZ;EACAjP,EAAAA,MAAM,CAACyV,EAAP,GAAYxT,QAAZ;EACAjC,EAAAA,MAAM,CAAC0V,EAAP,GAAYR,UAAZ;EACD;;ECTM,SAASS,WAAT,CAAqB3P,GAArB,EAA0B;EAC7B;EACAsP,EAAAA,oBAAoB,CAACtP,GAAG,CAAC5C,SAAL,CAApB,CAF6B;;EAM7B4C,EAAAA,GAAG,CAAC5C,SAAJ,CAAc0C,OAAd,GAAwB,YAAY;EAChC,UAAM/F,EAAE,GAAG,IAAX;EACA,UAAMkG,KAAK,GAAGlG,EAAE,CAACyF,QAAH,CAAYyI,MAAZ,CAAmBtI,IAAnB,CAAwB5F,EAAxB,CAAd,CAFgC;;EAIhC,WAAOkG,KAAP;EACH,GALD;EAMH;;ECVD,SAASD,GAAT,CAAaT,OAAb,EAAsB;EAClB;EACA,OAAK4O,KAAL,CAAW5O,OAAX;EACH;;;EAGD2O,SAAS,CAAClO,GAAD,CAAT;;EAEAD,cAAc,CAACC,GAAD,CAAd;;EAEA2P,WAAW,CAAC3P,GAAD,CAAX;;ECXAA,GAAG,CAAC4P,OAAJ,GAAc,KAAd;;;;;;;;"}