{"version":3,"file":"vue.js","sources":["../../src/core/instance/proxy.js","../../src/shared/util.js","../../src/core/observe/array.js","../../src/core/observe/index.js","../../src/core/instance/state.js","../../src/core/instance/lifecycle.js","../../src/compiler/parser/text-parser.js","../../src/compiler/parser/html-parser.js","../../src/compiler/helpers.js","../../src/compiler/parser/index.js","../../src/compiler/codegen/index.js","../../src/compiler/index.js","../../src/web/compiler/modules/class.js","../../src/web/compiler/util/style.js","../../src/web/compiler/modules/style.js","../../src/web/compiler/modules/index.js","../../src/web/compiler/options.js","../../src/web/runtime/node-ops.js","../../src/core/vdom/vnode.js","../../src/core/vdom/patch.js","../../src/web/runtime/util/attrs.js","../../src/web/runtime/modules/attrs.js","../../src/web/runtime/util/class.js","../../src/web/runtime/modules/class.js","../../src/web/runtime/util/style.js","../../src/web/runtime/modules/style.js","../../src/web/runtime/modules/index.js","../../src/web/runtime/patch.js","../../src/core/instance/init.js","../../src/core/vdom/helpers/normalize-children.js","../../src/core/vdom/create-element.js","../../src/core/instance/render-helpers/render-list.js","../../src/core/instance/render-helpers/index.js","../../src/core/instance/render.js","../../src/core/instance/index.js","../../src/core/index.js"],"sourcesContent":["function proxy (vm, target, key) {\n  // Object.defineProperty() 方法会直接在一个对象上定义一个新属性，或者修改一个对象的现有属性，并返回此对象。\n  // 将属性都挂载到 vm（Vue实例）上，并设置属性的 getter/setter，以实现数据代理：vm.name --> vm.$data.name\n  Object.defineProperty(vm, key, {\n    get () {\n      return vm[target][key]; // vm[target][key] --> vm.$data.name\n    },\n    set (newValue) {\n      vm[target][key] = newValue;\n    }\n  });\n}\n\nexport default proxy;","// done:: 是否存在 __proto__\r\nexport const hasProto = \"__proto__\" in {};\r\n\r\n// done: 将连字符分隔的字符串驼峰化，例如：background-color --> backgroundColor\r\nconst camelizeRE = /-(\\w)/g;\r\nexport const camelize = cached((str) => {\r\n  return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : \"\"));\r\n});\r\n\r\n// done: 用连字符连接驼峰字符串\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\nexport const hyphenate = cached((str) => {\r\n  return str.replace(hyphenateRE, \"-$1\").toLowerCase();\r\n});\r\n\r\n// done: 定义一个属性\r\nexport function def(obj, key, val, enumerable) {\r\n  Object.defineProperty(obj, key, {\r\n    value: val,\r\n    enumerable: !!enumerable,\r\n    writable: true,\r\n    configurable: true,\r\n  });\r\n}\r\n\r\n// done: 对象检测\r\nexport function isObject(obj) {\r\n  return obj !== null && typeof obj === \"object\";\r\n}\r\n\r\n// done: 将对象数组合并为单个对象\r\nexport function toObject(arr) {\r\n  const res = {};\r\n  for (let i = 0; i < arr.length; i++) {\r\n    if (arr[i]) {\r\n      extend(res, arr[i]);\r\n    }\r\n  }\r\n  return res;\r\n}\r\n// done: 混合属性到目标对象中\r\nexport function extend(to, _from) {\r\n  for (const key in _from) {\r\n    to[key] = _from[key];\r\n  }\r\n  return to;\r\n}\r\n\r\n// done: 获取并删除（removeFromMap 为真） attrsMap 中的属性\r\nexport function getAndRemoveAttr(el, name, removeFromMap) {\r\n  if (removeFromMap) {\r\n    delete el.attrsMap[name];\r\n  }\r\n  return el.attrsMap[name];\r\n}\r\n\r\n// done: 创建一个纯函数的缓存\r\nexport function cached(fn) {\r\n  const cache = Object.create(null);\r\n  return function cachedFn(str) {\r\n    const hit = cache[str];\r\n    return hit || (cache[str] = fn(str));\r\n  };\r\n}\r\n\r\n// done: 判断 Symbol 和 Reflect 是否都存在\r\nexport const hasSymbol =\r\n  typeof Symbol !== \"undefined\" &&\r\n  isNative(Symbol) &&\r\n  typeof Reflect !== \"undefined\" &&\r\n  isNative(Reflect.ownKeys);\r\n\r\nexport function isNative(Ctor) {\r\n  return typeof Ctor === \"function\" && /native code/.test(Ctor.toString());\r\n}\r\n\r\n// done: 参数等于 undefined 或 null\r\nexport function isUndef(v) {\r\n  return v === undefined || v === null;\r\n}\r\n\r\n// done: 参数不等于 undefined 和 null\r\nexport function isDef(v) {\r\n  return v !== undefined && v !== null;\r\n}\r\n\r\n// done: 检查 value 是否为原始值\r\nexport function isPrimitive(value) {\r\n  return (\r\n    typeof value === \"string\" ||\r\n    typeof value === \"number\" ||\r\n    typeof value === \"symbol\" ||\r\n    typeof value === \"boolean\"\r\n  );\r\n}\r\n\r\n// done: 制作一个映射，并返回一个函数来检查键是否在该映射中。\r\nexport function makeMap(str, expectsLowerCase) {\r\n  const map = Object.create(null);\r\n  const list = str.split(\",\");\r\n\r\n  for (let i = 0; i < list.length; i++) {\r\n    map[list[i]] = true;\r\n  }\r\n\r\n  return expectsLowerCase ? (val) => map[val.toLowerCase()] : (val) => map[val];\r\n}\r\n\r\nexport function isTrue(v) {\r\n  return v === true;\r\n}\r\n\r\nexport function isFalse(v) {\r\n  return v === false;\r\n}\r\n","import { def } from '../../shared/util';\n\n// 存储数组方法\nconst methodsToPatch = [\n    'push',\n    'pop',\n    'shift',\n    'unshift',\n    'splice',\n    'sort',\n    'reverse'\n];\n\nconst slice = Array.prototype.slice;\nconst arrayProto = Array.prototype; // 存储数组原型\nconst arrayMethods = Object.create(arrayProto); // 创建一个新的数组原型对象\n\nmethodsToPatch.forEach(function (method) {\n\n    const original = arrayProto[method]; // 缓存数组的原方法\n\n    def(arrayMethods, method, function mutator(...args) {\n        // 使用数组的原生方法，对数组进行增、删。\n        const result = original.apply(this, args);\n        const ob = this.__ob__;\n        let inserted;\n\n        switch (method) {\n            case 'push':\n            case 'unshift':\n                inserted = args;\n                break\n            case 'splice':\n                // splice() 方法用于添加或删除数组中的元素\n                // 删除：splice(0, 1) --> args 即 [0, 1]\n                // 增加：splice(1, 0, '新增') --> args 即 [1, 0, '新增']\n\n                // slice() 方法可从已有的数组中返回选定的元素\n                // args.slice(2)，固定下标值为 2，是因为 splice 的使用方式：\n                // splice，若是删除，则 args.slice(2) 返回空数组\n                // splice，若是新增，则 args.slice(2) 返回一个新数组，里面是所有新增的数据\n                inserted = args.slice(2);\n                break\n        }\n        // inserted 为真（空数组 --> []，也是真），则调用 observeArray() 方法对其进行观察\n        if (inserted) ob.observeArray(inserted);\n        \n        return result\n    })\n\n\n\n    // arrayMethods[method] = function () {\n\n    //     let inserted; // 存储数组中新增的值，默认undefined\n    //     let args = slice.call(arguments); // 将 arguments 转成一个新的数组并返回\n\n    //     // 这里可以不要返回值，直接写：original.apply(this, args)\n    //     const result = original.apply(this, args); // 使用数组的原生方法，对数组进行增、删。\n\n    //     // console.log('数组新方法', args);\n    //     switch (method) {\n    //         case 'push':\n    //         case 'unshift':\n    //             inserted = args;\n    //             break;\n    //         case 'splice':\n    //             // splice() 方法用于添加或删除数组中的元素\n    //             // 删除：splice(0, 1) --> args 即 [0, 1]\n    //             // 增加：splice(1, 0, '新增') --> args 即 [1, 0, '新增']\n\n    //             // slice() 方法可从已有的数组中返回选定的元素\n    //             // args.slice(2)，固定下标值为 2，是因为 splice 的使用方式：\n    //             // splice，若是删除，则 args.slice(2) 返回空数组\n    //             // splice，若是新增，则 args.slice(2) 返回一个新数组，里面是所有新增的数据\n    //             inserted = args.slice(2);\n    //             break;\n    //         default:\n    //             break;\n    //     }\n\n    //     // inserted 为真（空数组 --> []，也是真），则调用 observeArray() 方法对其进行观察\n    //     inserted && observeArray(inserted);\n\n    //     return result;\n    // }\n});\n\nexport {\n    arrayMethods\n}","// import observeArray from './observeArray';\n// import { defineReactive } from './reactive';\nimport { arrayMethods } from './array';\nimport { isObject, def, hasProto } from '../../shared/util';\n\nconst arrayKeys = Object.getOwnPropertyNames(arrayMethods)\n\nexport function observe(val) {\n\n    // 检查 val 是否为对象（注意：在 js 中，数组也是对象，isObject并不排除数组）。\n    if (!isObject(val)) return;\n    return new Observer(val);\n}\n\nexport class Observer {\n\n    constructor(value) {\n        this.value = value;\n\n        // 为当前 value 定义 __ob__ 属性，其值为 this（即当前 Observer 类）\n        def(value, '__ob__', this);\n\n        if (Array.isArray(value)) {\n            // 以是否存在 __proto__ 来判断使用何种方法增加扩充目标对象或数组\n            if (hasProto) {\n                protoAugment(value, arrayMethods);\n            } else {\n                copyAugment(value, arrayMethods, arrayKeys);\n            }\n\n            // 观察数组（Array）\n            this.observeArray(value);\n        } else {\n            // 观察对象（Object)\n            this.walk(value)\n        }\n    }\n\n    // 遍历所有属性并将它们转换为 getter/setter。仅当值类型为 Object 时才应调用此方法\n    walk(obj) {\n        const keys = Object.keys(obj)\n        for (let i = 0; i < keys.length; i++) {\n            const key = keys[i]; // 属性\n            const value = obj[key]; // 属性值\n            defineReactive(obj, key, value)\n        }\n    }\n\n    // 观察数组（Array）的每一项\n    observeArray(items) {\n        for (let i = 0, l = items.length; i < l; i++) {\n            observe(items[i])\n        }\n    }\n}\n\nfunction defineReactive(data, key, value) {\n\n    // 递归观察，value可能是一个对象\n    observe(value);\n\n    // Object.defineProperty() 方法会直接在一个对象上定义一个新属性，或者修改一个对象的现有属性，并返回此对象。\n    // 它是实现数据劫持的关键所在。\n    Object.defineProperty(data, key, {\n        get: function reactiveGetter() {\n            //   console.log('获取', value);\n            return value;\n        },\n        set: function reactiveSetter(newValue) {\n            //   console.log('设置', newValue);\n            if (newValue === value) return; // 同名属性，不需要重新赋值或观察\n            observe(value); // 递归观察，value可能是一个对象\n            value = newValue;\n        }\n    });\n}\n\n// done: 通过使用 __proto__ 截取原型链来增加目标对象或数组\nfunction protoAugment(target, src) {\n    target.__proto__ = src;\n}\n\n// done: 通过定义隐藏属性来扩充目标对象或数组\nfunction copyAugment(target, src, keys) {\n    for (let i = 0, l = keys.length; i < l; i++) {\n        const key = keys[i];\n        def(target, key, src[key]);\n    }\n}\n// // 遍历所有属性并将它们转换为 getter/setter。仅当值类型为 Object 时才应调用此方法\n// Observer.prototype.walk = function (data) {\n\n//     // Object.keys() 方法会返回一个由一个给定对象的自身可枚举属性组成的数组，\n//     // 数组中属性名的排列顺序和正常循环遍历该对象时返回的顺序一致 。\n//     const keys = Object.keys(data);\n\n//     for (let i = 0; i < keys.length; i++) {\n\n//         const key = keys[i]; // 属性\n//         const value = data[key]; // 属性值\n\n//         // 在对象上定义一个反应性属性\n//         defineReactive(data, key, value);\n\n//     }\n\n// }\n","import proxy from './proxy';\r\nimport { observe } from '../observe/index';\r\n\r\nfunction initState (vm) {\r\n  const options = vm.$options;\r\n\r\n  if (options.data) {\r\n    initData(vm); // 初始化 data\r\n  }\r\n}\r\n\r\nfunction initData (vm) {\r\n  let data = vm.$options.data;\r\n\r\n  // Vue 中的 data 可以是函数（Vue 中建议将 data 作为一个函数来使用），也可以是 Object --> {}\r\n  data = vm.$data = typeof data === 'function' ? data.call(vm) : data || {};\r\n  \r\n  for (var key in data) {\r\n    // proxy 实现数据代理，vm.name --> vm.$data.name\r\n    proxy(vm, '$data', key);\r\n  }\r\n\r\n  // observe 观察者，对数据进行观测，以便在其发生改变时，做出反应。\r\n  observe(vm.$data); \r\n}\r\n\r\nexport {\r\n    initState\r\n}","// 挂载组件\nexport function mountComponent(vm) {\n    // vm._render() 返回虚拟节点 vnode\n    vm._update(vm._render()); // 更新组件\n}\n\nexport function lifecycleMixin(Vue) {\n    // 挂载 _update() 更新函数\n    Vue.prototype._update = function (vnode) {\n        const vm = this;\n        console.log('_update--->执行', vm.$el, vnode);\n        // 将 vnode 虚拟节点生成相应的 HTML 元素\n        vm.__patch__(vm.$el, vnode);\n    };\n}","// 匹配双大括号 => {{tip}}\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\n\nexport function parseText(text) {\n  const tagRE = defaultTagRE;\n\n  if (!tagRE.test(text)) {\n    return false;\n  }\n\n  const tokens = [];\n  const rawTokens = [];\n\n  // lastIndex 下一次匹配开始的位置。每次循环时，都将其初始为 0，是为防止处理其它文本时，\n  // 取到 lastIndex 是上一个循环结束后保留下的值而导致出错。\n  let lastIndex = tagRE.lastIndex = 0;\n  let match, index, tokenValue;\n\n  // 文本样例解析参考：<div>函数字符串，{{ tip }} 哈哈</div>\n\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n\n    if (index > lastIndex) { // 截取 {{ tip }} 前面的纯文本\n      rawTokens.push(tokenValue = text.slice(lastIndex, index));\n      tokens.push(JSON.stringify(tokenValue))\n    }\n    // 获取 {{ tip }} 中的 tip\n    const exp = match[1].trim();\n    tokens.push(`_s(${exp})`);\n    rawTokens.push({\n      '@binding': exp\n    });\n\n    lastIndex = index + match[0].length; // 标记下一次匹配开始的位置\n  }\n\n   // 截取 {{ tip }} 之后的存文本\n  if (lastIndex < text.length) {\n    rawTokens.push(tokenValue = text.slice(lastIndex));\n    tokens.push(JSON.stringify(tokenValue));\n  }\n\n  return {\n    expression: tokens.join('+'),\n    tokens: rawTokens\n  }\n}","// 匹配属性： id=\"app\"、id='app' 或 id=app\r\nconst attribute =\r\n  /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\r\n// 匹配标签：<my-header></my-header>\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\n// 匹配标签：<my:header></my:header>\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\n// 匹配开始标签：<div\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`);\r\n// 匹配闭合标签： > 或 />\r\nconst startTagClose = /^\\s*(\\/?)>/;\r\n// 匹配结束标签： </div>\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);\r\n\r\n// DONE 解析模版字符串，生成 AST 语法树\r\nexport function parseHTML(html, options) {\r\n  let text; // 纯文本\r\n\r\n  // vue2.0 源码中对以下几种情况分别进行了处理：注释标签、条件注释标签、Doctype、开始标签、结束标签。\r\n  // 而每当处理完一种情况时，都会阻断代码继续往下执行且开启新的一轮循环（注：使用 continue 实现 ），\r\n  // 并且会重置 html 字符串，也就是删掉匹配到的 html 字符串，保留未匹配的 ，以便在下一次循环处理。\r\n\r\n  // 提示：在解读以上几种情况的源码时，配合模板样例来理解会让你理解起来更容易。\r\n  while (html) {\r\n    // textEnd 为 0，则说明是一个开始标签。\r\n    let textEnd = html.indexOf('<');\r\n\r\n    if (textEnd === 0) {\r\n      // 解析开始标签及其属性并将其存放在一个对象中返回，例如：\r\n      // { tagName: 'div', attrs: [{ name: 'id', value: 'app' }] }\r\n      const startTagMatch = parseStartTag();\r\n      // console.log('解析——开始标签——结果', startTagMatch);\r\n\r\n      // 处理开始标签\r\n      if (options.start && startTagMatch) {\r\n        options.start(startTagMatch.tagName, startTagMatch.attrs);\r\n        continue; // 执行到 continue，将开始新的一轮循环，后续代码不会执行\r\n      }\r\n\r\n      const endTagMatch = html.match(endTag); // 匹配结束标签\r\n\r\n      // 处理结束标签\r\n      if (options.end && endTagMatch) {\r\n        advance(endTagMatch[0].length);\r\n        options.end(endTagMatch[1]);\r\n        continue;\r\n      }\r\n    }\r\n    // 截取 HTML 模版字符串中的文本\r\n    if (textEnd > 0) {\r\n      text = html.substring(0, textEnd);\r\n    }\r\n    // 处理文本内容\r\n    if (options.chars && text) {\r\n      advance(text.length);\r\n      options.chars(text);\r\n    }\r\n  }\r\n\r\n  // 解析开始标签及其属性，例如：<div id=\"app\">\r\n  function parseStartTag() {\r\n    // 如果没有找到任何匹配的文本， match() 将返回 null。否则，它返回一个数组，\r\n    // 其中存放了与它找到的匹配文本有关的信息。\r\n    const start = html.match(startTagOpen); // 匹配开始标签\r\n    let end, attr;\r\n    if (start) {\r\n      // 存放开始标签名和属性\r\n      const match = {\r\n        tagName: start[1], // 开始标签的名，例如：div\r\n        attrs: [] // 开始标签的属性，例如：{ name: 'id', value: 'app' }\r\n      };\r\n\r\n      // 删除已匹配到的 HTML 字符串，保留未匹配到的。\r\n      // 例如：匹配到 <div id=\"app\"></div> 中的 <div，调用 advance() 方法后，\r\n      // 原 HTML 字符窜就是这样：id=\"app\"></div>\r\n      advance(start[0].length);\r\n\r\n      // 当匹配到属性（ 形如：id='app'），但未匹配到开始标签的闭合（ 形如：> ）时，进入循环\r\n      while (\r\n        !(end = html.match(startTagClose)) &&\r\n        (attr = html.match(attribute))\r\n      ) {\r\n        match.attrs.push({\r\n          name: attr[1], // 属性名: id\r\n          // 若是你在通过 new 关键字创建 vue 实例时，提供了 template 选项\r\n          // 且在它的字符串中,有的标签的属性使用的是单引号或者没有带引号，\r\n          // 例如：<div id='app'></div> 或 <div id=app></div> 这种形式，那么\r\n          // 在匹配标签的属性时，其返回的数组中这个属性的值，可能在此数组的 下标4 或 下标5\r\n          value: attr[3] || attr[4] || attr[5] // 属性值: app\r\n        });\r\n\r\n        advance(attr[0].length);\r\n      }\r\n\r\n      // 如果匹配到开始标签的闭合（ 形如：> ），则返回 match 对象\r\n      if (end) {\r\n        advance(end[0].length);\r\n        return match;\r\n      }\r\n    }\r\n  }\r\n  // DONE 截取 HTML 字符串，将已匹配到的字符从原有字符中删除。\r\n  function advance(n) {\r\n    // substring() 方法用于提取字符串中介于两个指定下标之间的字符。\r\n    html = html.substring(n);\r\n  }\r\n}\r\n","// 注意: 这只是从数组 (attrsList) 中删除了属性，以便不被 processAttrs 处理。\r\n// 默认情况下，它不会从映射 (attrsMap) 中删除它，因为在代码生成期间需要映射。\r\n\r\n// done: 获取并从 attrsList 数组中删除属性\r\nexport function getAndRemoveAttr(el, name, removeFromMap) {\r\n  let val;\r\n  if ((val = el.attrsMap[name]) != null) {\r\n    const list = el.attrsList;\r\n    for (let i = 0, l = list.length; i < l; i++) {\r\n      if (list[i].name === name) {\r\n        list.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  // removeFromMap 为真，则从 attrsMap 中删除属性\r\n  if (removeFromMap) {\r\n    delete el.attrsMap[name];\r\n  }\r\n  return val;\r\n}\r\n\r\n// done: 获取绑定的属性\r\nexport function getBindingAttr(el, name, getStatic) {\r\n  const dynamicValue =\r\n    getAndRemoveAttr(el, ':' + name) || getAndRemoveAttr(el, 'v-bind:' + name);\r\n\r\n  // 动态绑定属性，例如，v-bind:key = 'index' 或 :key = 'index'\r\n  if (dynamicValue != null) {\r\n    // return parseFilters(dynamicValue)\r\n    return dynamicValue;\r\n  } else if (getStatic !== false) {\r\n    // 静态绑定属性，例如，ref = \"nameRef\"\r\n    const staticValue = getAndRemoveAttr(el, name);\r\n    if (staticValue != null) {\r\n      return JSON.stringify(staticValue);\r\n    }\r\n  }\r\n}\r\n\r\n// DONE 为 ast 对象添加 attrs 属性\r\nexport function addAttr(el, name, value, range, dynamic) {\r\n  const attrs = dynamic\r\n    ? el.dynamicAttrs || (el.dynamicAttrs = [])\r\n    : el.attrs || (el.attrs = []);\r\n  attrs.push(\r\n    rangeSetItem(\r\n      {\r\n        name,\r\n        value,\r\n        dynamic\r\n      },\r\n      range\r\n    )\r\n  );\r\n  el.plain = false;\r\n}\r\n\r\n// DONE 合并对象属性\r\nfunction rangeSetItem(item, range) {\r\n  if (range) {\r\n    if (range.start != null) {\r\n      item.start = range.start;\r\n    }\r\n    if (range.end != null) {\r\n      item.end = range.end;\r\n    }\r\n  }\r\n  return item;\r\n}\r\n\r\n// DONE 依据 key 值，选出相应模块函数\r\nexport function pluckModuleFunction(modules, key) {\r\n  return modules ? modules.map((m) => m[key]).filter((_) => _) : [];\r\n}\r\n","import { parseText } from './text-parser';\nimport { parseHTML } from './html-parser';\nimport { addAttr } from '../helpers';\nimport { extend } from '../../shared/util';\nimport {\n    getAndRemoveAttr,\n    getBindingAttr,\n    pluckModuleFunction\n} from '../helpers';\n\n// 匹配 v-for='(item,index) in arrList' 中的：'(item,index) in arrList'，这里仅是举例\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\n// 匹配圆括号 ——> ()\nconst stripParensRE = /^\\(|\\)$/g;\n// 匹配',' 和 'index'，例如：item, index ——> , index\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\n\n/*\n  假设模板样例：\n   <div id=\"app\" style=\"color: #f66;font-size: 20px;\">\n    函数字符串，{{ tip }}\n    <span class=\"cla\">{{ studentNum }}</span>\n  </div>\n*/\n\nlet transforms;\n\n// done: 解析模版字符串，生成 ast 语法树\nexport function parse(template, options) {\n    // 获取 transformNode 函数，用于处理 class、style 等属性\n    transforms = pluckModuleFunction(options.modules, 'transformNode');\n\n    const stack = []; // 存放所有开始标签的初始 AST 对象\n    let root; // 最终返回的 AST 对象\n    let currentParent; // 当前元素的父级\n\n    parseHTML(template, {\n        // DONE 标签开始\n        start(tag, attrs) {\n            // 创建 AST 对象\n            const element = createASTElement(tag, attrs);\n            processFor(element); // 处理 v-for 指令\n\n            // 如果 root 根节点不存在，则说明当前节点即是整个模版的最顶层节点，也就是第一个节点\n            if (!root) {\n                root = element;\n            }\n\n            // 保存当前父节点（AST 对象）\n            currentParent = element;\n            // 将 AST 对象 push 到 stack 栈中，当解析到其相对应的结束标签时，\n            // 则将这个标签对应的 AST 对象 从栈中 pop 出来。\n\n            // 原因：解析开始标签时，是顺时针；解析结束标签时，是逆时针。结合模板样例看，\n            // 解析顺序如下：<div> => <span> => ...  => </span> => </div>\n\n            // 因此，解析开始标签生成的 AST 对象被 push 到栈中后，若想在解析到其相应的结束标签时取出，\n            // 则要使用 pop。整个操作流程，结合 start() 和 end() 方法一起看，会更易理解。\n\n            stack.push(element);\n        },\n\n        // done: 标签结束\n        end(tag) {\n            // pop() 方法将删除数组的最后一个元素，把数组长度减 1，并且返回它删除的元素的值。\n            // 如果数组已经为空，则 pop() 不改变数组，并返回 undefined 值。\n\n            const element = stack.pop(); // 获取当前元素标签的 AST 对象\n            currentParent = stack[stack.length - 1]; // 获取当前元素标签的父级 AST 对象\n\n            // 处理 ast 对象中的属性\n            processElement(element);\n\n            if (currentParent) {\n                // 标记父子元素\n                element.parent = currentParent; // 子元素存储父元素\n                currentParent.children.push(element); // 父元素存入子元素\n            }\n        },\n\n        // done: 解析文本\n        chars(text) {\n            if (!currentParent) {\n                return;\n            }\n\n            let res;\n            let child;\n            const children = currentParent.children;\n\n            text = text.trim(); // 去掉首尾空格\n            if (text) {\n                // console.log('text------解析文本-->', 'text: ' + text, 'children: ', children);\n                if (text !== ' ' && (res = parseText(text))) {\n                    child = {\n                        type: 2, // 标记 ast 对象子元素的类型\n                        text,\n                        expression: res.expression,\n                        tokens: res.tokens\n                    };\n    \n                } else if (\n                    text !== ' ' ||\n                    !children.length ||\n                    children[children.length - 1].text !== ' '\n                ) {\n                    \n                    child = {\n                        type: 3, // 标记 ast 对象子元素的类型\n                        text,\n                    };\n                    \n                }\n\n                if (child) {\n                    children.push(child);\n                }\n            }\n        }\n    });\n\n    return root;\n}\n\n// done: 生成 ast 对象\nfunction createASTElement(tagName, attrs) {\n    return {\n        tag: tagName, // 标签名\n        type: 1, // 标记 ast 对象类型\n        children: [], // 标签子级\n        attrsList: attrs, // 标签属性\n        attrsMap: makeAttrsMap(attrs),\n        parent // 标签父级\n    };\n}\n\n// DONE 标签属性的映射\nfunction makeAttrsMap(attrs) {\n    const map = {};\n    for (var i = 0, len = attrs.length; i < len; i++) {\n        if (map[attrs[i].name]) {\n            console.log('duplicate attribute: 属性重复' + attrs[i].name, attrs[i]);\n            return false;\n        }\n        map[attrs[i].name] = attrs[i].value;\n    }\n    return map;\n}\n// done: 处理 v-for 指令\nfunction processFor(el) {\n    // 获取并从 attrsList 数组中删除属性\n    const exp = getAndRemoveAttr(el, 'v-for');\n    // 判断 v-for 是否存在\n    if (exp && typeof exp === 'string') {\n        const res = parseFor(exp); // 解析 v-for 指令\n        if (res) {\n            // 将 res 中的属性（例如：item、arrList）添加到目标对象（el即ast对象）中\n            extend(el, res);\n        } else {\n            console.log(`Invalid v-for expression: ${exp}`);\n        }\n    }\n}\n// done: 解析 v-for 指令\nfunction parseFor(exp) {\n    // 匹配 v-for='(item,index) in arrList' 中的：'(item,index) in arrList'，这里仅是举例\n    const inMatch = exp.match(forAliasRE);\n    // 如果没有找到任何匹配的文本， match() 将返回 null。否则，它将返回一个数组，\n    // 其中存放了与它找到的匹配文本有关的信息。\n    if (!inMatch) return;\n\n    const res = {};\n    // 获取 arrList 并去掉其前后空格\n    res.for = inMatch[2].trim();\n    // 获取 (item, index) 并去掉其前后空格以及将圆括号即 () 替换为空。例如：(item, index) ——> item, index\n    const alias = inMatch[1].trim().replace(stripParensRE, '');\n    // 匹配 ',' 和 'index'，例如：item, index ——> , index\n    const iteratorMatch = alias.match(forIteratorRE);\n\n    // iteratorMatch 为真，说明你使用 v-for 时，写的是 (item, index)。否则，就是 (item) 或 item。\n    if (iteratorMatch) {\n        // 将 ',' 和 'index'替换为空，得到 item 并去除其前后空格。例如：item, index ——> item\n        res.alias = alias.replace(forIteratorRE, '').trim();\n        // 获取 index 并去除其前后空格\n        res.iterator1 = iteratorMatch[1].trim();\n        if (iteratorMatch[2]) {\n            // 若是走到这里，说明你多写了逗号。例如：(item, , , index)。\n            // 而这时，index 的值在 iteratorMatch[2] 的位置\n            res.iterator2 = iteratorMatch[2].trim();\n        }\n    } else {\n        res.alias = alias;\n    }\n\n    return res;\n}\n\n// done: 处理 ast 对象\nfunction processElement(element) {\n    // 处理 key\n    processKey(element);\n\n    // 在删除结构属性后确定这是否是普通元素\n    element.plain =\n        !element.key && !element.scopedSlots && !element.attrsList.length;\n\n    // 处理 class 或 style 属性\n    for (let i = 0; i < transforms.length; i++) {\n        element = transforms[i](element) || element;\n    }\n    \n    processAttrs(element); // 处理属性\n\n    return element;\n}\n\n// done: 处理 key\nfunction processKey(el) {\n    const exp = getBindingAttr(el, 'key');\n\n    if (exp) {\n        if (el.tag === 'template') {\n            console.log(`<template>不能被设置 key。请将 key 放在真实元素上。`);\n            return false;\n        }\n\n        if (el.for) {\n            const iterator = el.iterator2 || el.iterator1;\n            const parent = el.parent;\n\n            if (\n                iterator &&\n                iterator === exp &&\n                parent &&\n                parent.tag === 'transition-group'\n            ) {\n                console.log(\n                    `不要使用 v-for 索引（index）作为 <transition-group> 子节点的 key`\n                );\n                return false;\n            }\n        }\n\n        el.key = exp;\n    }\n}\n\n// DONE 处理属性\nfunction processAttrs(el) {\n    const list = el.attrsList;\n    let i, l, name, rawName, value;\n\n    for (i = 0, l = list.length; i < l; i++) {\n        name = rawName = list[i].name;\n        value = list[i].value;\n        // 为 ast 对象添加 attrs 属性，用于存放 ast 中的属性\n        addAttr(el, name, JSON.stringify(value), list[i]);\n    }\n}\n","import { pluckModuleFunction } from \"../helpers\";\n\n/* \n  以下三个个函数的作用：\n\n  _c() => createElement() 创建元素节点\n\n  _v() => createTextNode() 创建文本节点\n\n  _s(value) => _s(tip) 解析双大括号，例如：{{tip}}\n*/\n\n/*\n  ast => render 渲染函数\n\n  function render() {\n    return `_c(\"div\",{id: \"app\",style:{ \"color\":\"#f66\",\"font-size\":\"20px\"}},\n      _v(\"函数字符串，\"+_s(tip)),\n      _c(\"span\", { \"class\": \"cla\", \"style\": { \"color\": \"green\" } }, _v(_s(studentNum)))  \n    )`;\n  }\n*/\n\n// DONE: 生成配置状态对象\nfunction codegenState(options) {\n  return {\n    options,\n    // 获取 class 和 style 模块中的 genData函数，用于拼接 class 和 style 属性\n    dataGenFns: pluckModuleFunction(options.modules, \"genData\"),\n  };\n}\n\n// DONE: 代码字符串生成器\nexport function generate(ast, options) {\n  const state = codegenState(options); // 配置\n  const code = ast\n    ? ast.tag === \"script\"\n      ? \"null\"\n      : genElement(ast, state)\n    : '_c(\"div\")';\n\n  return code;\n}\n\n// done: 处理元素，生成相应的字符串\nfunction genElement(el, state) {\n  if (el.for && !el.forProcessed) {\n    return genFor(el, state);\n  } else {\n    // 处理 element\n    let code;\n    let data;\n\n    if (!el.plain) {\n      data = genData(el, state);\n    }\n\n    const children = genChildren(el, state, true);\n\n    code = `_c('${el.tag}'${\n      data ? `,${data}` : \"\" // data\n    }${\n      children ? `,${children}` : \"\" // children\n    })`;\n\n    return code;\n  }\n}\n\n// DONE: 处理有 v-for 指令的 ast 对象\nfunction genFor(el, state) {\n//   console.log('有v-for指令的元素对象--->', el);\n  const exp = el.for; // 要遍历的数组\n  const alias = el.alias; // 数组中的每一项\n\n  // 每一项的下标值即 index\n  const iterator1 = el.iterator1 ? `,${el.iterator1}` : \"\";\n  const iterator2 = el.iterator2 ? `,${el.iterator2}` : \"\";\n\n  el.forProcessed = true; // 避免递归时，重复处理\n\n  // 生成字符串函数\n  return (\n    `${\"_l\"}((${exp}),` +\n    `function(${alias}${iterator1}${iterator2}){` +\n    `return ${genElement(el, state)}` +\n    \"})\"\n  );\n}\n\n// DONE: 处理 ast 对象中的各种属性，将它们拼接成字符串\nfunction genData(el, state) {\n  let data = \"{\";\n\n  // key\n  if (el.key) {\n    data += `key:${el.key},`;\n  }\n\n  // 拼接已处理好的 class 或 style 属性\n  for (let i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += `attrs:${genProps(el.attrs)},`;\n  }\n\n  data = data.replace(/,$/, \"\") + \"}\";\n\n  return data;\n}\n\n// DONE: 处理子节点\nfunction genChildren(el, state, checkSkip) {\n  const children = el.children;\n  // 是否存在子节点\n  if (children.length) {\n    const normalizationType = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0;\n      \n    return `[${children.map((c) => genNode(c, state)).join(\",\")}]${\n      normalizationType ? `,${normalizationType}` : \"\"\n    }`;\n  }\n}\n\n// DONE: 确定子数组需要的规范化。\n// 0:不需要标准化\n// 1:需要简单的规范化(可能是1级深嵌套数组)\n// 2:需要完全标准化\nfunction getNormalizationType(children, maybeComponent) {\n  let res = 0;\n  for (let i = 0; i < children.length; i++) {\n    const el = children[i];\n\n    if (el.type !== 1) {\n      continue;\n    }\n\n    if (needsNormalization(el)) {\n      res = 2;\n      break;\n    }\n  }\n\n  return res;\n}\n\nfunction needsNormalization(el) {\n    return el.for !== undefined || el.tag === \"template\" || el.tag === \"slot\";\n}\n\n// DONE: 将属性拼接成字符串\n// 例如：`style:{ \"color\":\"#f66\",\"font-size\":\"20px\"}`\nfunction genProps(props) {\n  let staticProps = ``;\n  let dynamicProps = ``;\n\n  for (let i = 0; i < props.length; i++) {\n    const prop = props[i];\n    const value = transformSpecialNewlines(prop.value);\n\n    if (prop.dynamic) {\n      dynamicProps += `${prop.name},${value},`;\n    } else {\n      staticProps += `\"${prop.name}\":${value},`;\n    }\n  }\n  staticProps = `{${staticProps.slice(0, -1)}}`;\n\n  if (dynamicProps) {\n    return `_d(${staticProps},[${dynamicProps.slice(0, -1)}])`;\n  } else {\n    return staticProps;\n  }\n}\n// DONE: 根据类型的不同进行相应处理\nfunction genNode(node, state) {\n  if (node.type === 1) {\n    // 元素节点\n    return genElement(node, state);\n  } else {\n    // 文本节点\n    return genText(node);\n  }\n}\n\n// DONE: 处理文本节点\nfunction genText(text) {\n  // 在模板编译阶段，已通过 parseText 函数对文本进行了处理\n  return `_v(${\n    text.type === 2\n      ? text.expression\n      : transformSpecialNewlines(JSON.stringify(text.text))\n  })`;\n}\n\n// \\u2028（行分隔符） 和 \\u2029（段落分隔符）会被浏览器理解为换行，\n// 而在Javascript的字符串表达式中是不允许换行的，那样会导致错误。\nfunction transformSpecialNewlines(text) {\n  return text.replace(/\\u2028/g, \"\\\\u2028\").replace(/\\u2029/g, \"\\\\u2029\");\n}\n","import { parse } from './parser/index';\nimport { generate } from './codegen/index';\n\n//编译：HTML字符串（ template ） => AST => render\nexport function compileToFunctions(html, options) {\n  // 解析 HTML 字符串，将其转换成 AST 抽象语法树\n  const ast = parse(html, options);\n  // 将 AST 转换成字符串函数\n  const code = generate(ast, options);\n  // 生成 render 渲染函数\n  const render = new Function(`with(this){ return ${code} }`);\n\n  console.log('生成render-->', render);\n  return render;\n}\n\n","import { getAndRemoveAttr, getBindingAttr } from '../../../compiler/helpers';\n\n// 处理 class 静态绑定和动态绑定。\nfunction transformNode(el) {\n    // 获取静态绑定的 class\n    const staticClass = getAndRemoveAttr(el, 'class');\n    if (staticClass) {\n        el.staticClass = JSON.stringify(staticClass);\n    }\n\n    // 获取动态绑定的 class\n    const classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n    if (classBinding) {\n        el.classBinding = classBinding;\n    }\n}\n\n// 分别拼接 class 静态和动态属性\nfunction genData(el) {\n    let data = '';\n    if (el.staticClass) {\n        data += `staticClass:${el.staticClass},`;\n    }\n    if (el.classBinding) {\n        data += `class:${el.classBinding},`;\n    }\n    return data;\n}\n\nexport default {\n    staticKeys: ['staticClass'],\n    transformNode,\n    genData\n};\n","import { cached } from '../../../shared/util';\n\n// done: 创建一个解析 style 文本的函数。例如，\"width: 100%;height: 50px;\"\nexport const parseStyleText = cached(function (cssText) {\n  const res = {};\n  const listDelimiter = /;(?![^(]*\\))/g;\n  const propertyDelimiter = /:(.+)/; // 匹配冒号\n  \n  // 以分号进行分割\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      const tmp = item.split(propertyDelimiter); // 以冒号进行分割\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res;\n});\n","import { getAndRemoveAttr, getBindingAttr } from '../../../compiler/helpers';\nimport { parseStyleText } from '../util/style';\n\n// 处理 style 静态绑定和动态绑定。\nfunction transformNode(el) {\n    // 获取静态绑定的 style\n    const staticStyle = getAndRemoveAttr(el, 'style');\n    if (staticStyle) {\n        el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n    }\n\n    // 获取动态绑定的 style\n    const styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n    if (styleBinding) {\n        el.styleBinding = styleBinding;\n    }\n}\n\n// 分别拼接 style 静态和动态属性\nfunction genData(el) {\n    let data = '';\n    if (el.staticStyle) {\n        data += `staticStyle:${el.staticStyle},`;\n    }\n    if (el.styleBinding) {\n        data += `style:(${el.styleBinding}),`;\n    }\n    return data;\n}\n\nexport default {\n    staticKeys: ['staticStyle'],\n    transformNode,\n    genData\n};\n","import klass from './class';\nimport style from './style';\n\nexport default [klass, style];\n","import modules from './modules/index';\n\nexport const baseOptions = {\n  modules\n};\n","/* HTML DOM 方法 */\n\n// DONE 通过指定名称创建一个元素\nexport function createElement(tagName, vnode) {\n  const elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm;\n  }\n  // false 或 null 将删除该属性，但 undefined 不会\n  if (\n    vnode.data &&\n    vnode.data.attrs &&\n    vnode.data.attrs.multiple !== undefined\n  ) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm;\n}\n\n// DONE 创建一个具有指定的命名空间URI和限定名称的元素\n// export function createElementNS(namespace, tagName) {\n//   return document.createElementNS(namespaceMap[namespace], tagName);\n// }\n\n// DONE 创建文本节点\nexport function createTextNode(text) {\n  return document.createTextNode(text);\n}\n\n// DONE 创建注释节点\nexport function createComment(text) {\n  return document.createComment(text);\n}\n\n// DONE 在已有的子节点前插入一个新的子节点\nexport function insertBefore(parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\n// DONE 从子节点列表中删除某个节点\nexport function removeChild(node, child) {\n  node.removeChild(child);\n}\n\n// DONE 向节点的子节点列表的末尾添加新的子节点\n// 提示：如果文档树中已经存在了 newchild，它将从文档树中删除，然后重新插入它的新位置。\n// 如果 newchild 是 DocumentFragment 节点，则不会直接插入它，而是把它的子节点按序插入当前节点的 childNodes[] 数组的末尾。\n// 你可以使用 appendChild() 方法移除元素到另外一个元素。\nexport function appendChild(node, child) {\n  node.appendChild(child);\n}\n// DONE 可返回某节点的父节点\nexport function parentNode(node) {\n  return node.parentNode;\n}\n\n// DONE 返回某个元素之后紧跟的节点（处于同一树层级中）\nexport function nextSibling(node) {\n  return node.nextSibling;\n}\n\n// DONE 获取元素的标签名\nexport function tagName(node) {\n  return node.tagName;\n}\n\n// DONE 设置或者返回指定节点的文本内容\n// 如果你设置了 textContent 属性, 任何的子节点会被移除及被指定的字符串的文本节点替换\nexport function setTextContent(node, text) {\n  node.textContent = text;\n}\n\n// DONE 创建或改变某个新属性。如果指定属性已经存在,则只设置该值\nexport function setStyleScope(node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n","\n// done: vnode（虚拟节点）类\nexport default class VNode {\n    constructor(tag, data, children, text, elm, context) {\n        this.tag = tag;\n        this.data = data;\n        this.children = children;\n        this.text = text;\n        this.elm = elm;\n        this.context = context;\n        this.key = data && data.key;\n    }\n}\n\n\n// done: 创建空节点\nexport const createEmptyVNode = (text = '') => {\n    const node = new VNode();\n    node.text = text;\n    node.isComment = true;\n    return node;\n}\n\n// done: 创建文本 vnode\nexport function createTextVNode(text) {\n    return new VNode(undefined, undefined, undefined, text);\n}\n// done: 解析双大括号中的表达式，例如：{{tip}} => tip\nexport function toString(value) {\n    if (value === null) return;\n    return typeof value === 'object' ? JSON.stringify(value) : value;\n};\n// done: 克隆节点对象。\n//用于静态节点和槽节点，因为它们可以在多个渲染中重用，克隆它们可以避免DOM操作依赖它们的elm引用时出现错误。\nexport function cloneVNode(vnode) {\n    const cloned = new VNode(\n        vnode.tag,\n        vnode.data,\n        //克隆子数组，以避免在克隆子数组时发生原数组的突变。\n        vnode.children && vnode.children.slice(),\n        vnode.text,\n        vnode.elm,\n        vnode.context\n    );\n\n    cloned.key = vnode.key;\n\n    cloned.isCloned = true;\n\n    return cloned;\n}","import { isUndef, isDef, isPrimitive } from '../../shared/util';\nimport VNode, { cloneVNode } from './vnode';\n\n/**\n * 样例展示：结合 patch函数中的 insertBefore 和 removeChild 方法看\n * <body>\n *  <div id=\"app\"></div> 原有的\n *  <div id=\"app\"></div> 新生成的\n *  <script></script>\n * </body>\n *\n */\n\nexport const emptyNode = new VNode('', {}, []); // 创建空的虚拟节点对象\nconst hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\n// done: 创建 patch 函数\nexport function createPatchFunction(backend) {\n    let i, j;\n    const cbs = {};\n\n    // modules 对象中存储着处理 attrs、class 和 style等方法\n    // nodeOps 对象中存储着 HTML DOM 方法。例如，document.createElement()\n    const { modules, nodeOps } = backend;\n\n    // 整合 modules 中的函数并将它们存在 cbs 对象中\n    for (i = 0; i < hooks.length; ++i) {\n        cbs[hooks[i]] = [];\n        for (j = 0; j < modules.length; ++j) {\n            if (isDef(modules[j][hooks[i]])) {\n                cbs[hooks[i]].push(modules[j][hooks[i]]);\n            }\n        }\n    }\n    \n    // done: 创建虚拟节点对象\n    function emptyNodeAt(elm) {\n        const node = new VNode(\n            nodeOps.tagName(elm).toLowerCase(),\n            {},\n            [],\n            undefined,\n            elm\n        );\n        return node;\n    }\n    // done: 调用 cbs.create 数组中函数(主要用于处理 class、style、指令等)\n    function invokeCreateHooks(vnode, insertedVnodeQueue) {\n        for (let i = 0; i < cbs.create.length; ++i) {\n            cbs.create[i](emptyNode, vnode);\n        }\n    }\n    // done: 创建元素\n    function createElm(\n        vnode, // 虚拟节点对象\n        insertedVnodeQueue, // 存储已插入的 vnode 的队列\n        parentElm, // vnode.elm 父元素\n        refElm, // 紧跟在 vnode.elm 之后的元素\n        nested,\n        ownerArray,\n        index\n    ) {\n        if (isDef(vnode.elm) && isDef(ownerArray)) {\n            // 这个 vnode 在之前的渲染中使用过!\n            // 现在它被用作一个新节点，当它被用作插入参考节点时，覆盖它的 elm 会导致潜在的补丁错误。\n            // 相反，我们在为节点创建相关的 DOM 元素之前按需克隆节点。\n            vnode = ownerArray[index] = cloneVNode(vnode);\n        }\n\n        const data = vnode.data; // 获取元素属性\n        const children = vnode.children; // 获取子元素\n        const tag = vnode.tag; // 获取标签\n\n        // 元素节点\n        if (isDef(tag)) {\n            vnode.elm = nodeOps.createElement(tag, vnode);\n            // console.log('元素节点------>', vnode);\n            // 创建子元素\n            createChildren(vnode, children, insertedVnodeQueue);\n            if (isDef(data)) {\n                // 处理元素上的各种属性\n                invokeCreateHooks(vnode, insertedVnodeQueue);\n            }\n            // 插入元素\n            insert(parentElm, vnode.elm, refElm);\n        } else {\n            // 纯文本节点\n            // console.log('文本节点------>', vnode);\n            vnode.elm = nodeOps.createTextNode(vnode.text);\n            insert(parentElm, vnode.elm, refElm);\n        }\n    }\n\n    // DONE 创建子元素\n    function createChildren(vnode, children, insertedVnodeQueue) {\n        if (Array.isArray(children)) {\n            // 检查 children 中的子节点是否有重复的 key 值\n            checkDuplicateKeys(children);\n\n            for (let i = 0; i < children.length; ++i) {\n                createElm(\n                    children[i],\n                    insertedVnodeQueue,\n                    vnode.elm,\n                    null,\n                    true,\n                    children,\n                    i\n                );\n            }\n        } else if (isPrimitive(vnode.text)) { // 是否为原始值\n            nodeOps.appendChild(\n                vnode.elm,\n                nodeOps.createTextNode(vnode.text)\n            );\n        }\n    }\n\n    // done: 检查 key 值是否重复\n    function checkDuplicateKeys(children) {\n        const seenKeys = {};\n        for (let i = 0; i < children.length; i++) {\n            const vnode = children[i];\n            const key = vnode.key;\n\n            if (isDef(key)) {\n                if (seenKeys[key]) {\n                    console.log(\n                        // 检测到重复键:'${key}'。这可能会导致更新错误。\n                        `Duplicate keys detected: '${key}'. This may cause an update error.`,\n                        vnode.context\n                    );\n                } else {\n                    seenKeys[key] = true;\n                }\n            }\n        }\n    }\n    // done: 插入元素\n    function insert(parent, elm, ref) {\n        // 存在父级\n        if (isDef(parent)) {\n            // elm 之后存在元素（有同级的兄弟元素）\n            if (isDef(ref)) {\n                // elm 和 ref 元素的父级元素是同一个（elm 和 ref是同级兄弟元素）\n                if (nodeOps.parentNode(ref) === parent) {\n                    nodeOps.insertBefore(parent, elm, ref);\n                }\n            } else {\n                // elm 之后不存在元素\n                nodeOps.appendChild(parent, elm);\n            }\n        }\n    }\n\n    // DONE 移除节点\n    function removeVnodes(vnodes, startIdx, endIdx) {\n        for (; startIdx <= endIdx; ++startIdx) {\n            const ch = vnodes[startIdx];\n            if (isDef(ch)) {\n                removeNode(ch.elm);\n            }\n        }\n    }\n\n    function removeNode(el) {\n        const parent = nodeOps.parentNode(el);\n        // 元素可能已经由于 v-html 或 v-text而被删除\n        if (isDef(parent)) {\n            nodeOps.removeChild(parent, el);\n        }\n    }\n\n    /**\n     * DONE 将 vnode 虚拟节点生成相应的 HTML 元素\n     * @param { HTMLDivElement } oldVnode => html\n     * @param { Object } vnode => 虚拟节点对象\n     */\n    return function patch(oldVnode, vnode) {\n        console.log(\"path---->执行\", oldVnode, vnode);\n\n        const insertedVnodeQueue = [];\n\n        // 老节点不存在\n        if (isUndef(oldVnode)) {\n            // empty mount (likely as component), create new root element\n            // isInitialPatch = true;\n            // createElm(vnode, insertedVnodeQueue);\n        } else {\n            // 是否为真实元素\n            const isRealElement = isDef(oldVnode.nodeType);\n\n            if (isRealElement) {\n                // 创建空节点对象（初始化部分数据）\n                oldVnode = emptyNodeAt(oldVnode);\n            }\n\n            // 替换现有的 element\n            const oldElm = oldVnode.elm;\n            const parentElm = nodeOps.parentNode(oldElm); // 获取 oldElm 父元素\n\n            // 创建新节点\n            createElm(\n                vnode,\n                insertedVnodeQueue,\n                parentElm,\n                // 返回紧跟 oldElm 之后的元素\n                nodeOps.nextSibling(oldElm)\n            );\n\n            // 销毁旧节点\n            if (isDef(parentElm)) {\n                console.log('执行销毁操作--->', oldVnode);\n                removeVnodes([oldVnode], 0, 0);\n            }\n\n        }\n\n        return vnode.elm;\n    };\n}\n","import { makeMap } from '../../../shared/util';\n\nexport const isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\n// DONE 是否为假值\nexport const isFalsyAttrValue = (val) => {\n  return val == null || val === false;\n};\n","import { isUndef } from '../../../shared/util';\nimport { isEnumeratedAttr, isFalsyAttrValue } from '../util/attrs';\n\nfunction updateAttrs(oldVnode, vnode) {\n  // 新旧虚拟节点都不存在 attr\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return;\n  }\n\n  let key, cur, old;\n  const elm = vnode.elm;\n  const oldAttrs = oldVnode.data.attrs || {};\n  let attrs = vnode.data.attrs || {};\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n\n    // 新旧虚拟节点属性不同\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n\n  for (key in oldAttrs) {\n    // attrs[key] 为 undefined 或 null\n    if (isUndef(attrs[key])) {\n      // key 值不是 contenteditable、draggable 和 spellcheck\n      if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key); // 删除空属性\n      }\n    }\n  }\n}\n\n// 设置属性\nfunction setAttr(el, key, value) {\n  baseSetAttr(el, key, value);\n}\n\nfunction baseSetAttr(el, key, value) {\n  // 若是假值，则删除属性\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    el.setAttribute(key, value);\n  }\n}\n\nexport default {\n  create: updateAttrs,\n  update: updateAttrs\n};\n","/* @flow */\n\nimport { isDef, isObject } from '../../../shared/util';\n\nexport function genClassForVnode(vnode) {\n    let data = vnode.data;\n\n    return renderClass(data.staticClass, data.class);\n}\n\n// 提供拼接好的 class\nexport function renderClass(staticClass, dynamicClass) {\n    // 至少要有一个存在\n    if (isDef(staticClass) || isDef(dynamicClass)) {\n        return concat(staticClass, stringifyClass(dynamicClass));\n    }\n\n    return '';\n}\n\n// 拼接 class\nexport function concat(a, b) {\n    return a ? (b ? a + ' ' + b : a) : b || '';\n}\n\n// 对 class 进行格式化\nexport function stringifyClass(value) {\n    // 数组语法，例如：v-bind:class=\"[activeClass, errorClass]\"\n    if (Array.isArray(value)) {\n        return stringifyArray(value);\n    }\n    // 对象语法，例如：v-bind:class=\"{ active: isActive, 'text-danger': hasError }\"\n    if (isObject(value)) {\n        return stringifyObject(value);\n    }\n    // 字符串\n    if (typeof value === 'string') {\n        return value;\n    }\n\n    return '';\n}\n\n// class 数组绑定语法\nfunction stringifyArray(value) {\n    let res = '';\n    let stringified;\n    for (let i = 0, l = value.length; i < l; i++) {\n        // 递归，遍历 value 数组中的每一项\n        if (isDef((stringified = stringifyClass(value[i]))) && stringified !== '') {\n            if (res) res += ' '; // class 之间要有空格\n            res += stringified;\n        }\n    }\n    return res;\n}\n\n// class 对象绑定语法\nfunction stringifyObject(value) {\n    let res = '';\n    for (const key in value) {\n        if (value[key]) {\n            if (res) res += ' '; // class 之间要有空格\n            res += key;\n        }\n    }\n    return res;\n}\n","import { isUndef } from '../../../shared/util';\nimport { genClassForVnode } from '../util/class';\n\n// 更新 class\nfunction updateClass(oldVnode, vnode) {\n    const el = vnode.elm;\n    const data = vnode.data;\n    const oldData = oldVnode.data;\n    \n    // 判断新旧节点是否有 staticClass 和 class\n    if (\n        isUndef(data.staticClass) &&\n        isUndef(data.class) &&\n        (isUndef(oldData) ||\n            (isUndef(oldData.staticClass) && isUndef(oldData.class)))\n    ) {\n        return;\n    }\n\n    // 获取 class 的值\n    let cls = genClassForVnode(vnode);\n\n    // 如果当前元素的 class 和其上一个设置的class 名相同，则不在重复设置\n    if (cls !== el._prevClass) {\n        el.setAttribute('class', cls);\n        el._prevClass = cls;\n    }\n}\n\nexport default {\n    create: updateClass,\n    update: updateClass\n};\n","import { cached, extend, toObject } from \"../../../shared/util\";\n\n// done: 解析 style 文本（cached 用于创建一个纯函数的缓存）\nexport const parseStyleText = cached(function (cssText) {\n  const res = {};\n  const listDelimiter = /;(?![^(]*\\))/g; // 匹配分号\n  const propertyDelimiter = /:(.+)/; // 匹配冒号\n\n  // 以分号进行分割\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      const tmp = item.split(propertyDelimiter); // 以冒号进行分割\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res;\n});\n\n// done: 合并同一个 vnode 的静态和动态 style\nfunction normalizeStyleData(data) {\n  const style = normalizeStyleBinding(data.style);\n  // 静态样式在编译期间被预处理为对象，并且始终是一个新对象，以便合并到其中是安全的\n  return data.staticStyle ? extend(data.staticStyle, style) : style;\n}\n\n// done: 将可能的数组或字符串值规范化为 Object\nexport function normalizeStyleBinding(bindingStyle) {\n  // 数组\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle); // 将对象数组合并为单个对象\n  }\n  // 字符串\n  if (typeof bindingStyle === \"string\") {\n    return parseStyleText(bindingStyle); // 解析 style 字符串\n  }\n  return bindingStyle;\n}\n\n// done: 获取 style 样式\n// 父组件的样式应该在子组件的样式之后，以便父组件的样式可以覆盖它\nexport function getStyle(vnode, checkChild) {\n  const res = {};\n  let styleData;\n\n  if (checkChild) { // 为真，则检查子节点\n    let childNode = vnode;\n\n    // 子节点是否为组件\n    while (childNode.componentInstance) { \n      childNode = childNode.componentInstance._vnode; // 子组件节点\n      if (\n        childNode &&\n        childNode.data &&\n        (styleData = normalizeStyleData(childNode.data))\n      ) {\n        extend(res, styleData); // 混合属性到目标对象中\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData); // 混合属性到目标对象中\n  }\n\n  let parentNode = vnode;\n  // 存在父节点\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res;\n}\n","import { getStyle, normalizeStyleBinding } from \"../util/style\";\nimport {\n  cached,\n  camelize,\n  extend,\n  isDef,\n  isUndef,\n  hyphenate,\n} from \"../../../shared/util\";\n\nconst cssVarRE = /^--/;\nconst importantRE = /\\s*!important$/;\n\nconst setProp = (el, name, val) => {\n  // cssVarRE 是针对使用 了CSS 自定义属性（变量）的情况，例如：element { color: var(--bg-color);}\n  // 相关文档：https://developer.mozilla.org/zh-CN/docs/Web/CSS/Using_CSS_custom_properties\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    // 设置属性的同时，规定其优先级为 'important'\n    el.style.setProperty(\n      hyphenate(name),\n      val.replace(importantRE, \"\"),\n      \"important\"\n    );\n  } else {\n    const normalizedName = normalize(name); // 规范化 style 属性名\n    if (Array.isArray(val)) {\n      // style 绑定中的 property 提供一个包含多个值的数组，常用于提供多个带前缀的值，例如：\n      // <div :style=\"{ display: ['-webkit-box', '-ms-flexbox', 'flex'] }\"></div>\n      // 逐个设置，浏览器将只设置它能识别的。如果浏览器支持不带浏览器前缀的 flexbox，\n      // 那么就只会渲染 display: flex\n      for (let i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n// -moz --> Firefox浏览器  -webkit --> Chrome 和 Safari浏览器  -ms --> IE浏览器\nconst vendorNames = [\"Webkit\", \"Moz\", \"ms\"];\n\nlet emptyStyle;\n// cached 用于创建一个纯函数的缓存\nconst normalize = cached(function (prop) {\n  // 获取 style（ CSSStyleDeclaration 样式声明对象 ）上的所有属性\n  emptyStyle = emptyStyle || document.createElement(\"div\").style;\n\n  // 将连字符分隔的字符串驼峰化，例如：background-color --> backgroundColor\n  prop = camelize(prop);\n\n  // 不是 filter 且存在于 emptyStyle 中\n  if (prop !== \"filter\" && prop in emptyStyle) {\n    return prop;\n  }\n\n  // 若是走到这，则说明是 filter\n  const capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (let i = 0; i < vendorNames.length; i++) {\n    // 拼接上各个浏览器的前缀，例如：WebkitFilter\n    const name = vendorNames[i] + capName;\n    // 再次判断是否存在于 emptyStyle 中\n    if (name in emptyStyle) {\n      return name;\n    }\n  }\n});\n\n// done: 更新 style\nfunction updateStyle(oldVnode, vnode) {\n  const data = vnode.data;\n  const oldData = oldVnode.data;\n\n  // 判断新旧节点是否有 staticStyle 和 style\n  if (\n    isUndef(data.staticStyle) &&\n    isUndef(data.style) &&\n    isUndef(oldData.staticStyle) &&\n    isUndef(oldData.style)\n  ) {\n    return;\n  }\n\n  let cur, name;\n  const el = vnode.elm;\n  const oldStaticStyle = oldData.staticStyle; // 旧的静态 style\n  const oldStyleBinding = oldData.normalizedStyle || oldData.style || {}; // 旧的动态 style\n\n  // 获取 style 的老样式\n  const oldStyle = oldStaticStyle || oldStyleBinding;\n  // 规范化 style 样式\n  const style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // 提示：__ob__ 指的是 Observe 类，可参考相关文件路径：src/core/observe/index.js\n\n  // 存储规范化样式在一个不同的键下，以便下一次 diff\n  // 如果它是响应性的（style.__ob__），请确保克隆它，因为用户可能想要改变它\n  vnode.data.normalizedStyle = isDef(style.__ob__) ? extend({}, style) : style;\n\n  // 获取 style 样式\n  const newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    // 旧的样式属性在新样式中不存在，则设置 style 属性为空\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, \"\");\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    // 新旧样式属性不重复，则设置 style 属性\n    if (cur !== oldStyle[name]) {\n      // Ie9设置为空没有效果，必须使用空字符串\n      setProp(el, name, cur == null ? \"\" : cur);\n    }\n  }\n}\n\nexport default {\n  create: updateStyle,\n  update: updateStyle,\n};\n","import attrs from './attrs';\nimport klass from './class';\nimport style from './style';\n\nexport default [attrs, klass, style];\n","import * as nodeOps from './node-ops';\nimport { createPatchFunction } from '../../core/vdom/patch';\nimport platformModules from './modules/index';\n\nconst modules = platformModules;\n\nexport const patch = createPatchFunction({ nodeOps, modules });\n","import { initState } from './state';\nimport { mountComponent } from './lifecycle';\nimport { compileToFunctions } from '../../compiler/index';\nimport { baseOptions } from '../../web/compiler/options';\nimport { patch } from '../../web/runtime/patch';\n\nexport function initMixin(Vue) {\n  // 初始化函数\n  Vue.prototype._init = function (options) {\n    const vm = this; // 存储 this（ Vue实例 ）\n    vm.$options = options; // 将 options 挂载到 vm 上，以便后续使用\n\n    // Vue 实例中的 data、 props、methods、computed 和 watch，都会在 initState 函数中\n    // 进行初始化。由于我们主要解说：Vue 数据劫持，所以只对 data 进行处理。\n    initState(vm);\n\n    if (vm.$options.el) {\n      // Vue.prototype.$mount --> 挂载函数\n      vm.$mount(vm.$options.el);\n    }\n  };\n  // 挂载函数\n  Vue.prototype.$mount = function (el) {\n    const vm = this;\n    const options = vm.$options;\n\n    // Vue 选项中的 render 函数若存在，则 Vue 构造函数不会从\n    // template 选项或通过 el 选项指定的挂载元素中提取出的 HTML 模板编译渲染函数。\n\n    // 处理模板（优先级）: render  >  template   >  html模板\n\n    // 若是 render 函数不存在，就生成 render\n    if (!options.render) {\n      let template = options.template; // 获取模板\n\n      // el存在，且 template 不存在\n      if (el && !template) {\n        // 挂载 el（ HTML 模板），以便在实例的 _update 方法中使用\n        vm.$el = document.querySelector(el);\n        template = vm.$el.outerHTML;\n      }\n\n      // 编译模板，生成 AST 抽象语法树并将其生成渲染函数 render\n      const render = compileToFunctions(template, baseOptions);\n      options.render = render; // 挂载 render\n    }\n    // 挂载组件\n    mountComponent(vm);\n  };\n\n  // patch 函数，用于创建文档树\n  Vue.prototype.__patch__ = patch;\n}\n","\nimport { createTextVNode } from '../vnode'\nimport { isFalse, isTrue, isDef, isUndef, isPrimitive } from '../../../shared/util'\n\n// 模板编译器试图通过在编译时静态分析模板来最小化规范化的需要。\n// 对于普通的HTML标记，可以完全跳过标准化，因为生成的渲染函数保证返回 Array<VNode>。\n// 且有两种情况需要额外的规范化:\n\n// 1. 当子组件包含组件时——因为函数组件可能返回Array而不是单个根。\n// 在这种情况下，只需要一个简单的标准化——如果任何子元素是Array，我们就用Array.prototype.concat将整个元素平化。\n// 它保证只有一级深度，因为功能组件已经规范化了它们自己的子组件。\n\n// 2. 当子元素包含总是生成嵌套数组的构造时，例如：<template>, <slot>, v-for 或者当用户用手写的 render函数 / JSX 提供子对象时。\n// 在这种情况下，需要完全标准化，以满足所有可能类型的子元素值。\n\n// done: 对 children 进行完全标准化\n// normalizeChildren 用于第二种情况，且在目前的代码中只做了对 v-for 的处理\nexport function normalizeChildren(children) {\n    return isPrimitive(children)\n        ? [createTextVNode(children)]\n        : Array.isArray(children)\n            ? normalizeArrayChildren(children)\n            : undefined;\n}\n\n// done: 是否为文本节点\nfunction isTextNode(node) {\n    return isDef(node) && isDef(node.text) && isFalse(node.isComment);\n}\n\n// done: 标准化数组子元素\nfunction normalizeArrayChildren(children, nestedIndex) {\n    const res = [];\n    let i, c, lastIndex, last;\n    for (i = 0; i < children.length; i++) {\n        c = children[i];\n        if (isUndef(c) || typeof c === 'boolean') continue;\n        lastIndex = res.length - 1;\n        last = res[lastIndex];\n\n        //  处理嵌套\n        if (Array.isArray(c)) {\n            if (c.length > 0) {\n                c = normalizeArrayChildren(c, `${nestedIndex || ''}_${i}`)\n                // 合并相邻文本节点\n                if (isTextNode(c[0]) && isTextNode(last)) {\n                    res[lastIndex] = createTextVNode(last.text + (c[0]).text)\n                    c.shift()\n                }\n                res.push.apply(res, c)\n            }\n        } else if (isPrimitive(c)) { // 是否为原始值\n\n            if (isTextNode(last)) {\n                // 合并相邻的文本节点，这对于 SSR hydration 是必要的，\n                // 因为文本节点在呈现为HTML字符串时本质上是合并的\n                res[lastIndex] = createTextVNode(last.text + c)\n            } else if (c !== '') {\n                // 将 primitive 转换为 vnode\n                res.push(createTextVNode(c))\n            }\n        } else {\n            if (isTextNode(c) && isTextNode(last)) {\n                // 合并相邻的文本节点\n                res[lastIndex] = createTextVNode(last.text + c.text)\n            } else {\n                // 嵌套数组子数组的默认键(可能由v-for生成)\n                if (isTrue(children._isVList) &&\n                    isDef(c.tag) &&\n                    isUndef(c.key) &&\n                    isDef(nestedIndex)) {\n                    c.key = `__vlist${nestedIndex}_${i}__`\n                }\n                res.push(c)\n            }\n        }\n    }\n\n    return res\n}\n","import VNode from \"./vnode\";\n\nimport { isTrue, isPrimitive } from \"../../shared/util\";\nimport { normalizeChildren } from \"./helpers/index\";\n\nconst SIMPLE_NORMALIZE = 1;\nconst ALWAYS_NORMALIZE = 2;\n\n// done: 创建元素 vnode 的包装器函数，提供更灵活的接口且不会被干扰\nexport function createElement(\n    tag,\n    data,\n    children,\n    normalizationType,\n    alwaysNormalize\n) {\n    // data 是数组或原始值，则对数据进行替换。\n    // 对于此处逻辑代码，建议结合生成的 render 渲染函数（看 Readme.md 文档）和 vue 官网文档-虚拟 DOM 章节进行理解(下方是链接)\n    // https://cn.vuejs.org/v2/guide/render-function.html#%E8%99%9A%E6%8B%9F-DOM\n\n    if (Array.isArray(data) || isPrimitive(data)) {\n        // console.log(\"data是数组或原始值------------------->\", tag, data, children);\n        normalizationType = children;\n        children = data;\n        data = undefined;\n    }\n\n    // normalizationType 值: 1 代表简单标准化  2 代表完全标准化\n    // alwaysNormalize 为 true，则需要对 children 进行完全标准化。\n    if (isTrue(alwaysNormalize)) {\n        normalizationType = ALWAYS_NORMALIZE;\n    }\n\n    return _createElement(tag, data, children, normalizationType);\n}\n// done: 创建元素 vnode\nexport function _createElement(tag, data, children, normalizationType) {\n    // console.log(\"_createElement--->执行\", tag, data, children);\n\n    if (normalizationType === ALWAYS_NORMALIZE) {\n        children = normalizeChildren(children); // children 需要完全标准化\n    }\n\n    let vnode;\n    if (typeof tag === \"string\") {\n        vnode = new VNode(tag, data, children, undefined, undefined);\n    }\n\n    return vnode;\n}\n","import { isDef, isObject, hasSymbol } from '../../../shared/util';\n\n\n// done: 处理 v-for 指令中的 lists（即要遍历的数组、字符串、数字或对象）\nexport function renderList(val, render) {\n    var ret, i, l, keys, key;\n    if (Array.isArray(val) || typeof val === \"string\") {\n        // val 是数组或字符串\n        ret = new Array(val.length);\n        for (i = 0, l = val.length; i < l; i++) {\n            // console.log('有ret------------------>', val[i], i);\n\n            ret[i] = render(val[i], i);\n        }\n    } else if (typeof val === \"number\") {\n        // val 是数字\n        ret = new Array(val);\n        for (i = 0; i < val; i++) {\n            ret[i] = render(i + 1, i);\n        }\n    } else if (isObject(val)) {\n        // val 是 'object' 对象\n\n        if (hasSymbol && val[Symbol.iterator]) {\n            // val 是 Symbol\n            ret = [];\n            var iterator = val[Symbol.iterator]();\n            var result = iterator.next();\n            while (!result.done) {\n                ret.push(render(result.value, ret.length));\n                result = iterator.next();\n            }\n        } else {\n            // val 是普通对象\n            keys = Object.keys(val);\n            ret = new Array(keys.length);\n            for (i = 0, l = keys.length; i < l; i++) {\n                key = keys[i];\n                ret[i] = render(val[key], key, i);\n            }\n        }\n    }\n    // ret 不存在，则设置为空数组\n    if (!isDef(ret)) {\n        ret = [];\n    }\n    // 标记为已处理\n    ret._isVList = true;\n    \n    return ret;\n}","\nimport { createTextVNode, toString } from '../../vdom/vnode'\nimport { createElement } from '../../vdom/create-element'\nimport { renderList } from './render-list'\n\n\nexport function installRenderHelpers (target) {\n  target._v = createTextVNode;\n  target._c = createElement;\n  target._s = toString;\n  target._l = renderList;\n}\n","import { installRenderHelpers } from './render-helpers/index'\n\nexport function renderMixin(Vue) {\n    // 安装运行时所需的辅助性渲染函数\n    installRenderHelpers(Vue.prototype);\n\n    // 调用 vm.$options.render 渲染函数，生成虚拟节点\n    Vue.prototype._render = function () {\n        const vm = this;\n        const vnode = vm.$options.render.call(vm); // 生成虚拟节点对象并返回\n\n        return vnode;\n    };\n}","import { initMixin } from './init';\nimport { lifecycleMixin } from './lifecycle';\nimport { renderMixin } from './render';\n\nfunction Vue(options) {\n    // 通过关键字 new 创建 Vue实例时，便会调用 Vue 原型方法 _init 初始化数据\n    this._init(options);\n}\n\n// 初始化相关操作\ninitMixin(Vue);\n// 生命周期相关操作\nlifecycleMixin(Vue);\n// 渲染相关操作\nrenderMixin(Vue);\n\nexport default Vue;","import Vue from './instance/index';\n\nVue.version = '2.0';\n\nexport default Vue\n"],"names":["proxy","vm","target","key","Object","defineProperty","get","set","newValue","hasProto","camelizeRE","camelize","cached","str","replace","_","c","toUpperCase","hyphenateRE","hyphenate","toLowerCase","def","obj","val","enumerable","value","writable","configurable","isObject","toObject","arr","res","i","length","extend","to","_from","fn","cache","create","cachedFn","hit","hasSymbol","Symbol","isNative","Reflect","ownKeys","Ctor","test","toString","isUndef","v","undefined","isDef","isPrimitive","makeMap","expectsLowerCase","map","list","split","isTrue","isFalse","methodsToPatch","arrayProto","Array","prototype","arrayMethods","forEach","method","original","mutator","args","result","apply","ob","__ob__","inserted","slice","observeArray","arrayKeys","getOwnPropertyNames","observe","Observer","constructor","isArray","protoAugment","copyAugment","walk","keys","defineReactive","items","l","data","reactiveGetter","reactiveSetter","src","__proto__","initState","options","$options","initData","$data","call","mountComponent","_update","_render","lifecycleMixin","Vue","vnode","console","log","$el","__patch__","defaultTagRE","parseText","text","tagRE","tokens","rawTokens","lastIndex","match","index","tokenValue","exec","push","JSON","stringify","exp","trim","expression","join","attribute","ncname","qnameCapture","startTagOpen","RegExp","startTagClose","endTag","parseHTML","html","textEnd","indexOf","startTagMatch","parseStartTag","start","tagName","attrs","endTagMatch","end","advance","substring","chars","attr","name","n","getAndRemoveAttr","el","removeFromMap","attrsMap","attrsList","splice","getBindingAttr","getStatic","dynamicValue","staticValue","addAttr","range","dynamic","dynamicAttrs","rangeSetItem","plain","item","pluckModuleFunction","modules","m","filter","forAliasRE","stripParensRE","forIteratorRE","transforms","parse","template","stack","root","currentParent","tag","element","createASTElement","processFor","pop","processElement","parent","children","child","type","makeAttrsMap","len","parseFor","inMatch","for","alias","iteratorMatch","iterator1","iterator2","processKey","scopedSlots","processAttrs","iterator","codegenState","dataGenFns","generate","ast","state","code","genElement","forProcessed","genFor","genData","genChildren","genProps","checkSkip","normalizationType","getNormalizationType","maybeComponent","genNode","needsNormalization","props","staticProps","dynamicProps","prop","transformSpecialNewlines","node","genText","compileToFunctions","render","Function","transformNode","staticClass","classBinding","staticKeys","parseStyleText","cssText","listDelimiter","propertyDelimiter","tmp","staticStyle","styleBinding","klass","style","baseOptions","createElement","elm","document","multiple","setAttribute","createTextNode","createComment","insertBefore","parentNode","newNode","referenceNode","removeChild","appendChild","nextSibling","setTextContent","textContent","setStyleScope","scopeId","VNode","context","createTextVNode","cloneVNode","cloned","isCloned","emptyNode","hooks","createPatchFunction","backend","j","cbs","nodeOps","emptyNodeAt","invokeCreateHooks","insertedVnodeQueue","createElm","parentElm","refElm","nested","ownerArray","createChildren","insert","checkDuplicateKeys","seenKeys","ref","removeVnodes","vnodes","startIdx","endIdx","ch","removeNode","patch","oldVnode","isRealElement","nodeType","oldElm","isEnumeratedAttr","isFalsyAttrValue","updateAttrs","cur","old","oldAttrs","setAttr","removeAttribute","baseSetAttr","update","genClassForVnode","renderClass","class","dynamicClass","concat","stringifyClass","a","b","stringifyArray","stringifyObject","stringified","updateClass","oldData","cls","_prevClass","normalizeStyleData","normalizeStyleBinding","bindingStyle","getStyle","checkChild","styleData","childNode","componentInstance","_vnode","cssVarRE","importantRE","setProp","setProperty","normalizedName","normalize","vendorNames","emptyStyle","capName","charAt","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","platformModules","initMixin","_init","$mount","querySelector","outerHTML","normalizeChildren","normalizeArrayChildren","isTextNode","isComment","nestedIndex","last","shift","_isVList","ALWAYS_NORMALIZE","alwaysNormalize","_createElement","renderList","ret","next","done","installRenderHelpers","_v","_c","_s","_l","renderMixin","version"],"mappings":"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"}